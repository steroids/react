{
    "interfaces": {
        "IList": {
            "name": "IList",
            "moduleName": "actions/list",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "action",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | IApiMethod",
                    "example": null
                },
                {
                    "name": "actionMethod",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "condition",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "isFetched",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "isLoading",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "isRemote",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any[]",
                    "example": null
                },
                {
                    "name": "layoutAttribute",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "layoutName",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "null",
                    "example": null
                },
                {
                    "name": "listId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "loadMore",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "meta",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "onFetch",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "pageAttribute",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "pageSizeAttribute",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "scope",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "sortAttribute",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "sourceItems",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any[]",
                    "example": null
                },
                {
                    "name": "total",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "number",
                    "example": null
                }
            ]
        },
        "IShowNotificationParameters": {
            "name": "IShowNotificationParameters",
            "moduleName": "actions/notifications",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "position",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "timeOut",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "number",
                    "example": null
                }
            ]
        },
        "IApiRest": {
            "name": "IApiRest",
            "moduleName": "components/ApiComponent",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": []
        },
        "IApiSendConfig": {
            "name": "IApiSendConfig",
            "moduleName": "components/ApiComponent",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": []
        },
        "Model": {
            "name": "Model",
            "moduleName": "components/MetaComponent",
            "title": "Мета информация о моделе",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": []
        },
        "ModelAttribute": {
            "name": "ModelAttribute",
            "moduleName": "components/MetaComponent",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": []
        },
        "IBemHocInput": {
            "name": "IBemHocInput",
            "moduleName": "hoc/bem",
            "title": "Bem HOC",
            "description": "Прокидывает утилиту `bem` для правильной генерации CSS классов по методологии БЭМ (блок, элемент, модификатор)",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "style",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IBemHocOutput": {
            "name": "IBemHocOutput",
            "moduleName": "hoc/bem",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IComponentsHocOutput"
            ],
            "properties": [
                {
                    "name": "api",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "bem",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IBem",
                    "example": null
                },
                {
                    "name": "clientStorage",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "components",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IComponents",
                    "example": null
                },
                {
                    "name": "html",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "http",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "locale",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "meta",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "pushNotification",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "resource",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "store",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "ui",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "ws",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IComponentsHocOutput": {
            "name": "IComponentsHocOutput",
            "moduleName": "hoc/components",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IComponents"
            ],
            "properties": [
                {
                    "name": "api",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "clientStorage",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "components",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IComponents",
                    "example": null
                },
                {
                    "name": "html",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "http",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "locale",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "meta",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "pushNotification",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "resource",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "store",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "ui",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "ws",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IConnectHocOutput": {
            "name": "IConnectHocOutput",
            "moduleName": "hoc/connect",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "dispatch",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "Dispatch",
                    "example": null
                }
            ]
        },
        "IFetchHocOutput": {
            "name": "IFetchHocOutput",
            "moduleName": "hoc/fetch",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "fetchRefresh",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "fetchUpdate",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                }
            ]
        },
        "IFileHocInput": {
            "name": "IFileHocInput",
            "moduleName": "hoc/file",
            "title": "File HOC",
            "description": "Компонент для асинхронной загрузки файлов на сервер, используется в `FileField`",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "backendUrl",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "imagesExactSize",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "imagesOnly",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "imagesProcessor",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "initialFiles",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "FormInputType",
                    "example": null
                },
                {
                    "name": "mimeTypes",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "multiple",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "uploader",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IFileHocOutput": {
            "name": "IFileHocOutput",
            "moduleName": "hoc/file",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "files",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any[]",
                    "example": null
                },
                {
                    "name": "onAdd",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "onBrowse",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "onRemove",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "uploader",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "ILayoutHocInput": {
            "name": "ILayoutHocInput",
            "moduleName": "hoc/layout",
            "title": "Layout HOC",
            "description": "Используется для макета (layout) приложения, добавляя в него данные авторизации и статуса рендера страницы.\nПередаваемый первым аргументом `initAction` будет вызываться каждый раз, когда необходимо обновить данные\nавторизации (первая загрузка страницы, логин/регистация и выход).",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "components",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "IComponentsHocOutput",
                    "example": null
                },
                {
                    "name": "data",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "initializeCounter",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "isInitialized",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "redirectPageId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "route",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IRoute",
                    "example": null
                },
                {
                    "name": "user",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{role: string}",
                    "example": null
                }
            ]
        },
        "ILayoutHocOutput": {
            "name": "ILayoutHocOutput",
            "moduleName": "hoc/layout",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "data",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "http",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "isInitialized",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "renderError",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "route",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "IRouteItem",
                    "example": null
                },
                {
                    "name": "status",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "user",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IAbsolutePositioningInputProps": {
            "name": "IAbsolutePositioningInputProps",
            "moduleName": "hooks/useAbsolutePositioning",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "autoPositioning",
                    "decorators": [],
                    "description": "Включает \"умное\" позиционирование - если компонент не может быть помещен в промежуток между целевым компонентом\nи краем viewport, тогда он будет показан в противоположном направлении от заданного в свойстве position.",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "children",
                    "decorators": [],
                    "description": "Дочерние элементы",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "componentDestroyDelay",
                    "decorators": [],
                    "description": "Задержка перед размонтированием компонента, когда он должен быть скрыт.\nВ этот момент удобно применять различные анимации ухода.",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "gap",
                    "decorators": [],
                    "description": "Промежуток между компонентом и целевым элементом.\nИспользуется в рассчетах позиционирования.",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "Срабатывает в \"ручном режиме\", при клике за пределами компонента и целевого элемента.\nВозвращает значение visible.",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onVisibleChange",
                    "decorators": [],
                    "description": "Обработчик изменения свойства isComponentVisible (отображение на странице).\nВозвращает значение isComponentVisible.",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "position",
                    "decorators": [],
                    "description": "Позиционирование компонента, относительно целевого элемента",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "visible",
                    "decorators": [],
                    "description": "Отобразить или скрыть компонент.\nВключает \"ручной режим\", при котором можно задать логику отображения компонента извне,\nчерез измененение данного свойства.",
                    "required": false,
                    "type": "boolean",
                    "example": null
                }
            ]
        },
        "IAbsolutePositioningOutputProps": {
            "name": "IAbsolutePositioningOutputProps",
            "moduleName": "hooks/useAbsolutePositioning",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "isComponentExist",
                    "decorators": [],
                    "description": "Нужно ли рендерить компонент",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "isComponentVisible",
                    "decorators": [],
                    "description": "Нужно ли показывать компонент на странице",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект стилей для абсолютного позиционирования",
                    "required": true,
                    "type": "IStyleObj",
                    "example": null
                }
            ]
        },
        "IAddressBarConfig": {
            "name": "IAddressBarConfig",
            "moduleName": "hooks/useAddressBar",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "enable",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "Model",
                    "example": null
                },
                {
                    "name": "useHash",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                }
            ]
        },
        "IAddressBarOutput": {
            "name": "IAddressBarOutput",
            "moduleName": "hooks/useAddressBar",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "initialQuery",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "updateQuery",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                }
            ]
        },
        "IApplicationHookConfig": {
            "name": "IApplicationHookConfig",
            "moduleName": "hooks/useApplication",
            "title": "Application HOC",
            "description": "Обертка над корневым компонентом приложения, используется только в `Application.tsx`. Добавляет через React Context\nкомпоненты приложения и конфигурирует их.",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "components",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "layoutProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "layoutView",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onInit",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "reducers",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "routes",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "screen",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | Omit",
                    "example": null
                },
                {
                    "name": "useGlobal",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                }
            ]
        },
        "IApplicationHookResult": {
            "name": "IApplicationHookResult",
            "moduleName": "hooks/useApplication",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "components",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "IComponents",
                    "example": null
                },
                {
                    "name": "renderApplication",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                }
            ]
        },
        "IBem": {
            "name": "IBem",
            "moduleName": "hooks/useBem",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": []
        },
        "AutoCompleteConfig": {
            "name": "AutoCompleteConfig",
            "moduleName": "hooks/useDataProvider",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "delay",
                    "decorators": [],
                    "description": "Задержка в миллисекундах перед осуществлением запроса",
                    "required": false,
                    "type": "number",
                    "example": "100"
                },
                {
                    "name": "enable",
                    "decorators": [],
                    "description": "Подключить autocomplete?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "minLength",
                    "decorators": [],
                    "description": "Минимальная длина запроса",
                    "required": false,
                    "type": "number",
                    "example": "2"
                }
            ]
        },
        "IDataProviderConfig": {
            "name": "IDataProviderConfig",
            "moduleName": "hooks/useDataProvider",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "autoComplete",
                    "decorators": [],
                    "description": "Настройки поиска",
                    "required": false,
                    "type": "boolean | AutoCompleteConfig",
                    "example": "{enable: true, minLength: 2, delay: 100}"
                },
                {
                    "name": "autoFetch",
                    "decorators": [],
                    "description": "Загрузка данных после любого изменения запроса.\nЕсли включен autoFetch, то настройки autoComplete не применятся.",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "dataProvider",
                    "decorators": [],
                    "description": "Конфигурация для подгрузки данных извне.\nЕсли dataProvider не передан, то поиск данных по запросу происходит локально.",
                    "required": false,
                    "type": "{action: string | IApiMethod, onSearch: {}, params: Record}",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Коллекция элементов",
                    "required": false,
                    "type": "DataProviderItems",
                    "example": "[{id: 1, label: 'Krasnoyarsk'}, {id: 2, label: 'Moscow'}]"
                },
                {
                    "name": "query",
                    "decorators": [],
                    "description": "Текст запроса",
                    "required": false,
                    "type": "string",
                    "example": "'some text'"
                }
            ]
        },
        "IDataProviderResult": {
            "name": "IDataProviderResult",
            "moduleName": "hooks/useDataProvider",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "isAutoComplete",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "isLoading",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{id: string | number | boolean, label: string}[]",
                    "example": null
                },
                {
                    "name": "sourceItems",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{id: string | number | boolean, label: string}[]",
                    "example": null
                }
            ]
        },
        "IDataSelectConfig": {
            "name": "IDataSelectConfig",
            "moduleName": "hooks/useDataSelect",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "inputValue",
                    "decorators": [],
                    "description": "Значение поля в форме",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Список с видимыми элементами",
                    "required": true,
                    "type": "IDataSelectItem[]",
                    "example": "[{id: 1, label: 'Krasnoyarsk'}, {id: 2, label: 'Moscow'}]"
                },
                {
                    "name": "multiple",
                    "decorators": [],
                    "description": "Возможность множественного выбора",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "Первичный ключ для item",
                    "required": false,
                    "type": "string",
                    "example": "id"
                },
                {
                    "name": "selectFirst",
                    "decorators": [],
                    "description": "Сделать активным первый элемент в списке",
                    "required": false,
                    "type": "any",
                    "example": "true"
                },
                {
                    "name": "selectedIds",
                    "decorators": [],
                    "description": "Список с идентификаторами выбранных элементов",
                    "required": true,
                    "type": "any",
                    "example": "[1, 4]"
                },
                {
                    "name": "sourceItems",
                    "decorators": [],
                    "description": " Список со всеми элементами",
                    "required": false,
                    "type": "IDataSelectItem[]",
                    "example": null
                }
            ]
        },
        "IDataSelectResult": {
            "name": "IDataSelectResult",
            "moduleName": "hooks/useDataSelect",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "hoveredId",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "PrimaryKey",
                    "example": null
                },
                {
                    "name": "isFocused",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "isOpened",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "selectedIds",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "PrimaryKey[]",
                    "example": null
                },
                {
                    "name": "setHoveredId",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "setIsFocused",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "setIsOpened",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "setSelectedIds",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                }
            ]
        },
        "IFetchConfig": {
            "name": "IFetchConfig",
            "moduleName": "hooks/useFetch",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "id",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | number",
                    "example": null
                },
                {
                    "name": "method",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "onFetch",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "params",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "url",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | IApiMethod",
                    "example": null
                }
            ]
        },
        "IFetchResult": {
            "name": "IFetchResult",
            "moduleName": "hooks/useFetch",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "data",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{providerData: {type: string, value: string}}",
                    "example": null
                },
                {
                    "name": "fetch",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "isLoading",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                }
            ]
        },
        "ILayout": {
            "name": "ILayout",
            "moduleName": "hooks/useLayout",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "data",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "error",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "status",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                }
            ]
        },
        "IListConfig": {
            "name": "IListConfig",
            "moduleName": "hooks/useList",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "action",
                    "decorators": [],
                    "description": "Url, который вернет коллекцию элементов",
                    "required": false,
                    "type": "string",
                    "example": "api/v1/articles"
                },
                {
                    "name": "actionMethod",
                    "decorators": [],
                    "description": "Тип HTTP запроса (GET | POST | PUT | DELETE)",
                    "required": false,
                    "type": "string",
                    "example": "GET"
                },
                {
                    "name": "addressBar",
                    "decorators": [],
                    "description": "Синхронизация значений формы списка с адресной строкой",
                    "required": false,
                    "type": "boolean | IAddressBar",
                    "example": "true"
                },
                {
                    "name": "autoDestroy",
                    "decorators": [],
                    "description": "Удаление данных списка из хранилища Redux при размонтировании компонента",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "condition",
                    "decorators": [],
                    "description": "Обработчик, который составляет список условий для локальной фильтрации элементов коллекции",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "empty",
                    "decorators": [],
                    "description": "Заглушка в случае отсутствия элементов",
                    "required": false,
                    "type": "string | boolean | IEmptyProps",
                    "example": "{text: 'Записи не найдены'}"
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Элементы коллекции",
                    "required": false,
                    "type": "any[]",
                    "example": null
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Варианты расположения элементов коллекции",
                    "required": false,
                    "type": "boolean | ILayoutNamesProps",
                    "example": "{items: [{id: 'list', label: 'List'}, {id: 'grid', label: 'Grid'}]}"
                },
                {
                    "name": "listId",
                    "decorators": [],
                    "description": "Идентификатор списка",
                    "required": false,
                    "type": "string",
                    "example": "ArticlesList"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "onFetch",
                    "decorators": [],
                    "description": "Обработчик, который вызывается при изменении значений формы, и нужен для подгрузки новых элементов коллекции",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "pagination",
                    "decorators": [],
                    "description": "Подключение пагинации",
                    "required": false,
                    "type": "boolean | IPaginationProps",
                    "example": "{loadMore: true}"
                },
                {
                    "name": "paginationSize",
                    "decorators": [],
                    "description": "Переключение количества элементов в списке",
                    "required": false,
                    "type": "boolean | IPaginationSizeProps",
                    "example": "{sizes: [3, 6, 9], defaultValue: 3}"
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "Первичный ключ для item",
                    "required": false,
                    "type": "string",
                    "example": "id"
                },
                {
                    "name": "query",
                    "decorators": [],
                    "description": "Дополнительные параметры, значения которых нужно передавать в запросе для получения данных",
                    "required": false,
                    "type": "Record",
                    "example": "{tagName: 'MarketReviews'}"
                },
                {
                    "name": "scope",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "searchForm",
                    "decorators": [],
                    "description": "Форма для поиска элементов",
                    "required": false,
                    "type": "IFormProps",
                    "example": "{fields: ['title'], model: {attributes: ['title:string:Название']}}"
                },
                {
                    "name": "searchModel",
                    "decorators": [],
                    "description": "Модель для синхронизации значений формы с адресной строкой",
                    "required": false,
                    "type": "string",
                    "example": "{attributes: [{attribute: 'isMilesAvailable', type: boolean}]}"
                },
                {
                    "name": "sort",
                    "decorators": [],
                    "description": "Подключение сортировки",
                    "required": false,
                    "type": "boolean | ISortProps",
                    "example": "{enable: true, defaultSort: 'startDate'}"
                }
            ]
        },
        "IListOutput": {
            "name": "IListOutput",
            "moduleName": "hooks/useList",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "layoutNamesPosition",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "list",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "IList",
                    "example": null
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "Model",
                    "example": null
                },
                {
                    "name": "onFetch",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onSort",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "paginationPosition",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "paginationSizePosition",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "renderEmpty",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderLayoutNames",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderList",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderPagination",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderPaginationSize",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderSearchForm",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "searchModel",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "Model",
                    "example": null
                }
            ]
        },
        "IComponents": {
            "name": "IComponents",
            "moduleName": "providers/ComponentsProvider",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "api",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "clientStorage",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "html",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "http",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "locale",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "meta",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "pushNotification",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "resource",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "store",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "ui",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "ws",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IComponentsProviderProps": {
            "name": "IComponentsProviderProps",
            "moduleName": "providers/ComponentsProvider",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "PropsWithChildren<any>"
            ],
            "properties": [
                {
                    "name": "components",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "IComponents",
                    "example": null
                }
            ]
        },
        "IScreen": {
            "name": "IScreen",
            "moduleName": "providers/ScreenProvider",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "getDeviceType",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "isDesktop",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "isPhone",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "isTablet",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "media",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "setMedia",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "width",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "number",
                    "example": null
                }
            ]
        },
        "IScreenProviderProps": {
            "name": "IScreenProviderProps",
            "moduleName": "providers/ScreenProvider",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "PropsWithChildren<any>"
            ],
            "properties": [
                {
                    "name": "media",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "skipTimeout",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                }
            ]
        },
        "IPreloadedData": {
            "name": "IPreloadedData",
            "moduleName": "providers/SsrProvider",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": []
        },
        "ISsr": {
            "name": "ISsr",
            "moduleName": "providers/SsrProvider",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "history",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{initialEntries: string[]}",
                    "example": null
                },
                {
                    "name": "preloadedData",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IPreloadedData",
                    "example": null
                },
                {
                    "name": "staticContext",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "ISsrProviderProps": {
            "name": "ISsrProviderProps",
            "moduleName": "providers/SsrProvider",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "ISsr",
                "PropsWithChildren<any>"
            ],
            "properties": [
                {
                    "name": "history",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{initialEntries: string[]}",
                    "example": null
                },
                {
                    "name": "preloadedData",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IPreloadedData",
                    "example": null
                },
                {
                    "name": "staticContext",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IModal": {
            "name": "IModal",
            "moduleName": "reducers/modal",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "id",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "isClosing",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "modal",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "props",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IRoute": {
            "name": "IRoute",
            "moduleName": "reducers/router",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "component",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "componentProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "exact",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "id",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "isNavVisible",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "isVisible",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IRoute[]",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "path",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "redirectTo",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "roles",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "strict",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                }
            ]
        },
        "IAlertProps": {
            "name": "IAlertProps",
            "moduleName": "ui/content/Alert/Alert",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "action",
                    "decorators": [],
                    "description": "Дочерние элементы",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "animation",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "animationDuration",
                    "decorators": [],
                    "description": "Время анимации в миллисекундах",
                    "required": false,
                    "type": "number",
                    "example": "{1000}"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "description",
                    "decorators": [],
                    "description": "Дополнительное содрежание сообщения.",
                    "required": false,
                    "type": "string",
                    "example": "{'Please, check your email.'}"
                },
                {
                    "name": "message",
                    "decorators": [],
                    "description": "Основное сообщения Оповещения",
                    "required": false,
                    "type": "string",
                    "example": "{'Sending is confirmed!'}"
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "Callback функция вызываемая при нажатии на кнопку закрытия",
                    "required": false,
                    "type": "{}",
                    "example": "{() => console.log('this is callback')}"
                },
                {
                    "name": "showClose",
                    "decorators": [],
                    "description": " Нужно ли отображать кнопку, чтобы закрыть Оповещение",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "showIcon",
                    "decorators": [],
                    "description": "Нужно ли отображать иконку, соответствующую типа Оповещения",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "CSSProperties",
                    "example": null
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "Типы Оповещений",
                    "required": true,
                    "type": "string",
                    "example": "{'info'}"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IAlertViewProps": {
            "name": "IAlertViewProps",
            "moduleName": "ui/content/Alert/Alert",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IAlertProps"
            ],
            "properties": [
                {
                    "name": "action",
                    "decorators": [],
                    "description": "Дочерние элементы",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "animation",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "animationDuration",
                    "decorators": [],
                    "description": "Время анимации в миллисекундах",
                    "required": false,
                    "type": "number",
                    "example": "{1000}"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "description",
                    "decorators": [],
                    "description": "Дополнительное содрежание сообщения.",
                    "required": false,
                    "type": "string",
                    "example": "{'Please, check your email.'}"
                },
                {
                    "name": "isExist",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "isVisible",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "message",
                    "decorators": [],
                    "description": "Основное сообщения Оповещения",
                    "required": false,
                    "type": "string",
                    "example": "{'Sending is confirmed!'}"
                },
                {
                    "name": "onClick",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "Callback функция вызываемая при нажатии на кнопку закрытия",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "showClose",
                    "decorators": [],
                    "description": " Нужно ли отображать кнопку, чтобы закрыть Оповещение",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "showIcon",
                    "decorators": [],
                    "description": "Нужно ли отображать иконку, соответствующую типа Оповещения",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "CSSProperties",
                    "example": null
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "Типы Оповещений",
                    "required": true,
                    "type": "string",
                    "example": "{'info'}"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IAvatarProps": {
            "name": "IAvatarProps",
            "moduleName": "ui/content/Avatar/Avatar",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "alt",
                    "decorators": [],
                    "description": "Альтернативный текст для изображения",
                    "required": false,
                    "type": "string",
                    "example": "{'default image'}"
                },
                {
                    "name": "children",
                    "decorators": [],
                    "description": "Дочерние элементы",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "shape",
                    "decorators": [],
                    "description": "Форма аватара",
                    "required": false,
                    "type": "string",
                    "example": "{'circle'}"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер аватара",
                    "required": false,
                    "type": "string | number",
                    "example": "{'md'}"
                },
                {
                    "name": "src",
                    "decorators": [],
                    "description": "Ссылка на изображение для аватара",
                    "required": false,
                    "type": "string",
                    "example": "{'https://user/avatar.png'}"
                },
                {
                    "name": "srcSet",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "status",
                    "decorators": [],
                    "description": "Статус онлайна",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "CSSProperties",
                    "example": "{width: '30px'}"
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "Заголовок аватарки",
                    "required": false,
                    "type": "string",
                    "example": "{'Avatar'}"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IAvatarViewProps": {
            "name": "IAvatarViewProps",
            "moduleName": "ui/content/Avatar/Avatar",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IAvatarProps"
            ],
            "properties": [
                {
                    "name": "alt",
                    "decorators": [],
                    "description": "Альтернативный текст для изображения",
                    "required": false,
                    "type": "string",
                    "example": "{'default image'}"
                },
                {
                    "name": "children",
                    "decorators": [],
                    "description": "Дочерние элементы",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "formattedTitle",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "isError",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "onError",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "shape",
                    "decorators": [],
                    "description": "Форма аватара",
                    "required": false,
                    "type": "string",
                    "example": "{'circle'}"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер аватара",
                    "required": false,
                    "type": "string | number",
                    "example": "{'md'}"
                },
                {
                    "name": "src",
                    "decorators": [],
                    "description": "Ссылка на изображение для аватара",
                    "required": false,
                    "type": "string",
                    "example": "{'https://user/avatar.png'}"
                },
                {
                    "name": "srcSet",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "status",
                    "decorators": [],
                    "description": "Статус онлайна",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "CSSProperties",
                    "example": "{width: '30px'}"
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "Заголовок аватарки",
                    "required": false,
                    "type": "string",
                    "example": "{'Avatar'}"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "AvatarGroupProps": {
            "name": "AvatarGroupProps",
            "moduleName": "ui/content/Avatar/AvatarGroup",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "children",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode[]",
                    "example": null
                },
                {
                    "name": "maxCount",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "CSSProperties",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "ICalendarProps": {
            "name": "ICalendarProps",
            "moduleName": "ui/content/Calendar/Calendar",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "numberOfMonths",
                    "decorators": [],
                    "description": "Количество отображаемых за раз месяцев",
                    "required": false,
                    "type": "number",
                    "example": "1"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Функция возвращает выбранную в календаре дату",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "pickerProps",
                    "decorators": [],
                    "description": "Свойства для компонента DayPickerInput",
                    "required": false,
                    "type": "any",
                    "example": "{dayPickerProps: {showWeekNumbers: true}}"
                },
                {
                    "name": "showFooter",
                    "decorators": [],
                    "description": "Отображать Footer для календаря (содержит todayButton)",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "value",
                    "decorators": [],
                    "description": "Значение задает выбранные в календаре дату или диапазон дат.\nНеобходимо передать валидную дату в виде строки (массива строк)",
                    "required": true,
                    "type": "string | string[]",
                    "example": null
                },
                {
                    "name": "valueFormat",
                    "decorators": [],
                    "description": "Формат даты отправляемый на сервер",
                    "required": false,
                    "type": "string",
                    "example": "YYYY-MM-DD"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                },
                {
                    "name": "viewProps",
                    "decorators": [],
                    "description": "Пропсы для компонента отображения",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "ICalendarViewProps": {
            "name": "ICalendarViewProps",
            "moduleName": "ui/content/Calendar/Calendar",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "ICalendarProps"
            ],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "fromYear",
                    "decorators": [],
                    "description": "Самый крайний год в прошлом",
                    "required": true,
                    "type": "Date",
                    "example": null
                },
                {
                    "name": "isCaptionPanelVisible",
                    "decorators": [],
                    "description": "Отображает панель для выбора месяца/года",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "month",
                    "decorators": [],
                    "description": "Текущий месяц календаря, также задает выбранный в календаре год",
                    "required": true,
                    "type": "Date",
                    "example": null
                },
                {
                    "name": "numberOfMonths",
                    "decorators": [],
                    "description": "Количество отображаемых за раз месяцев",
                    "required": false,
                    "type": "number",
                    "example": "1"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Функция возвращает выбранную в календаре дату",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onDaySelect",
                    "decorators": [],
                    "description": "Функция возвращает выбранную в календаре дату",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onMonthSelect",
                    "decorators": [],
                    "description": "Функция обновляет значение выбранного месяца",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "pickerProps",
                    "decorators": [],
                    "description": "Свойства для компонента DayPickerInput",
                    "required": false,
                    "type": "any",
                    "example": "{dayPickerProps: {showWeekNumbers: true}}"
                },
                {
                    "name": "selectedDates",
                    "decorators": [],
                    "description": "Хранит выбранную дату или диапазон дат",
                    "required": true,
                    "type": "Date[]",
                    "example": null
                },
                {
                    "name": "showFooter",
                    "decorators": [],
                    "description": "Отображать Footer для календаря (содержит todayButton)",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "toYear",
                    "decorators": [],
                    "description": "Самый крайний год в будущем",
                    "required": true,
                    "type": "Date",
                    "example": null
                },
                {
                    "name": "toggleCaptionPanel",
                    "decorators": [],
                    "description": "Функция измения состояние отображения панели для выбора месяца/года",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "value",
                    "decorators": [],
                    "description": "Значение задает выбранные в календаре дату или диапазон дат.\nНеобходимо передать валидную дату в виде строки (массива строк)",
                    "required": true,
                    "type": "string | string[]",
                    "example": null
                },
                {
                    "name": "valueFormat",
                    "decorators": [],
                    "description": "Формат даты отправляемый на сервер",
                    "required": false,
                    "type": "string",
                    "example": "YYYY-MM-DD"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                },
                {
                    "name": "viewProps",
                    "decorators": [],
                    "description": "Пропсы для компонента отображения",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "ICardProps": {
            "name": "ICardProps",
            "moduleName": "ui/content/Card/Card",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "borderColor",
                    "decorators": [],
                    "description": "Цвет границы (если передать false, то граница будет скрыта)",
                    "required": false,
                    "type": "string | boolean",
                    "example": "success"
                },
                {
                    "name": "children",
                    "decorators": [],
                    "description": "Дочерние элементы",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "color",
                    "decorators": [],
                    "description": "Цвет состояния",
                    "required": false,
                    "type": "string",
                    "example": "success"
                },
                {
                    "name": "cover",
                    "decorators": [],
                    "description": "Обложка для карточки, нужно передать ссылку на изображение",
                    "required": false,
                    "type": "string",
                    "example": "'https://cat/cat.png'"
                },
                {
                    "name": "description",
                    "decorators": [],
                    "description": "Описание карточки",
                    "required": false,
                    "type": "string",
                    "example": "{'Scroll to see more...'}"
                },
                {
                    "name": "footer",
                    "decorators": [],
                    "description": "Текст для footer",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "header",
                    "decorators": [],
                    "description": "Текст для header",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "orientation",
                    "decorators": [],
                    "description": "Ориентация карточки, горизонтальная и вертикальная",
                    "required": false,
                    "type": "string",
                    "example": "{'vertical-reverse'}"
                },
                {
                    "name": "shape",
                    "decorators": [],
                    "description": "Ориентация карточки, горизонтальная и вертикальная",
                    "required": false,
                    "type": "\"circle\" | \"square\"",
                    "example": "{'vertical-reverse'}"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "CSSProperties",
                    "example": "{width: '30px'}"
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "Заголовок карточки",
                    "required": false,
                    "type": "string",
                    "example": "{'Main card'}"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "ICollapseProps": {
            "name": "ICollapseProps",
            "moduleName": "ui/content/Collapse/Collapse",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "activeKey",
                    "decorators": [],
                    "description": "Номер активного CollapseItem, который может меняться динамический или быть статичным",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "borderless",
                    "decorators": [],
                    "description": "Отключение внешних рамок",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "children",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Кастомная иконка svg или название иконки",
                    "required": false,
                    "type": "ReactNode",
                    "example": "{'circle'}"
                },
                {
                    "name": "iconPosition",
                    "decorators": [],
                    "description": "Позиция иконки-индикатора",
                    "required": false,
                    "type": "\"left\" | \"right\"",
                    "example": "{'left'}"
                },
                {
                    "name": "isAccordion",
                    "decorators": [],
                    "description": "Включает режим Аккордиона (только один CollapseItem может быть открыт)",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Вызываемая функция при каждом изменении состояния",
                    "required": false,
                    "type": "{}",
                    "example": "{() => {console.log('success')}}"
                },
                {
                    "name": "showIcon",
                    "decorators": [],
                    "description": "Показ иконки, которая показывает состояние CollapseItem. Поумолчанию включены.",
                    "required": false,
                    "type": "boolean",
                    "example": "{false}"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "CSSProperties",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "ICollapseViewProps": {
            "name": "ICollapseViewProps",
            "moduleName": "ui/content/Collapse/Collapse",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "ICollapseProps"
            ],
            "properties": [
                {
                    "name": "activeKey",
                    "decorators": [],
                    "description": "Номер активного CollapseItem, который может меняться динамический или быть статичным",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "borderless",
                    "decorators": [],
                    "description": "Отключение внешних рамок",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "childIndex",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "children",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Кастомная иконка svg или название иконки",
                    "required": false,
                    "type": "ReactNode",
                    "example": "{'circle'}"
                },
                {
                    "name": "iconPosition",
                    "decorators": [],
                    "description": "Позиция иконки-индикатора",
                    "required": false,
                    "type": "\"left\" | \"right\"",
                    "example": "{'left'}"
                },
                {
                    "name": "isAccordion",
                    "decorators": [],
                    "description": "Включает режим Аккордиона (только один CollapseItem может быть открыт)",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "isShowMore",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Вызываемая функция при каждом изменении состояния",
                    "required": false,
                    "type": "{}",
                    "example": "{() => {console.log('success')}}"
                },
                {
                    "name": "showIcon",
                    "decorators": [],
                    "description": "Показ иконки, которая показывает состояние CollapseItem. Поумолчанию включены.",
                    "required": false,
                    "type": "boolean",
                    "example": "{false}"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "CSSProperties",
                    "example": null
                },
                {
                    "name": "toggleAccordion",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "toggleCollapse",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "ICollapseItemProps": {
            "name": "ICollapseItemProps",
            "moduleName": "ui/content/Collapse/CollapseItem",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "activeKey",
                    "decorators": [],
                    "description": "Номер активного CollapseItem, который может меняться динамический или быть статичным",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "borderless",
                    "decorators": [],
                    "description": "Отключение внешних рамок",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "children",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Кастомная иконка svg или название иконки",
                    "required": false,
                    "type": "ReactNode",
                    "example": "{'circle'}"
                },
                {
                    "name": "iconPosition",
                    "decorators": [],
                    "description": "Позиция иконки-индикатора",
                    "required": false,
                    "type": "\"left\" | \"right\"",
                    "example": "{'left'}"
                },
                {
                    "name": "isAccordion",
                    "decorators": [],
                    "description": "Включает режим Аккордиона (только один CollapseItem может быть открыт)",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Вызываемая функция при каждом изменении состояния",
                    "required": false,
                    "type": "{}",
                    "example": "{() => {console.log('success')}}"
                },
                {
                    "name": "showIcon",
                    "decorators": [],
                    "description": "Показ иконки, которая показывает состояние CollapseItem. Поумолчанию включены.",
                    "required": false,
                    "type": "boolean",
                    "example": "{false}"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "CSSProperties",
                    "example": null
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "Название CollapseItem",
                    "required": false,
                    "type": "string",
                    "example": "{'Подробнее'}"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "ICollapseItemViewProps": {
            "name": "ICollapseItemViewProps",
            "moduleName": "ui/content/Collapse/CollapseItem",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "ICollapseItemProps"
            ],
            "properties": [
                {
                    "name": "activeKey",
                    "decorators": [],
                    "description": "Номер активного CollapseItem, который может меняться динамический или быть статичным",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "borderless",
                    "decorators": [],
                    "description": "Отключение внешних рамок",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "childIndex",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "children",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Кастомная иконка svg или название иконки",
                    "required": false,
                    "type": "ReactNode",
                    "example": "{'circle'}"
                },
                {
                    "name": "iconPosition",
                    "decorators": [],
                    "description": "Позиция иконки-индикатора",
                    "required": false,
                    "type": "\"left\" | \"right\"",
                    "example": "{'left'}"
                },
                {
                    "name": "isAccordion",
                    "decorators": [],
                    "description": "Включает режим Аккордиона (только один CollapseItem может быть открыт)",
                    "required": false,
                    "type": "boolean",
                    "example": "{true}"
                },
                {
                    "name": "isShowMore",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Вызываемая функция при каждом изменении состояния",
                    "required": false,
                    "type": "{}",
                    "example": "{() => {console.log('success')}}"
                },
                {
                    "name": "showIcon",
                    "decorators": [],
                    "description": "Показ иконки, которая показывает состояние CollapseItem. Поумолчанию включены.",
                    "required": false,
                    "type": "boolean",
                    "example": "{false}"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "CSSProperties",
                    "example": null
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "Название CollapseItem",
                    "required": false,
                    "type": "string",
                    "example": "{'Подробнее'}"
                },
                {
                    "name": "toggleAccordion",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "toggleCollapse",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IDetailItemOutputProps": {
            "name": "IDetailItemOutputProps",
            "moduleName": "ui/content/Detail/Detail",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IDetailItemProps"
            ],
            "properties": [
                {
                    "name": "children",
                    "decorators": [],
                    "description": "Значение",
                    "required": true,
                    "type": "ReactNode",
                    "example": "'Cloud Database'"
                },
                {
                    "name": "colspan",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "contentClassName",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для ячейки со значением",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Наименование",
                    "required": true,
                    "type": "ReactNode",
                    "example": "'Product'"
                },
                {
                    "name": "labelClassName",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для ячейки с наименованием",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "span",
                    "decorators": [],
                    "description": "Количество колонок, которое занимает элемент",
                    "required": false,
                    "type": "number",
                    "example": "3"
                },
                {
                    "name": "value",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IDetailMedia": {
            "name": "IDetailMedia",
            "moduleName": "ui/content/Detail/Detail",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "breakpoint",
                    "decorators": [],
                    "description": "Максимальная ширина таблицы в px",
                    "required": true,
                    "type": "number",
                    "example": "600"
                },
                {
                    "name": "column",
                    "decorators": [],
                    "description": "Количество колонок, которое будет применяться, начиная от указанной ширины и меньше",
                    "required": true,
                    "type": "number",
                    "example": "2"
                }
            ]
        },
        "IDetailProps": {
            "name": "IDetailProps",
            "moduleName": "ui/content/Detail/Detail",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "children",
                    "decorators": [],
                    "description": "Дочерние компоненты",
                    "required": true,
                    "type": "ReactNode | ReactNode[]",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для таблицы",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "column",
                    "decorators": [],
                    "description": "Максимальное количество колонок",
                    "required": false,
                    "type": "number",
                    "example": "3"
                },
                {
                    "name": "controls",
                    "decorators": [],
                    "description": "Контролы, которые нужно расположить рядом с таблицей",
                    "required": false,
                    "type": "IControlItem[]",
                    "example": "[{label: __(('Edit')), onClick: () => props.onClick()}]"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Вариант расположения ячеек \"ключ-значение\"",
                    "required": false,
                    "type": "DetailLayoutEnum",
                    "example": "'horizontal'"
                },
                {
                    "name": "responsive",
                    "decorators": [],
                    "description": "Перестраивать таблицу при ресайзе",
                    "required": false,
                    "type": "boolean | IDetailResponsive",
                    "example": "{enable: true, media: [{breakpoint: 600, column: 2}]}"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер ячеек в таблице",
                    "required": false,
                    "type": "string",
                    "example": "'sm'"
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "Заголовок таблицы",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'User info'"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IDetailResponsive": {
            "name": "IDetailResponsive",
            "moduleName": "ui/content/Detail/Detail",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "enable",
                    "decorators": [],
                    "description": "Перестраивать таблицу при ресайзе",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "media",
                    "decorators": [],
                    "description": "Брейкпоинты",
                    "required": true,
                    "type": "IDetailMedia[]",
                    "example": null
                }
            ]
        },
        "IDetailViewProps": {
            "name": "IDetailViewProps",
            "moduleName": "ui/content/Detail/Detail",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IDetailProps"
            ],
            "properties": [
                {
                    "name": "children",
                    "decorators": [],
                    "description": "Дочерние компоненты",
                    "required": true,
                    "type": "ReactNode | ReactNode[]",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для таблицы",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "column",
                    "decorators": [],
                    "description": "Максимальное количество колонок",
                    "required": false,
                    "type": "number",
                    "example": "3"
                },
                {
                    "name": "controls",
                    "decorators": [],
                    "description": "Контролы, которые нужно расположить рядом с таблицей",
                    "required": false,
                    "type": "IControlItem[]",
                    "example": "[{label: __(('Edit')), onClick: () => props.onClick()}]"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Вариант расположения ячеек \"ключ-значение\"",
                    "required": false,
                    "type": "DetailLayoutEnum",
                    "example": "'horizontal'"
                },
                {
                    "name": "resizedNodeRef",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "responsive",
                    "decorators": [],
                    "description": "Перестраивать таблицу при ресайзе",
                    "required": false,
                    "type": "boolean | IDetailResponsive",
                    "example": "{enable: true, media: [{breakpoint: 600, column: 2}]}"
                },
                {
                    "name": "rows",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "IDetailItemOutputProps[][]",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер ячеек в таблице",
                    "required": false,
                    "type": "string",
                    "example": "'sm'"
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "Заголовок таблицы",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'User info'"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IDetailItemProps": {
            "name": "IDetailItemProps",
            "moduleName": "ui/content/Detail/DetailItem",
            "title": "DetailItem",
            "description": "Элемент \"ключ-значение\" в таблице Detail",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "children",
                    "decorators": [],
                    "description": "Значение",
                    "required": true,
                    "type": "ReactNode",
                    "example": "'Cloud Database'"
                },
                {
                    "name": "contentClassName",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для ячейки со значением",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Наименование",
                    "required": true,
                    "type": "ReactNode",
                    "example": "'Product'"
                },
                {
                    "name": "labelClassName",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для ячейки с наименованием",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "span",
                    "decorators": [],
                    "description": "Количество колонок, которое занимает элемент",
                    "required": false,
                    "type": "number",
                    "example": "3"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IDropDownProps": {
            "name": "IDropDownProps",
            "moduleName": "ui/content/DropDown/DropDown",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IAbsolutePositioningInputProps"
            ],
            "properties": [
                {
                    "name": "autoPositioning",
                    "decorators": [],
                    "description": "Включает \"умное\" позиционирование - если компонент не может быть помещен в промежуток между целевым компонентом\nи краем viewport, тогда он будет показан в противоположном направлении от заданного в свойстве position.",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "children",
                    "decorators": [],
                    "description": "Дочерние элементы",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "componentDestroyDelay",
                    "decorators": [],
                    "description": "Задержка перед размонтированием компонента, когда он должен быть скрыт.\nВ этот момент удобно применять различные анимации ухода.",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "content",
                    "decorators": [],
                    "description": "Содержимое DropDown (компонент или jsx-код)",
                    "required": false,
                    "type": "{}",
                    "example": "() => Component"
                },
                {
                    "name": "gap",
                    "decorators": [],
                    "description": "Промежуток между компонентом и целевым элементом.\nИспользуется в рассчетах позиционирования.",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "Срабатывает в \"ручном режиме\", при клике за пределами компонента и целевого элемента.\nВозвращает значение visible.",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onVisibleChange",
                    "decorators": [],
                    "description": "Обработчик изменения свойства isComponentVisible (отображение на странице).\nВозвращает значение isComponentVisible.",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "position",
                    "decorators": [],
                    "description": "Позиционирование компонента, относительно целевого элемента",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизациии отображения",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                },
                {
                    "name": "visible",
                    "decorators": [],
                    "description": "Отобразить или скрыть компонент.\nВключает \"ручной режим\", при котором можно задать логику отображения компонента извне,\nчерез измененение данного свойства.",
                    "required": false,
                    "type": "boolean",
                    "example": null
                }
            ]
        },
        "IDropDownViewProps": {
            "name": "IDropDownViewProps",
            "moduleName": "ui/content/DropDown/DropDown",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IDropDownProps",
                "IAbsolutePositioningOutputProps"
            ],
            "properties": [
                {
                    "name": "autoPositioning",
                    "decorators": [],
                    "description": "Включает \"умное\" позиционирование - если компонент не может быть помещен в промежуток между целевым компонентом\nи краем viewport, тогда он будет показан в противоположном направлении от заданного в свойстве position.",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "calculatePosition",
                    "decorators": [],
                    "description": "Рассчет абсолютной позиции",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "children",
                    "decorators": [],
                    "description": "Дочерние элементы",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "componentDestroyDelay",
                    "decorators": [],
                    "description": "Задержка перед размонтированием компонента, когда он должен быть скрыт.\nВ этот момент удобно применять различные анимации ухода.",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "content",
                    "decorators": [],
                    "description": "Содержимое DropDown (компонент или jsx-код)",
                    "required": false,
                    "type": "{}",
                    "example": "() => Component"
                },
                {
                    "name": "forwardedRef",
                    "decorators": [],
                    "description": "Ссылка на view",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "gap",
                    "decorators": [],
                    "description": "Промежуток между компонентом и целевым элементом.\nИспользуется в рассчетах позиционирования.",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "isComponentExist",
                    "decorators": [],
                    "description": "Нужно ли рендерить компонент",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "isComponentVisible",
                    "decorators": [],
                    "description": "Нужно ли показывать компонент на странице",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "Срабатывает в \"ручном режиме\", при клике за пределами компонента и целевого элемента.\nВозвращает значение visible.",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onVisibleChange",
                    "decorators": [],
                    "description": "Обработчик изменения свойства isComponentVisible (отображение на странице).\nВозвращает значение isComponentVisible.",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "position",
                    "decorators": [],
                    "description": "Позиционирование компонента, относительно целевого элемента",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект стилей для абсолютного позиционирования",
                    "required": true,
                    "type": "IStyleObj",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизациии отображения",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                },
                {
                    "name": "visible",
                    "decorators": [],
                    "description": "Отобразить или скрыть компонент.\nВключает \"ручной режим\", при котором можно задать логику отображения компонента извне,\nчерез измененение данного свойства.",
                    "required": false,
                    "type": "boolean",
                    "example": null
                }
            ]
        },
        "ICrudGeneratorProps": {
            "name": "ICrudGeneratorProps",
            "moduleName": "ui/crud",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "ICrudProps"
            ],
            "properties": [
                {
                    "name": "create",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | ICrudItem",
                    "example": null
                },
                {
                    "name": "crudId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "crudView",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "delete",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | ICrudItem",
                    "example": null
                },
                {
                    "name": "detail",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "enums",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | string[]",
                    "example": null
                },
                {
                    "name": "form",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode | IFormProps",
                    "example": null
                },
                {
                    "name": "grid",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode | IGridProps",
                    "example": null
                },
                {
                    "name": "index",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | ICrudItem",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ICrudItem[] | {}",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "mode",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "\"page\" | \"modal\"",
                    "example": null
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "models",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | string[]",
                    "example": null
                },
                {
                    "name": "path",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "queryKey",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "restApi",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IApiRest",
                    "example": null
                },
                {
                    "name": "restUrl",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "route",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IRouteItem",
                    "example": null
                },
                {
                    "name": "searchModel",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "update",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | ICrudItem",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | ICrudItem",
                    "example": null
                }
            ]
        },
        "ICrudGeneratorRouteProps": {
            "name": "ICrudGeneratorRouteProps",
            "moduleName": "ui/crud",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IRouteItem"
            ],
            "properties": [
                {
                    "name": "component",
                    "decorators": [],
                    "description": "Компонент страницы, который отобразится, если путь будет соответствовать location.pathname",
                    "required": false,
                    "type": "any",
                    "example": "CatalogPage"
                },
                {
                    "name": "componentProps",
                    "decorators": [],
                    "description": "Свойства для компонента страницы",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "enums",
                    "decorators": [],
                    "description": "Название или список с названиями перечислений, полученных с бэкенда",
                    "required": false,
                    "type": "string | string[]",
                    "example": null
                },
                {
                    "name": "exact",
                    "decorators": [],
                    "description": "Если true, то путь должен точно соответствовать location.pathname",
                    "required": false,
                    "type": "boolean",
                    "example": "'/catalog'"
                },
                {
                    "name": "fetch",
                    "decorators": [],
                    "description": "Обработчик, который возвращает конфигурацию для осуществления HTTP-запроса. Запрос происходит каждый раз\nперед рендерингом страницы, чтобы получить для неё все необходимые данные",
                    "required": false,
                    "type": "IFetchHocConfigFunc",
                    "example": null
                },
                {
                    "name": "id",
                    "decorators": [],
                    "description": "Идентификатор роута",
                    "required": false,
                    "type": "string",
                    "example": "'catalog'"
                },
                {
                    "name": "isNavVisible",
                    "decorators": [],
                    "description": "Отображать ссылку или кнопку в навигации для перехода на данный роут",
                    "required": false,
                    "type": "boolean",
                    "example": "false"
                },
                {
                    "name": "isVisible",
                    "decorators": [],
                    "description": "Отображать или показывать роут",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Вложенные роуты",
                    "required": false,
                    "type": "IRouteItem[] | {}",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Текст, который отобразится на кнопке навигации для данного роута",
                    "required": false,
                    "type": "string",
                    "example": "'Каталог'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Тип шаблона для данного роута",
                    "required": false,
                    "type": "string",
                    "example": "'dark'"
                },
                {
                    "name": "models",
                    "decorators": [],
                    "description": "Название или список с названиями моделей, полученных с бэкенда",
                    "required": false,
                    "type": "string | string[]",
                    "example": null
                },
                {
                    "name": "path",
                    "decorators": [],
                    "description": "Путь до роута",
                    "required": false,
                    "type": "string",
                    "example": "'/catalog'"
                },
                {
                    "name": "preloadData",
                    "decorators": [],
                    "description": "Обработчик, который принимает параметры URL и возвращает массив с пропсами для хука useFetch и компонента\nList.\nФункция запускается перед рендерингом приложения в режиме SSR и используется для предварительной\nзагрузки данных, необходимых на текущей странице.\nХук useFetch и компонент List не будут повторно инициализироваться и делать запросы на клиенте,\nесли подгруженные данные существуют.",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "queryKey",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "redirectTo",
                    "decorators": [],
                    "description": "В свойстве можно передать как путь, на который осуществится редирект, так и булево значение.\nЕсли свойство равно true - то редирект произойдет на первый из вложенных роутов.",
                    "required": false,
                    "type": "string | boolean",
                    "example": "true"
                },
                {
                    "name": "roles",
                    "decorators": [],
                    "description": "Список с ролями, который показывает, кому из пользователей будет доступен просмотр страницы",
                    "required": false,
                    "type": "string[]",
                    "example": "['user', 'admin']"
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "Заголовок страницы",
                    "required": false,
                    "type": "string",
                    "example": "'Каталог'"
                }
            ]
        },
        "ICrudChildrenProps": {
            "name": "ICrudChildrenProps",
            "moduleName": "ui/crud/Crud/Crud",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "ICrudProps",
                "IConnectHocOutput",
                "IComponentsHocOutput"
            ],
            "properties": [
                {
                    "name": "action",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "api",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "clientStorage",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "components",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IComponents",
                    "example": null
                },
                {
                    "name": "controlsGetter",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "create",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | ICrudItem",
                    "example": null
                },
                {
                    "name": "crudId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "crudView",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "delete",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | ICrudItem",
                    "example": null
                },
                {
                    "name": "detail",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "dispatch",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "Dispatch",
                    "example": null
                },
                {
                    "name": "form",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IFormProps",
                    "example": null
                },
                {
                    "name": "grid",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IGridProps",
                    "example": null
                },
                {
                    "name": "html",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "http",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "index",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | ICrudItem",
                    "example": null
                },
                {
                    "name": "item",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ICrudItem[] | {}",
                    "example": null
                },
                {
                    "name": "locale",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "meta",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "mode",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "\"page\" | \"modal\"",
                    "example": null
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "onComplete",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "pushNotification",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "queryKey",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "recordId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "PrimaryKey",
                    "example": null
                },
                {
                    "name": "resource",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "restApi",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IApiRest",
                    "example": null
                },
                {
                    "name": "restUrl",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "routeId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "searchModel",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "store",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "ui",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "update",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | ICrudItem",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | ICrudItem",
                    "example": null
                },
                {
                    "name": "ws",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "ICrudClickProps": {
            "name": "ICrudClickProps",
            "moduleName": "ui/crud/Crud/Crud",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "components",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "IComponents",
                    "example": null
                },
                {
                    "name": "crudId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "goToAction",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "mode",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "\"page\" | \"modal\"",
                    "example": null
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "queryKey",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "record",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "recordId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "PrimaryKey",
                    "example": null
                },
                {
                    "name": "restApi",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IApiRest",
                    "example": null
                },
                {
                    "name": "restUrl",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "routeAction",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "routeId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "routeParams",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "ICrudItem": {
            "name": "ICrudItem",
            "moduleName": "ui/crud/Crud/Crud",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "Omit<IControlItem",
                "'visible' | 'confirm' | 'onClick'>"
            ],
            "properties": [
                {
                    "name": "actionName",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "component",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "componentProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "confirm",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | {}",
                    "example": null
                },
                {
                    "name": "controlsExclude",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "controlsInclude",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "mode",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "\"page\" | \"modal\"",
                    "example": null
                },
                {
                    "name": "onClick",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "pkRequired",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "visible",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | {}",
                    "example": null
                }
            ]
        },
        "ICrudProps": {
            "name": "ICrudProps",
            "moduleName": "ui/crud/Crud/Crud",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "create",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | ICrudItem",
                    "example": null
                },
                {
                    "name": "crudId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "crudView",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "delete",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | ICrudItem",
                    "example": null
                },
                {
                    "name": "detail",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "form",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode | IFormProps",
                    "example": null
                },
                {
                    "name": "grid",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode | IGridProps",
                    "example": null
                },
                {
                    "name": "index",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | ICrudItem",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ICrudItem[] | {}",
                    "example": null
                },
                {
                    "name": "mode",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "\"page\" | \"modal\"",
                    "example": null
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "queryKey",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "restApi",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IApiRest",
                    "example": null
                },
                {
                    "name": "restUrl",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "searchModel",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "update",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | ICrudItem",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean | ICrudItem",
                    "example": null
                }
            ]
        },
        "ICrudViewProps": {
            "name": "ICrudViewProps",
            "moduleName": "ui/crud/Crud/Crud",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "children",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "controls",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IControlItem[]",
                    "example": null
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                }
            ]
        },
        "ICrudContentProps": {
            "name": "ICrudContentProps",
            "moduleName": "ui/crud/Crud/CrudContent",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "action",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "crudId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "goToAction",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ICrudItem[]",
                    "example": null
                },
                {
                    "name": "itemsToControls",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "queryKey",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "record",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "recordId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "PrimaryKey",
                    "example": null
                },
                {
                    "name": "restApi",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IApiRest",
                    "example": null
                },
                {
                    "name": "restUrl",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                }
            ]
        },
        "IAutoCompleteFieldProps": {
            "name": "IAutoCompleteFieldProps",
            "moduleName": "ui/form/AutoCompleteField/AutoCompleteField",
            "title": "AutoComplete",
            "description": "Поле ввода текста с подсказками (auto-complete)",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IInputFieldProps",
                "IDataProviderConfig",
                "Omit<IDataSelectConfig",
                "'items'>"
            ],
            "properties": [
                {
                    "name": "addonAfter",
                    "decorators": [],
                    "description": "Текст или React-нода, которая будет отрендерена справа от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'.com'"
                },
                {
                    "name": "addonBefore",
                    "decorators": [],
                    "description": "Текст или React-нода, которая будет отрендерена слева от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'http://'"
                },
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "autoComplete",
                    "decorators": [],
                    "description": "Настройки поиска",
                    "required": false,
                    "type": "boolean | AutoCompleteConfig",
                    "example": "{enable: true, minLength: 2, delay: 100}"
                },
                {
                    "name": "autoFetch",
                    "decorators": [],
                    "description": "Загрузка данных после любого изменения запроса.\nЕсли включен autoFetch, то настройки autoComplete не применятся.",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "dataProvider",
                    "decorators": [],
                    "description": "Конфигурация для подгрузки данных извне.\nЕсли dataProvider не передан, то поиск данных по запросу происходит локально.",
                    "required": false,
                    "type": "{action: string | IApiMethod, onSearch: {}, params: Record}",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "failed",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для элемента \\<input /\\>",
                    "required": false,
                    "type": "any",
                    "example": "{onKeyDown: ...}"
                },
                {
                    "name": "inputValue",
                    "decorators": [],
                    "description": "Значение поля в форме",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Коллекция элементов",
                    "required": false,
                    "type": "DataProviderItems",
                    "example": "[{id: 1, label: 'Krasnoyarsk'}, {id: 2, label: 'Moscow'}]"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "maskProps",
                    "decorators": [],
                    "description": "Конфигурация маски",
                    "required": false,
                    "type": "any",
                    "example": "{ mask: '+7 (999) 999-99-99' }"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "multiple",
                    "decorators": [],
                    "description": "Возможность множественного выбора",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Placeholder подсказка",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "Первичный ключ для item",
                    "required": false,
                    "type": "string",
                    "example": "id"
                },
                {
                    "name": "query",
                    "decorators": [],
                    "description": "Текст запроса",
                    "required": false,
                    "type": "string",
                    "example": "'some text'"
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "searchOnFocus",
                    "decorators": [],
                    "description": "При фокусировке на поле ввода будет запускаться поиск",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "selectFirst",
                    "decorators": [],
                    "description": "Сделать активным первый элемент в списке",
                    "required": false,
                    "type": "any",
                    "example": "true"
                },
                {
                    "name": "selectedIds",
                    "decorators": [],
                    "description": "Список с идентификаторами выбранных элементов",
                    "required": true,
                    "type": "any",
                    "example": "[1, 4]"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер Innput",
                    "required": false,
                    "type": "string",
                    "example": "'large'"
                },
                {
                    "name": "sourceItems",
                    "decorators": [],
                    "description": " Список со всеми элементами",
                    "required": false,
                    "type": "IDataSelectItem[]",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "success",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "textAfter",
                    "decorators": [],
                    "description": "Изображение или React-нода, которая будет отрендерена справа от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "require('icon.png') | <component/>"
                },
                {
                    "name": "textBefore",
                    "decorators": [],
                    "description": "Изображение или React-нода, которая будет отрендерена слева от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "require('icon.png') | <component/>"
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "HTML Тип",
                    "required": false,
                    "type": "string",
                    "example": "email"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                },
                {
                    "name": "viewProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IAutoCompleteFieldViewProps": {
            "name": "IAutoCompleteFieldViewProps",
            "moduleName": "ui/form/AutoCompleteField/AutoCompleteField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "Omit<IAutoCompleteFieldProps",
                "'items'>"
            ],
            "properties": [
                {
                    "name": "forwardedRef",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "hoveredId",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{className: string, disabled: boolean, name: string, onBlur: {}, onChange: {}, onFocus: {}, placeholder: string, type: string, value: string | number}",
                    "example": null
                },
                {
                    "name": "isLoading",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "isOpened",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "Record[]",
                    "example": null
                },
                {
                    "name": "onItemHover",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onItemSelect",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "selectedIds",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any[]",
                    "example": null
                }
            ]
        },
        "IBlankFieldProps": {
            "name": "IBlankFieldProps",
            "moduleName": "ui/form/BlankField/BlankField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "children",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "text",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                }
            ]
        },
        "IButtonProps": {
            "name": "IButtonProps",
            "moduleName": "ui/form/Button/Button",
            "title": "Button",
            "description": "Кнопка или ссылка. Используется в интерфейсе для выполнения какого-либо действия по клику (onClick),\nсмена страницы в рамках роутинга (goToRoute), переход по внешней ссылке (url) или отправки формы (submit form)",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "badge",
                    "decorators": [],
                    "description": "Цифра (к примеру, новые сообщения)",
                    "required": false,
                    "type": "number | IButtonBadge",
                    "example": null
                },
                {
                    "name": "block",
                    "decorators": [],
                    "description": "Включает стиль `block`, делая размер кнопки на 100% ширины блока",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для кнопки или ссылки",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "color",
                    "decorators": [],
                    "description": "Цвет состояния",
                    "required": false,
                    "type": "string",
                    "example": "success"
                },
                {
                    "name": "confirm",
                    "decorators": [],
                    "description": "При указании данного свойства, после нажатия на кнопку и до выполнения действия будет отображено нативное\nокно с текстом подтверждения - `window.confirm('Ваш текст')`.",
                    "required": false,
                    "type": "string",
                    "example": "Удалить запись #512?"
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит кнопку в состояние \"не активна\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "ID формы, для которой кнопка выполняет submit. При указании ID формы кнопка будет показывать состояние загрузки\nпри отправке формы.",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, отображается при наведении (через тег title)",
                    "required": false,
                    "type": "any",
                    "example": "Save"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Иконка",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "isFailed",
                    "decorators": [],
                    "description": "Отобразить кнопку в состоянии неуспешного нажатия (например, при неуспешном ajax запросе)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "isLoading",
                    "decorators": [],
                    "description": "Отображать индикатор загрузки?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Текст кнопки или ссылки",
                    "required": false,
                    "type": "any",
                    "example": "Save"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Выбор макета для распложения кнопки в форме. Если кнопка находится внутри `<Form>...</Form>`, то `layout` будет\nвзят из контекста формы и автоматически применен при отораженн. Для его отключения укажите `false`.\nДанное свойство так же может принимать объект, если нужно прокинуть дополнительные свойства в шаблон макета.\nПример: `{layout: 'horizontal', cols: [2,6]}`",
                    "required": false,
                    "type": "FormLayout",
                    "example": "horizontal"
                },
                {
                    "name": "link",
                    "decorators": [],
                    "description": "Отображать как ссылку?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onClick",
                    "decorators": [],
                    "description": "Обработчик события нажатия. Для асинхронных событий вовзращяйте в обработчике `Promise`, тогда кнопка\nавтоматически будет переключаться в режим загрузки (`loading`) на время выполнения `Promise`.",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "outline",
                    "decorators": [],
                    "description": "Включает стиль `outline`, когда у кнопки остается только `border`, а цвет кнопки становится прозрачным",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "resetFailedMs",
                    "decorators": [],
                    "description": "Через сколько миллисекунд должно исчезнуть состояние \"failed\"",
                    "required": false,
                    "type": "number",
                    "example": "5000"
                },
                {
                    "name": "showLabelOnLoading",
                    "decorators": [],
                    "description": "Должна ли показываться надпись на кнопке в состоянии загрузки",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "tag",
                    "decorators": [],
                    "description": "Выбор html-тэга, который будет вставлен в DOM",
                    "required": false,
                    "type": "\"button\" | \"a\"",
                    "example": "button"
                },
                {
                    "name": "target",
                    "decorators": [],
                    "description": "HTML аттрибут `target`, доступен только для ссылок",
                    "required": false,
                    "type": "string",
                    "example": "_blank"
                },
                {
                    "name": "textColor",
                    "decorators": [],
                    "description": "Цвет текста кнопки или ссылки",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "toRoute",
                    "decorators": [],
                    "description": "ID роута, на который необходимо перейти, указанный в дереве `steroids` роутинга. Для передачи параметров\nиспользуйте свойство `toRouteParams`",
                    "required": false,
                    "type": "string",
                    "example": "profile"
                },
                {
                    "name": "toRouteParams",
                    "decorators": [],
                    "description": "Параметры роута, на который необходимо перейти, см. свойство `toRoute`.",
                    "required": false,
                    "type": "Record",
                    "example": "{userId: 52}"
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "HTML Тип",
                    "required": false,
                    "type": "\"button\" | \"submit\"",
                    "example": "submit"
                },
                {
                    "name": "url",
                    "decorators": [],
                    "description": "Ссылка на внешнюю страницу, используется совместно с свойством `link`",
                    "required": false,
                    "type": "string",
                    "example": "https://ya.ru"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ComponentType",
                    "example": "MyCustomView"
                }
            ]
        },
        "IButtonViewProps": {
            "name": "IButtonViewProps",
            "moduleName": "ui/form/Button/Button",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IButtonProps"
            ],
            "properties": [
                {
                    "name": "badge",
                    "decorators": [],
                    "description": "Цифра (к примеру, новые сообщения)",
                    "required": false,
                    "type": "IButtonBadge",
                    "example": null
                },
                {
                    "name": "block",
                    "decorators": [],
                    "description": "Включает стиль `block`, делая размер кнопки на 100% ширины блока",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для кнопки или ссылки",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "color",
                    "decorators": [],
                    "description": "Цвет состояния",
                    "required": false,
                    "type": "string",
                    "example": "success"
                },
                {
                    "name": "confirm",
                    "decorators": [],
                    "description": "При указании данного свойства, после нажатия на кнопку и до выполнения действия будет отображено нативное\nокно с текстом подтверждения - `window.confirm('Ваш текст')`.",
                    "required": false,
                    "type": "string",
                    "example": "Удалить запись #512?"
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит кнопку в состояние \"не активна\"",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "ID формы, для которой кнопка выполняет submit. При указании ID формы кнопка будет показывать состояние загрузки\nпри отправке формы.",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, отображается при наведении (через тег title)",
                    "required": false,
                    "type": "any",
                    "example": "Save"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Иконка",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "isFailed",
                    "decorators": [],
                    "description": "Отобразить кнопку в состоянии неуспешного нажатия (например, при неуспешном ajax запросе)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "isLoading",
                    "decorators": [],
                    "description": "Отображать индикатор загрузки?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Текст кнопки или ссылки",
                    "required": false,
                    "type": "any",
                    "example": "Save"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Выбор макета для распложения кнопки в форме. Если кнопка находится внутри `<Form>...</Form>`, то `layout` будет\nвзят из контекста формы и автоматически применен при отораженн. Для его отключения укажите `false`.\nДанное свойство так же может принимать объект, если нужно прокинуть дополнительные свойства в шаблон макета.\nПример: `{layout: 'horizontal', cols: [2,6]}`",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "link",
                    "decorators": [],
                    "description": "Отображать как ссылку?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onClick",
                    "decorators": [],
                    "description": "Обработчик события нажатия. Для асинхронных событий вовзращяйте в обработчике `Promise`, тогда кнопка\nавтоматически будет переключаться в режим загрузки (`loading`) на время выполнения `Promise`.",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "outline",
                    "decorators": [],
                    "description": "Включает стиль `outline`, когда у кнопки остается только `border`, а цвет кнопки становится прозрачным",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "resetFailedMs",
                    "decorators": [],
                    "description": "Через сколько миллисекунд должно исчезнуть состояние \"failed\"",
                    "required": false,
                    "type": "number",
                    "example": "5000"
                },
                {
                    "name": "showLabelOnLoading",
                    "decorators": [],
                    "description": "Должна ли показываться надпись на кнопке в состоянии загрузки",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "submitting",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "tag",
                    "decorators": [],
                    "description": "Выбор html-тэга, который будет вставлен в DOM",
                    "required": false,
                    "type": "\"button\" | \"a\"",
                    "example": "button"
                },
                {
                    "name": "target",
                    "decorators": [],
                    "description": "HTML аттрибут `target`, доступен только для ссылок",
                    "required": false,
                    "type": "string",
                    "example": "_blank"
                },
                {
                    "name": "textColor",
                    "decorators": [],
                    "description": "Цвет текста кнопки или ссылки",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "toRoute",
                    "decorators": [],
                    "description": "ID роута, на который необходимо перейти, указанный в дереве `steroids` роутинга. Для передачи параметров\nиспользуйте свойство `toRouteParams`",
                    "required": false,
                    "type": "string",
                    "example": "profile"
                },
                {
                    "name": "toRouteParams",
                    "decorators": [],
                    "description": "Параметры роута, на который необходимо перейти, см. свойство `toRoute`.",
                    "required": false,
                    "type": "Record",
                    "example": "{userId: 52}"
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "HTML Тип",
                    "required": false,
                    "type": "\"button\" | \"submit\"",
                    "example": "submit"
                },
                {
                    "name": "url",
                    "decorators": [],
                    "description": "Ссылка на внешнюю страницу, используется совместно с свойством `link`",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ComponentType",
                    "example": "MyCustomView"
                }
            ]
        },
        "ICheckboxFieldProps": {
            "name": "ICheckboxFieldProps",
            "moduleName": "ui/form/CheckboxField/CheckboxField",
            "title": "CheckboxField",
            "description": "Одиночный чекбокс. Используется в формах для отметки булевого значения.",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента \\<input /\\>",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для элемента \\<input /\\>",
                    "required": false,
                    "type": "any",
                    "example": "{onKeyDown: ...}"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "ICheckboxFieldViewProps": {
            "name": "ICheckboxFieldViewProps",
            "moduleName": "ui/form/CheckboxField/CheckboxField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "ICheckboxFieldProps",
                "IFieldWrapperOutputProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента \\<input /\\>",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для элемента \\<input /\\>",
                    "required": true,
                    "type": "{checked: boolean, disabled: boolean, name: string, onChange: {}, type: string}",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "ICheckboxListFieldProps": {
            "name": "ICheckboxListFieldProps",
            "moduleName": "ui/form/CheckboxListField/CheckboxListField",
            "title": "CheckboxListField",
            "description": "Список с чекбоксами. Используется в формах для выбора нескольких значений.",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps",
                "IDataProviderConfig",
                "Omit<IDataSelectConfig",
                "'items'>"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "autoComplete",
                    "decorators": [],
                    "description": "Настройки поиска",
                    "required": false,
                    "type": "boolean | AutoCompleteConfig",
                    "example": "{enable: true, minLength: 2, delay: 100}"
                },
                {
                    "name": "autoFetch",
                    "decorators": [],
                    "description": "Загрузка данных после любого изменения запроса.\nЕсли включен autoFetch, то настройки autoComplete не применятся.",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "dataProvider",
                    "decorators": [],
                    "description": "Конфигурация для подгрузки данных извне.\nЕсли dataProvider не передан, то поиск данных по запросу происходит локально.",
                    "required": false,
                    "type": "{action: string | IApiMethod, onSearch: {}, params: Record}",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для элемента \\<input /\\>",
                    "required": false,
                    "type": "any",
                    "example": "{onKeyDown: ...}"
                },
                {
                    "name": "inputValue",
                    "decorators": [],
                    "description": "Значение поля в форме",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Коллекция элементов",
                    "required": false,
                    "type": "DataProviderItems",
                    "example": "[{id: 1, label: 'Krasnoyarsk'}, {id: 2, label: 'Moscow'}]"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "multiple",
                    "decorators": [],
                    "description": "Возможность множественного выбора",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "Первичный ключ для item",
                    "required": false,
                    "type": "string",
                    "example": "id"
                },
                {
                    "name": "query",
                    "decorators": [],
                    "description": "Текст запроса",
                    "required": false,
                    "type": "string",
                    "example": "'some text'"
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "selectFirst",
                    "decorators": [],
                    "description": "Сделать активным первый элемент в списке",
                    "required": false,
                    "type": "any",
                    "example": "true"
                },
                {
                    "name": "selectedIds",
                    "decorators": [],
                    "description": "Список с идентификаторами выбранных элементов",
                    "required": true,
                    "type": "any",
                    "example": "[1, 4]"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "sourceItems",
                    "decorators": [],
                    "description": " Список со всеми элементами",
                    "required": false,
                    "type": "IDataSelectItem[]",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "ICheckboxListFieldViewProps": {
            "name": "ICheckboxListFieldViewProps",
            "moduleName": "ui/form/CheckboxListField/CheckboxListField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperOutputProps"
            ],
            "properties": [
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{disabled: boolean, name: string, onChange: {}, type: string}",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{id: string | number | boolean, isHovered: boolean, isSelected: boolean, label: string}[]",
                    "example": null
                },
                {
                    "name": "onItemHover",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onItemSelect",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "selectedIds",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any[]",
                    "example": null
                }
            ]
        },
        "IDateFieldProps": {
            "name": "IDateFieldProps",
            "moduleName": "ui/form/DateField/DateField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IDateInputStateInput"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "calendarProps",
                    "decorators": [],
                    "description": "Свойства для компонента Calendar",
                    "required": false,
                    "type": "ICalendarProps",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "displayFormat",
                    "decorators": [],
                    "description": "Формат даты показываемый пользователю",
                    "required": false,
                    "type": "string",
                    "example": "DD.MM.YYYY"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Иконка, отображаемая в правой части поля",
                    "required": false,
                    "type": "string | boolean",
                    "example": "calendar-day"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "Свойства поля props.input",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства, передаваемые для поля во view",
                    "required": false,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Дополнительная функция, срабатывающая при изменении props.input",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "Показывать при наведении на поле иконку для сброса значения поля в начальное состояние",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "useUTC",
                    "decorators": [],
                    "description": "Использовать всемирное время (UTC) вместо местного для даты, отправляемой на сервер",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "valueFormat",
                    "decorators": [],
                    "description": "Формат даты отправляемый на сервер",
                    "required": false,
                    "type": "string",
                    "example": "YYYY-MM-DD"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                },
                {
                    "name": "viewProps",
                    "decorators": [],
                    "description": "Свойства для view компонента",
                    "required": false,
                    "type": "Record",
                    "example": null
                }
            ]
        },
        "IDateFieldViewProps": {
            "name": "IDateFieldViewProps",
            "moduleName": "ui/form/DateField/DateField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IDateInputStateOutput",
                "Pick<IDateFieldProps",
                "'size' | 'icon' | 'errors' | 'showRemove' | 'className' | 'calendarProps'>"
            ],
            "properties": [
                {
                    "name": "calendarProps",
                    "decorators": [],
                    "description": "Свойства для компонента Calendar",
                    "required": false,
                    "type": "ICalendarProps",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Иконка, отображаемая в правой части поля",
                    "required": false,
                    "type": "string | boolean",
                    "example": "calendar-day"
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для поля во view",
                    "required": true,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "isOpened",
                    "decorators": [],
                    "description": "Показать или скрыть выпадающую панель",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "onClear",
                    "decorators": [],
                    "description": "Функция очищает значение поля",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "Функция закрывает выпадающую панель",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onNow",
                    "decorators": [],
                    "description": "Функция возвращает текущее значение времени (дата + время)",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "Показывать при наведении на поле иконку для сброса значения поля в начальное состояние",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                }
            ]
        },
        "IDateInputStateInput": {
            "name": "IDateInputStateInput",
            "moduleName": "ui/form/DateField/useDateInputState",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "displayFormat",
                    "decorators": [],
                    "description": "Формат даты показываемый пользователю",
                    "required": false,
                    "type": "string",
                    "example": "DD.MM.YYYY"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Иконка, отображаемая в правой части поля",
                    "required": false,
                    "type": "string | boolean",
                    "example": "calendar-day"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "Свойства поля props.input",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства, передаваемые для поля во view",
                    "required": false,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Дополнительная функция, срабатывающая при изменении props.input",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "Показывать при наведении на поле иконку для сброса значения поля в начальное состояние",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "useUTC",
                    "decorators": [],
                    "description": "Использовать всемирное время (UTC) вместо местного для даты, отправляемой на сервер",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "valueFormat",
                    "decorators": [],
                    "description": "Формат даты отправляемый на сервер",
                    "required": false,
                    "type": "string",
                    "example": "YYYY-MM-DD"
                }
            ]
        },
        "IDateInputStateOutput": {
            "name": "IDateInputStateOutput",
            "moduleName": "ui/form/DateField/useDateInputState",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для поля во view",
                    "required": true,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "isOpened",
                    "decorators": [],
                    "description": "Показать или скрыть выпадающую панель",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "onClear",
                    "decorators": [],
                    "description": "Функция очищает значение поля",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "Функция закрывает выпадающую панель",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onNow",
                    "decorators": [],
                    "description": "Функция возвращает текущее значение времени (дата + время)",
                    "required": false,
                    "type": "{}",
                    "example": null
                }
            ]
        },
        "IDateRangeFieldProps": {
            "name": "IDateRangeFieldProps",
            "moduleName": "ui/form/DateRangeField/DateRangeField",
            "title": "DateRangeField",
            "description": "Поле ввода дипазона двух дат с выпадающим календарём",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IDateInputStateInput",
                "Omit<IFieldWrapperInputProps",
                "'attribute'>"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "attributeFrom",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'fromTime'"
                },
                {
                    "name": "attributeTo",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'toTime'"
                },
                {
                    "name": "calendarProps",
                    "decorators": [],
                    "description": "Свойства для компонента Calendar",
                    "required": false,
                    "type": "ICalendarProps",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "displayFormat",
                    "decorators": [],
                    "description": "Формат даты показываемый пользователю",
                    "required": false,
                    "type": "string",
                    "example": "DD.MM.YYYY"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Иконка",
                    "required": false,
                    "type": "string | boolean",
                    "example": "calendar-day"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "Свойства поля props.input",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства, передаваемые для поля во view",
                    "required": false,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "inputPropsFrom",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "inputPropsTo",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "noBorder",
                    "decorators": [],
                    "description": "Отключить border вокруг элемента",
                    "required": false,
                    "type": "boolean",
                    "example": "'true'"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Дополнительная функция, срабатывающая при изменении props.input",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "pickerProps",
                    "decorators": [],
                    "description": "Свойства для компонента DayPickerInput",
                    "required": false,
                    "type": "any",
                    "example": "{dayPickerProps: {showWeekNumbers: true}}"
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Placeholder подсказка",
                    "required": false,
                    "type": "any",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "Отображение кнопки для сброса значения поля",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "useUTC",
                    "decorators": [],
                    "description": "Использовать всемирное время (UTC) вместо местного для даты, отправляемой на сервер",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "valueFormat",
                    "decorators": [],
                    "description": "Формат даты отправляемый на сервер",
                    "required": false,
                    "type": "string",
                    "example": "YYYY-MM-DD"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IDateRangeFieldViewProps": {
            "name": "IDateRangeFieldViewProps",
            "moduleName": "ui/form/DateRangeField/DateRangeField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IDateInputStateOutput",
                "Omit<IFieldWrapperOutputProps",
                "'input'>",
                "Pick<IDateRangeFieldProps",
                "'size' | 'icon' | 'errors' | 'showRemove' | 'calendarProps' | 'className' | 'disabled'\r\n        | 'noBorder' | 'style'>"
            ],
            "properties": [
                {
                    "name": "calendarProps",
                    "decorators": [],
                    "description": "Свойства для компонента Calendar",
                    "required": false,
                    "type": "ICalendarProps",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "errorsFrom",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "errorsTo",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Иконка",
                    "required": false,
                    "type": "string | boolean",
                    "example": "calendar-day"
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для поля во view",
                    "required": true,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "inputPropsFrom",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "inputPropsTo",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "isOpened",
                    "decorators": [],
                    "description": "Показать или скрыть выпадающую панель",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "noBorder",
                    "decorators": [],
                    "description": "Отключить border вокруг элемента",
                    "required": false,
                    "type": "boolean",
                    "example": "'true'"
                },
                {
                    "name": "onClear",
                    "decorators": [],
                    "description": "Функция очищает значение поля",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "Функция закрывает выпадающую панель",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onNow",
                    "decorators": [],
                    "description": "Функция возвращает текущее значение времени (дата + время)",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "Отображение кнопки для сброса значения поля",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                }
            ]
        },
        "IDateTimeFieldProps": {
            "name": "IDateTimeFieldProps",
            "moduleName": "ui/form/DateTimeField/DateTimeField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IDateInputStateInput"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "calendarProps",
                    "decorators": [],
                    "description": "Свойства для компонента Calendar",
                    "required": false,
                    "type": "ICalendarProps",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "displayFormat",
                    "decorators": [],
                    "description": "Формат даты показываемый пользователю",
                    "required": false,
                    "type": "string",
                    "example": "DD.MM.YYYY"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Иконка, отображаемая в правой части поля",
                    "required": false,
                    "type": "string | boolean",
                    "example": "calendar-day"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "Свойства поля props.input",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства, передаваемые для поля во view",
                    "required": false,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Дополнительная функция, срабатывающая при изменении props.input",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "Показывать при наведении на поле иконку для сброса значения поля в начальное состояние",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "timePanelViewProps",
                    "decorators": [],
                    "description": "Свойства для компонента панели времени",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "useUTC",
                    "decorators": [],
                    "description": "Использовать всемирное время (UTC) вместо местного для даты, отправляемой на сервер",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "valueFormat",
                    "decorators": [],
                    "description": "Формат даты отправляемый на сервер",
                    "required": false,
                    "type": "string",
                    "example": "YYYY-MM-DD"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IDateTimeFieldViewProps": {
            "name": "IDateTimeFieldViewProps",
            "moduleName": "ui/form/DateTimeField/DateTimeField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IDateInputStateOutput",
                "Pick<IDateTimeFieldProps",
                "'size' | 'errors' | 'showRemove' | 'calendarProps' | 'className' | 'timePanelViewProps'>"
            ],
            "properties": [
                {
                    "name": "calendarProps",
                    "decorators": [],
                    "description": "Свойства для компонента Calendar",
                    "required": false,
                    "type": "ICalendarProps",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для поля во view",
                    "required": true,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "isOpened",
                    "decorators": [],
                    "description": "Показать или скрыть выпадающую панель",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "onClear",
                    "decorators": [],
                    "description": "Функция очищает значение поля",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "Функция закрывает выпадающую панель",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onNow",
                    "decorators": [],
                    "description": "Функция возвращает текущее значение времени (дата + время)",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "Показывать при наведении на поле иконку для сброса значения поля в начальное состояние",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "timePanelViewProps",
                    "decorators": [],
                    "description": "Свойства для компонента панели времени",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IDateTimeRangeFieldProps": {
            "name": "IDateTimeRangeFieldProps",
            "moduleName": "ui/form/DateTimeRangeField/DateTimeRangeField",
            "title": "DateTimeRangeField",
            "description": "Поле ввода дипазона двух дат со временем, с выпадающим календарём",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "Omit<IDateInputStateInput",
                "'inputProps' | 'input'>",
                "Omit<IFieldWrapperInputProps",
                "'attribute'>"
            ],
            "properties": [
                {
                    "name": "attributeFrom",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'fromTime'"
                },
                {
                    "name": "attributeTo",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'toTime'"
                },
                {
                    "name": "calendarProps",
                    "decorators": [],
                    "description": "Свойства для компонента Calendar",
                    "required": false,
                    "type": "ICalendarProps",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "inputPropsFrom",
                    "decorators": [],
                    "description": "Свойства для поля 'from'",
                    "required": false,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "inputPropsTo",
                    "decorators": [],
                    "description": "Свойства для поля 'to'",
                    "required": false,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "noBorder",
                    "decorators": [],
                    "description": "Отключить border вокруг элемента",
                    "required": false,
                    "type": "boolean",
                    "example": "'true'"
                },
                {
                    "name": "pickerProps",
                    "decorators": [],
                    "description": "Свойства для компонента DayPickerInput",
                    "required": false,
                    "type": "any",
                    "example": "{dayPickerProps: {showWeekNumbers: true}}"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "timePanelViewProps",
                    "decorators": [],
                    "description": "Свойства для компонента панели времени",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IDateTimeRangeFieldViewProps": {
            "name": "IDateTimeRangeFieldViewProps",
            "moduleName": "ui/form/DateTimeRangeField/DateTimeRangeField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IDateInputStateOutput",
                "Omit<IFieldWrapperOutputProps",
                "'input'>",
                "Pick<IDateRangeFieldProps",
                "'size' | 'icon' | 'errors' | 'showRemove' | 'calendarProps' | 'className' | 'disabled'\r\n        | 'noBorder' | 'style'>"
            ],
            "properties": [
                {
                    "name": "calendarProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ICalendarProps",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "errorsFrom",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "errorsTo",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Иконка",
                    "required": false,
                    "type": "string | boolean",
                    "example": "calendar-day"
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для поля во view",
                    "required": true,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "inputPropsFrom",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "inputPropsTo",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "isOpened",
                    "decorators": [],
                    "description": "Показать или скрыть выпадающую панель",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "noBorder",
                    "decorators": [],
                    "description": "Отключить border вокруг элемента",
                    "required": false,
                    "type": "boolean",
                    "example": "'true'"
                },
                {
                    "name": "onClear",
                    "decorators": [],
                    "description": "Функция очищает значение поля",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "Функция закрывает выпадающую панель",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onNow",
                    "decorators": [],
                    "description": "Функция возвращает текущее значение времени (дата + время)",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "Отображение кнопки для сброса значения поля",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "timePanelViewProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IDropDownFieldProps": {
            "name": "IDropDownFieldProps",
            "moduleName": "ui/form/DropDownField/DropDownField",
            "title": "DropDownField",
            "description": "Выпадающий список для выбора одного или нескольких значений",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps",
                "IDataProviderConfig",
                "Omit<IDataSelectConfig",
                "'items'>"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "autoComplete",
                    "decorators": [],
                    "description": "Настройки поиска",
                    "required": false,
                    "type": "boolean | AutoCompleteConfig",
                    "example": "{enable: true, minLength: 2, delay: 100}"
                },
                {
                    "name": "autoFetch",
                    "decorators": [],
                    "description": "Загрузка данных после любого изменения запроса.\nЕсли включен autoFetch, то настройки autoComplete не применятся.",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "dataProvider",
                    "decorators": [],
                    "description": "Конфигурация для подгрузки данных извне.\nЕсли dataProvider не передан, то поиск данных по запросу происходит локально.",
                    "required": false,
                    "type": "{action: string | IApiMethod, onSearch: {}, params: Record}",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "inputValue",
                    "decorators": [],
                    "description": "Значение поля в форме",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Коллекция элементов",
                    "required": false,
                    "type": "DataProviderItems",
                    "example": "[{id: 1, label: 'Krasnoyarsk'}, {id: 2, label: 'Moscow'}]"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "multiple",
                    "decorators": [],
                    "description": "Возможность множественного выбора",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "noBorder",
                    "decorators": [],
                    "description": "Включает стиль без 'border'",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "Первичный ключ для item",
                    "required": false,
                    "type": "string",
                    "example": "id"
                },
                {
                    "name": "query",
                    "decorators": [],
                    "description": "Текст запроса",
                    "required": false,
                    "type": "string",
                    "example": "'some text'"
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "searchPlaceholder",
                    "decorators": [],
                    "description": "Placeholder подсказка",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "selectFirst",
                    "decorators": [],
                    "description": "Сделать активным первый элемент в списке",
                    "required": false,
                    "type": "any",
                    "example": "true"
                },
                {
                    "name": "selectedIds",
                    "decorators": [],
                    "description": "Список с идентификаторами выбранных элементов",
                    "required": true,
                    "type": "any",
                    "example": "[1, 4]"
                },
                {
                    "name": "showReset",
                    "decorators": [],
                    "description": "Показать кнопку для сброса выбранного значения",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "sourceItems",
                    "decorators": [],
                    "description": " Список со всеми элементами",
                    "required": false,
                    "type": "IDataSelectItem[]",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                }
            ]
        },
        "IDropDownFieldViewProps": {
            "name": "IDropDownFieldViewProps",
            "moduleName": "ui/form/DropDownField/DropDownField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "Omit<IDropDownFieldProps",
                "'items'>"
            ],
            "properties": [
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "forwardedRef",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "hoveredId",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "isAutoComplete",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "isLoading",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "isOpened",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "Record[]",
                    "example": null
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onItemHover",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onItemRemove",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onItemSelect",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onReset",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "searchAutoFocus",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "searchInputProps",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{className: string, disabled: boolean, name: string, onChange: {}, placeholder: string, type: string, value: string | number}",
                    "example": null
                },
                {
                    "name": "selectedIds",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any[]",
                    "example": null
                }
            ]
        },
        "IFieldProps": {
            "name": "IFieldProps",
            "moduleName": "ui/form/Field/Field",
            "title": "Field",
            "description": "Компонент, который рендерит соответствующее поле, исходя из переданной модели и названия аттрибута.\nПо дефолту будет отрендерен InputField.\nТакже можно не использовать модель, а передавать компонент поля напрямую через пропсы.",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "any",
                    "example": "isVisible"
                },
                {
                    "name": "component",
                    "decorators": [],
                    "description": "Компонент поля",
                    "required": false,
                    "type": "any",
                    "example": "DropDownField"
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "Model",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                }
            ]
        },
        "IFieldWrapperInputProps": {
            "name": "IFieldWrapperInputProps",
            "moduleName": "ui/form/Field/fieldWrapper",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                }
            ]
        },
        "IFieldWrapperOutputProps": {
            "name": "IFieldWrapperOutputProps",
            "moduleName": "ui/form/Field/fieldWrapper",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                }
            ]
        },
        "IFieldLayoutProps": {
            "name": "IFieldLayoutProps",
            "moduleName": "ui/form/FieldLayout/FieldLayout",
            "title": "FieldLayout",
            "description": "Специальный шаблон для поля, который настраивает его расположение внутри формы, рендерит лейбл, подсказки и ошибки",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "'Field is required'"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отображается, когда в поле нет ошибок и layout !== 'inline'",
                    "required": false,
                    "type": "string | boolean",
                    "example": "'Save'"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Выбор шаблона для расположения поля. Если false, то поле будет отрендерено без шаблона",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'inline'"
                },
                {
                    "name": "layoutView",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true,\nто к названию будет добавлен модификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                }
            ]
        },
        "IFieldLayoutViewProps": {
            "name": "IFieldLayoutViewProps",
            "moduleName": "ui/form/FieldLayout/FieldLayout",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "children",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string | string[]",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{className: string, cols: number[], label: boolean, layout: string | boolean, style: any}",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                }
            ]
        },
        "IFieldListItemViewProps": {
            "name": "IFieldListItemViewProps",
            "moduleName": "ui/form/FieldList/FieldList",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperOutputProps"
            ],
            "properties": [
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IFieldListItem & {disabled: boolean, size: boolean}[]",
                    "example": null
                },
                {
                    "name": "onRemove",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "rowIndex",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                }
            ]
        },
        "IFieldListProps": {
            "name": "IFieldListProps",
            "moduleName": "ui/form/FieldList/FieldList",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для списка с группами полей",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "enableKeyboardNavigation",
                    "decorators": [],
                    "description": "При фокусировке на одном из элементов формы и нажатию на клавиши стрелок вверх/вниз + Shift\nпроисходит добавление группы полей сверху или снизу соответственно",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "initialRowsCount",
                    "decorators": [],
                    "description": "Изначальное количество групп с полями",
                    "required": false,
                    "type": "number",
                    "example": "2"
                },
                {
                    "name": "initialValues",
                    "decorators": [],
                    "description": "Начальные значения в полях",
                    "required": false,
                    "type": "{}",
                    "example": "{name: 'Ivan', amount: 5}"
                },
                {
                    "name": "itemView",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения группы полей",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                },
                {
                    "name": "itemViewProps",
                    "decorators": [],
                    "description": "Пропсы для компонента отображения группы полей - FieldListItemView",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Список с полями формы",
                    "required": false,
                    "type": "IFieldListItem[]",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "showAdd",
                    "decorators": [],
                    "description": "Отображение кнопки для добавления ещё одной группы с полями",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "Возможность удаления группы с полями (добавляет крестик справа от группы)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения списка с группами полей",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                },
                {
                    "name": "viewProps",
                    "decorators": [],
                    "description": "Пропсы для компонента отображения списка с группами полей - FieldListView",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IFieldListViewProps": {
            "name": "IFieldListViewProps",
            "moduleName": "ui/form/FieldList/FieldList",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "children",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "forwardedRef",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IFieldListItem & {disabled: boolean, size: boolean}[]",
                    "example": null
                },
                {
                    "name": "onAdd",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "showAdd",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IFieldSetProps": {
            "name": "IFieldSetProps",
            "moduleName": "ui/form/FieldSet/FieldSet",
            "title": "FieldSet",
            "description": "Компонент для группировки полей формы",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFormContext",
                "IComponentsHocOutput"
            ],
            "properties": [
                {
                    "name": "api",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для \\<fieldset\\>...\\<\\/fieldset\\>",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "clientStorage",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "components",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IComponents",
                    "example": null
                },
                {
                    "name": "dispatch",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "fields",
                    "decorators": [],
                    "description": "Конфигурационный массив с полями формы",
                    "required": false,
                    "type": "IFieldProps[]",
                    "example": null
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "html",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "http",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Заголовок для группы полей в форме",
                    "required": false,
                    "type": "any",
                    "example": "Save"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "FormLayout",
                    "example": null
                },
                {
                    "name": "locale",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "meta",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "provider",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "pushNotification",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "reducer",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{dispatch: Dispatch, select: any}",
                    "example": null
                },
                {
                    "name": "resource",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "store",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "ui",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                },
                {
                    "name": "ws",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IFieldSetViewProps": {
            "name": "IFieldSetViewProps",
            "moduleName": "ui/form/FieldSet/FieldSet",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "children",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IFileFieldItemViewProps": {
            "name": "IFileFieldItemViewProps",
            "moduleName": "ui/form/FileField/FileField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFileHocInput",
                "IFileHocOutput"
            ],
            "properties": [
                {
                    "name": "backendUrl",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "error",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "fileId",
                    "decorators": [],
                    "description": "ID файла",
                    "required": false,
                    "type": "string | number",
                    "example": "34"
                },
                {
                    "name": "files",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any[]",
                    "example": null
                },
                {
                    "name": "image",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{height: string, url: string, width: string}",
                    "example": null
                },
                {
                    "name": "imagesExactSize",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "imagesOnly",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "imagesProcessor",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "initialFiles",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "FormInputType",
                    "example": null
                },
                {
                    "name": "mimeTypes",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "multiple",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "onAdd",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "onBrowse",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "onRemove",
                    "decorators": [],
                    "description": "Обработчик события удаления файла",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "progress",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{bytesUploaded: number, percent: number}",
                    "example": null
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "Исходное название файла",
                    "required": false,
                    "type": "string",
                    "example": "original-name"
                },
                {
                    "name": "uid",
                    "decorators": [],
                    "description": "Уникальный текстовый идентификатор",
                    "required": false,
                    "type": "string",
                    "example": "e65f5867-0083-48a7-af43-1121ed9e6280"
                },
                {
                    "name": "uploader",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IFileFieldProps": {
            "name": "IFileFieldProps",
            "moduleName": "ui/form/FileField/FileField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps",
                "IFileHocInput",
                "IFileHocOutput"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "backendUrl",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "buttonComponent",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "buttonProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "files",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any[]",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "imagesExactSize",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "imagesOnly",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "imagesProcessor",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "initialFiles",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "FormInputType",
                    "example": null
                },
                {
                    "name": "itemProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "itemView",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "mimeTypes",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "multiple",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "onAdd",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "onBrowse",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onRemove",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "Показать значок удаление файла",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "uploader",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                }
            ]
        },
        "IFileFieldViewProps": {
            "name": "IFileFieldViewProps",
            "moduleName": "ui/form/FileField/FileField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFileFieldProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "backendUrl",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "buttonComponent",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "buttonProps",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{disabled: boolean, label: any, onClick: {}, size: boolean}",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "files",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any[]",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "imagesExactSize",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "imagesOnly",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "imagesProcessor",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "initialFiles",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "FormInputType",
                    "example": null
                },
                {
                    "name": "itemProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "itemView",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "IFileFieldItemViewProps[]",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "mimeTypes",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "multiple",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "onAdd",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "onBrowse",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onRemove",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "Показать значок удаление файла",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "uploader",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                }
            ]
        },
        "IFormContext": {
            "name": "IFormContext",
            "moduleName": "ui/form/Form/Form",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "dispatch",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "FormLayout",
                    "example": null
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "provider",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "reducer",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{dispatch: Dispatch, select: any}",
                    "example": null
                }
            ]
        },
        "IFormProps": {
            "name": "IFormProps",
            "moduleName": "ui/form/Form/Form",
            "title": "Form",
            "description": "Компонент для создания формы",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "action",
                    "decorators": [],
                    "description": "Url на который будет отправлена форма",
                    "required": false,
                    "type": "string | IApiMethod",
                    "example": "api/v1/handle-form"
                },
                {
                    "name": "actionMethod",
                    "decorators": [],
                    "description": "Тип HTTP запроса (GET | POST | PUT | DELETE)",
                    "required": false,
                    "type": "string",
                    "example": "POST"
                },
                {
                    "name": "autoFocus",
                    "decorators": [],
                    "description": "Если в форме есть элементы \\<input\\>, то произойдет автоматическая фокусировка на первом из них",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "autoSave",
                    "decorators": [],
                    "description": "Сохраняет значения полей формы в LocalStorage",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "autoStartTwoFactor",
                    "decorators": [],
                    "description": "Автоматически стартовать 2fa аутентификацию (отправлять код)",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "captchaActionName",
                    "decorators": [],
                    "description": "Название действия, которое передаётся в API Google reCAPTCHA v3, для более детального анализа\nповедения пользователя (https://developers.google.com/recaptcha/docs/v3)",
                    "required": false,
                    "type": "string",
                    "example": "'addComment'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для \\<form\\>...\\<\\/form\\>",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "fields",
                    "decorators": [],
                    "description": "Поля, которые необходимо поместить в форму",
                    "required": false,
                    "type": "string | IFieldProps[]",
                    "example": "[{attribute: 'category', component: 'DropDownField'}]"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "Идентификатор формы",
                    "required": false,
                    "type": "string",
                    "example": "BookingForm"
                },
                {
                    "name": "initialValues",
                    "decorators": [],
                    "description": "Начальные значения формы",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для полей в форме",
                    "required": false,
                    "type": "FormLayout",
                    "example": "horizontal"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onAfterSubmit",
                    "decorators": [],
                    "description": "Обработчик события после отправки формы",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onBeforeSubmit",
                    "decorators": [],
                    "description": "Обработчик события перед отправкой формы",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Обработчик события при каком-либо изменении в форме",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onComplete",
                    "decorators": [],
                    "description": "Обработчик успешного выполнения формы (без ошибок)",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onSubmit",
                    "decorators": [],
                    "description": "Обработчик события отправки формы",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onTwoFactor",
                    "decorators": [],
                    "description": "Обработчик, который вызывается при запросе 2FA",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "restoreCustomizer",
                    "decorators": [],
                    "description": "Обработчик, который используется для форматирования значений из адресной строки в валидные значения формы",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "submitLabel",
                    "decorators": [],
                    "description": "Надпись на кнопке отправки формы",
                    "required": false,
                    "type": "string",
                    "example": "Submit"
                },
                {
                    "name": "syncWithAddressBar",
                    "decorators": [],
                    "description": "Значения полей формы будут подставляться в качестве query-параметров в адресную строку",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "useHash",
                    "decorators": [],
                    "description": "Указывает, что в качестве сепаратора для параметров формы в адресной строке нужно использовать '#', а не '?'",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "useRedux",
                    "decorators": [],
                    "description": "Использовать для данных глобальное хранилище (redux)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "validators",
                    "decorators": [],
                    "description": "Набор с правилами для проверки соответствия значений полей формы определенному формату.\nПроверка запускается в момент отправки формы (в обработчике onSubmit).",
                    "required": false,
                    "type": "any[]",
                    "example": "[['name', 'required'], ['age', 'integer']]"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                },
                {
                    "name": "viewProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": "{className: 'foo'}"
                }
            ]
        },
        "IFormReducerState": {
            "name": "IFormReducerState",
            "moduleName": "ui/form/Form/Form",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "initialValues",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "isInvalid",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "isSubmitting",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "values",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IFormViewProps": {
            "name": "IFormViewProps",
            "moduleName": "ui/form/Form/Form",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "children",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "fields",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | IFieldProps[]",
                    "example": null
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{className: string, cols: number[], label: boolean, layout: string | boolean}",
                    "example": null
                },
                {
                    "name": "onSubmit",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "submitLabel",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                }
            ]
        },
        "IHtmlFieldProps": {
            "name": "IHtmlFieldProps",
            "moduleName": "ui/form/HtmlField/HtmlField",
            "title": "HtmlField",
            "description": "Компонент для создания HTML-разметки, использующий WYSIWYG-реадактор",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps",
                "IFieldWrapperOutputProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "editorProps",
                    "decorators": [],
                    "description": "Конфигурация wysiwyg реадактора",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onBlur",
                    "decorators": [],
                    "description": "Обработчик события при снятии фокуса с редактора",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onFocus",
                    "decorators": [],
                    "description": "Обработчик события при фокусе на редактора",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "uploadImagesProcessor",
                    "decorators": [],
                    "description": "После загрузки изображения на сервер,\nможно указать с каким процессором должно вернуться картинка",
                    "required": false,
                    "type": "string",
                    "example": "origin"
                },
                {
                    "name": "uploadUrl",
                    "decorators": [],
                    "description": "Url на который будет отправлена форма загрузки файла",
                    "required": false,
                    "type": "string",
                    "example": "/api/v1/upload-files"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IHtmlFieldViewProps": {
            "name": "IHtmlFieldViewProps",
            "moduleName": "ui/form/HtmlField/HtmlField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IHtmlFieldProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "editorProps",
                    "decorators": [],
                    "description": "Конфигурация wysiwyg реадактора",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onBlur",
                    "decorators": [],
                    "description": "Обработчик события при снятии фокуса с редактора",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onFocus",
                    "decorators": [],
                    "description": "Обработчик события при фокусе на редактора",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "uploadImagesProcessor",
                    "decorators": [],
                    "description": "После загрузки изображения на сервер,\nможно указать с каким процессором должно вернуться картинка",
                    "required": false,
                    "type": "string",
                    "example": "origin"
                },
                {
                    "name": "uploadUrl",
                    "decorators": [],
                    "description": "Url на который будет отправлена форма загрузки файла",
                    "required": false,
                    "type": "string",
                    "example": "/api/v1/upload-files"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "ICropInputProps": {
            "name": "ICropInputProps",
            "moduleName": "ui/form/ImageField/ImageField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "backendUrl",
                    "decorators": [],
                    "description": "Экшн для отправки параметров обрезки на бэкенд",
                    "required": false,
                    "type": "string",
                    "example": "'/api/v1/user/avatar/crop'"
                },
                {
                    "name": "initialValues",
                    "decorators": [],
                    "description": "Изначальные параметры обрезки изображения",
                    "required": false,
                    "type": "Crop",
                    "example": "{unit: 'px', aspect: 1, x: 0, y: 0, width: 200, height: 200}"
                },
                {
                    "name": "reactImageCropProps",
                    "decorators": [],
                    "description": "Пропсы для модуля react-image-crop",
                    "required": false,
                    "type": "ReactCrop",
                    "example": "{maxWidth: 400, maxHeight: 400}"
                }
            ]
        },
        "ICropOutputProps": {
            "name": "ICropOutputProps",
            "moduleName": "ui/form/ImageField/ImageField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "ICropInputProps"
            ],
            "properties": [
                {
                    "name": "backendUrl",
                    "decorators": [],
                    "description": "Экшн для отправки параметров обрезки на бэкенд",
                    "required": false,
                    "type": "string",
                    "example": "'/api/v1/user/avatar/crop'"
                },
                {
                    "name": "initialValues",
                    "decorators": [],
                    "description": "Изначальные параметры обрезки изображения",
                    "required": false,
                    "type": "Crop",
                    "example": "{unit: 'px', aspect: 1, x: 0, y: 0, width: 200, height: 200}"
                },
                {
                    "name": "onSubmit",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "reactImageCropProps",
                    "decorators": [],
                    "description": "Пропсы для модуля react-image-crop",
                    "required": false,
                    "type": "ReactCrop",
                    "example": "{maxWidth: 400, maxHeight: 400}"
                }
            ]
        },
        "IImageFieldModalViewProps": {
            "name": "IImageFieldModalViewProps",
            "moduleName": "ui/form/ImageField/ImageField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IModalProps"
            ],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Кастомный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": "'CustomCssClassName'"
                },
                {
                    "name": "closeTimeoutMs",
                    "decorators": [],
                    "description": "Время, через которое произойдет закрытие Modal.\nВ этот отрезок времени должны происходить все анимации закрытия компонента.\nПереопределяет отрезок времени, заданный в ModalPortal",
                    "required": false,
                    "type": "number",
                    "example": "300"
                },
                {
                    "name": "component",
                    "decorators": [],
                    "description": "Компонент, который отрендерится внутри Modal",
                    "required": false,
                    "type": "{}",
                    "example": "() => <InnerModalComponent />"
                },
                {
                    "name": "componentProps",
                    "decorators": [],
                    "description": "Свойства для внутреннего компонента",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "controls",
                    "decorators": [],
                    "description": "Коллекция контролов, которая отобразится в Modal",
                    "required": false,
                    "type": "IControlItem[]",
                    "example": "[{label: __(('Закрыть')), onClick: () => props.onClose()}]"
                },
                {
                    "name": "crop",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "ICropOutputProps",
                    "example": null
                },
                {
                    "name": "group",
                    "decorators": [],
                    "description": "Группа Modal",
                    "required": false,
                    "type": "string",
                    "example": "'modal'"
                },
                {
                    "name": "image",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "index",
                    "decorators": [],
                    "description": "Порядковый номер Modal",
                    "required": false,
                    "type": "number",
                    "example": "0"
                },
                {
                    "name": "isClosing",
                    "decorators": [],
                    "description": "Значение свойства отслеживается для показа/закрытия Modal.\nЕсли для компонента ModalPortal установлено значение задержки (animationDelayMc), то после закрытия\nпользователем Modal, оно исчезнет не сразу, а через указанный в animationDelayMc промежуток времени.\nВ течение этого времени флаг isClosing будет равен true.\nЕсли задержка не установлена, Modal закроется сразу же и флаг isClosing всегда будет равен false.",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "Обработчик срабатывает при закрытии Modal",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "shouldCloseOnEsc",
                    "decorators": [],
                    "description": "Закрытие Modal при нажатии на клавишу 'ESC'",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "shouldCloseOnOverlayClick",
                    "decorators": [],
                    "description": "Закрытие Modal при клике на компонент overlay внутри Modal (темный фон, отделяющий контент страницы от Modal)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер Modal",
                    "required": false,
                    "type": "string",
                    "example": "'middle'"
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "Заголовок Modal",
                    "required": false,
                    "type": "string",
                    "example": "'Заявка отправлена на модерацию'"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение React-компонента для кастомизации view-отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IImageFieldProps": {
            "name": "IImageFieldProps",
            "moduleName": "ui/form/ImageField/ImageField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps",
                "Omit<IFileHocInput",
                "'multiple' | 'imagesOnly'>",
                "IFileHocOutput"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "backendUrl",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для компонента",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "crop",
                    "decorators": [],
                    "description": "Параметры обрезки",
                    "required": false,
                    "type": "ICropInputProps",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "files",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any[]",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "imagesExactSize",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "imagesProcessor",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "initialFiles",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "FormInputType",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название кнопки",
                    "required": false,
                    "type": "string",
                    "example": "'Загрузить'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "mimeTypes",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "modalProps",
                    "decorators": [],
                    "description": "Пропсы для модального окна",
                    "required": false,
                    "type": "IModalProps",
                    "example": null
                },
                {
                    "name": "modalView",
                    "decorators": [],
                    "description": "Переопределение внешнего вида модального окна",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomModalView"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onAdd",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "onBrowse",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onRemove",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "uploader",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение внешнего вида компонента",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IImageFieldViewProps": {
            "name": "IImageFieldViewProps",
            "moduleName": "ui/form/ImageField/ImageField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IImageFieldProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "backendUrl",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для компонента",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "crop",
                    "decorators": [],
                    "description": "Параметры обрезки",
                    "required": false,
                    "type": "ICropInputProps",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "files",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any[]",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "imagesExactSize",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "imagesProcessor",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "initialFiles",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "FormInputType",
                    "example": null
                },
                {
                    "name": "item",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{disabled: boolean, error: string, fileId: string | number, image: {height: string, url: string, width: string}, onRemove: {}, progress: {bytesUploaded: number, percent: number}, size: string | number, title: string, uid: string}",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название кнопки",
                    "required": false,
                    "type": "string",
                    "example": "'Загрузить'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "mimeTypes",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "modalProps",
                    "decorators": [],
                    "description": "Пропсы для модального окна",
                    "required": false,
                    "type": "IModalProps",
                    "example": null
                },
                {
                    "name": "modalView",
                    "decorators": [],
                    "description": "Переопределение внешнего вида модального окна",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomModalView"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onAdd",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "onBrowse",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onClick",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onRemove",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "uploader",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение внешнего вида компонента",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IInputFieldProps": {
            "name": "IInputFieldProps",
            "moduleName": "ui/form/InputField/InputField",
            "title": "InputField",
            "description": "Поле ввода текста",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps"
            ],
            "properties": [
                {
                    "name": "addonAfter",
                    "decorators": [],
                    "description": "Текст или React-нода, которая будет отрендерена справа от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'.com'"
                },
                {
                    "name": "addonBefore",
                    "decorators": [],
                    "description": "Текст или React-нода, которая будет отрендерена слева от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'http://'"
                },
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "failed",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для элемента \\<input /\\>",
                    "required": false,
                    "type": "any",
                    "example": "{onKeyDown: ...}"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "maskProps",
                    "decorators": [],
                    "description": "Конфигурация маски",
                    "required": false,
                    "type": "any",
                    "example": "{ mask: '+7 (999) 999-99-99' }"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Placeholder подсказка",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер Innput",
                    "required": false,
                    "type": "string",
                    "example": "'large'"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "success",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "textAfter",
                    "decorators": [],
                    "description": "Изображение или React-нода, которая будет отрендерена справа от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "require('icon.png') | <component/>"
                },
                {
                    "name": "textBefore",
                    "decorators": [],
                    "description": "Изображение или React-нода, которая будет отрендерена слева от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "require('icon.png') | <component/>"
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "HTML Тип",
                    "required": false,
                    "type": "string",
                    "example": "email"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                },
                {
                    "name": "viewProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IInputFieldViewProps": {
            "name": "IInputFieldViewProps",
            "moduleName": "ui/form/InputField/InputField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IInputFieldProps",
                "IFieldWrapperOutputProps"
            ],
            "properties": [
                {
                    "name": "addonAfter",
                    "decorators": [],
                    "description": "Текст или React-нода, которая будет отрендерена справа от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "addonBefore",
                    "decorators": [],
                    "description": "Текст или React-нода, которая будет отрендерена слева от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "failed",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для элемента \\<input /\\>",
                    "required": true,
                    "type": "{disabled: string, name: string, onChange: ChangeEventHandler, placeholder: string, type: string, value: string | number}",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "maskProps",
                    "decorators": [],
                    "description": "Конфигурация маски",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onBlur",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onFocus",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onMouseDown",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Placeholder подсказка",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер Innput",
                    "required": false,
                    "type": "string",
                    "example": "'large'"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "success",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "textAfter",
                    "decorators": [],
                    "description": "Изображение или React-нода, которая будет отрендерена справа от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "textBefore",
                    "decorators": [],
                    "description": "Изображение или React-нода, которая будет отрендерена слева от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "HTML Тип",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                },
                {
                    "name": "viewProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "INavFieldProps": {
            "name": "INavFieldProps",
            "moduleName": "ui/form/NavField/NavField",
            "title": "NavField",
            "description": "Навигация как часть формы",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps",
                "IFieldWrapperOutputProps",
                "IDataProviderConfig"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "autoComplete",
                    "decorators": [],
                    "description": "Настройки поиска",
                    "required": false,
                    "type": "boolean | AutoCompleteConfig",
                    "example": "{enable: true, minLength: 2, delay: 100}"
                },
                {
                    "name": "autoFetch",
                    "decorators": [],
                    "description": "Загрузка данных после любого изменения запроса.\nЕсли включен autoFetch, то настройки autoComplete не применятся.",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "dataProvider",
                    "decorators": [],
                    "description": "Конфигурация для подгрузки данных извне.\nЕсли dataProvider не передан, то поиск данных по запросу происходит локально.",
                    "required": false,
                    "type": "{action: string | IApiMethod, onSearch: {}, params: Record}",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Коллекция элементов",
                    "required": false,
                    "type": "DataProviderItems",
                    "example": "[{id: 1, label: 'Krasnoyarsk'}, {id: 2, label: 'Moscow'}]"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "navProps",
                    "decorators": [],
                    "description": "Свойства для компонента Nav",
                    "required": true,
                    "type": "INavProps",
                    "example": null
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "query",
                    "decorators": [],
                    "description": "Текст запроса",
                    "required": false,
                    "type": "string",
                    "example": "'some text'"
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                }
            ]
        },
        "INumberFieldProps": {
            "name": "INumberFieldProps",
            "moduleName": "ui/form/NumberField/NumberField",
            "title": "NumberField",
            "description": "Числовое поле ввода",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IInputFieldProps",
                "IFieldWrapperInputProps"
            ],
            "properties": [
                {
                    "name": "addonAfter",
                    "decorators": [],
                    "description": "Текст или React-нода, которая будет отрендерена справа от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'.com'"
                },
                {
                    "name": "addonBefore",
                    "decorators": [],
                    "description": "Текст или React-нода, которая будет отрендерена слева от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'http://'"
                },
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "failed",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для элемента \\<input /\\>",
                    "required": false,
                    "type": "any",
                    "example": "{onKeyDown: ...}"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "maskProps",
                    "decorators": [],
                    "description": "Конфигурация маски",
                    "required": false,
                    "type": "any",
                    "example": "{ mask: '+7 (999) 999-99-99' }"
                },
                {
                    "name": "max",
                    "decorators": [],
                    "description": "Максимальное значение",
                    "required": false,
                    "type": "number",
                    "example": "100"
                },
                {
                    "name": "min",
                    "decorators": [],
                    "description": "Минимальное значение",
                    "required": false,
                    "type": "number",
                    "example": "1"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Placeholder подсказка",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер Innput",
                    "required": false,
                    "type": "string",
                    "example": "'large'"
                },
                {
                    "name": "step",
                    "decorators": [],
                    "description": "Шаг увеличения/уменьшения значения",
                    "required": false,
                    "type": "string | number",
                    "example": "5"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "success",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "textAfter",
                    "decorators": [],
                    "description": "Изображение или React-нода, которая будет отрендерена справа от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "require('icon.png') | <component/>"
                },
                {
                    "name": "textBefore",
                    "decorators": [],
                    "description": "Изображение или React-нода, которая будет отрендерена слева от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "require('icon.png') | <component/>"
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "HTML Тип",
                    "required": false,
                    "type": "string",
                    "example": "email"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                },
                {
                    "name": "viewProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "INumberFieldViewProps": {
            "name": "INumberFieldViewProps",
            "moduleName": "ui/form/NumberField/NumberField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "INumberFieldProps",
                "IFieldWrapperOutputProps"
            ],
            "properties": [
                {
                    "name": "addonAfter",
                    "decorators": [],
                    "description": "Текст или React-нода, которая будет отрендерена справа от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'.com'"
                },
                {
                    "name": "addonBefore",
                    "decorators": [],
                    "description": "Текст или React-нода, которая будет отрендерена слева от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'http://'"
                },
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "failed",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для элемента \\<input /\\>",
                    "required": true,
                    "type": "{disabled: boolean, max: string | number, min: string | number, name: string, onChange: {}, placeholder: string, step: string | number, type: string, value: number}",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "maskProps",
                    "decorators": [],
                    "description": "Конфигурация маски",
                    "required": false,
                    "type": "any",
                    "example": "{ mask: '+7 (999) 999-99-99' }"
                },
                {
                    "name": "max",
                    "decorators": [],
                    "description": "Максимальное значение",
                    "required": false,
                    "type": "number",
                    "example": "100"
                },
                {
                    "name": "min",
                    "decorators": [],
                    "description": "Минимальное значение",
                    "required": false,
                    "type": "number",
                    "example": "1"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Placeholder подсказка",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер Innput",
                    "required": false,
                    "type": "string",
                    "example": "'large'"
                },
                {
                    "name": "step",
                    "decorators": [],
                    "description": "Шаг увеличения/уменьшения значения",
                    "required": false,
                    "type": "string | number",
                    "example": "5"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "success",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "textAfter",
                    "decorators": [],
                    "description": "Изображение или React-нода, которая будет отрендерена справа от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "require('icon.png') | <component/>"
                },
                {
                    "name": "textBefore",
                    "decorators": [],
                    "description": "Изображение или React-нода, которая будет отрендерена слева от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "require('icon.png') | <component/>"
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "HTML Тип",
                    "required": false,
                    "type": "string",
                    "example": "email"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                },
                {
                    "name": "viewProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IPasswordFieldProps": {
            "name": "IPasswordFieldProps",
            "moduleName": "ui/form/PasswordField/PasswordField",
            "title": "PasswordField",
            "description": "Поле ввода пароля",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IInputFieldProps"
            ],
            "properties": [
                {
                    "name": "addonAfter",
                    "decorators": [],
                    "description": "Текст или React-нода, которая будет отрендерена справа от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'.com'"
                },
                {
                    "name": "addonBefore",
                    "decorators": [],
                    "description": "Текст или React-нода, которая будет отрендерена слева от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'http://'"
                },
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "failed",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для элемента \\<input /\\>",
                    "required": false,
                    "type": "any",
                    "example": "{onKeyDown: ...}"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "maskProps",
                    "decorators": [],
                    "description": "Конфигурация маски",
                    "required": false,
                    "type": "any",
                    "example": "{ mask: '+7 (999) 999-99-99' }"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Placeholder подсказка",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "security",
                    "decorators": [],
                    "description": "Если true, то отображается шкала сложности пароля и иконка 'отображения' пароля",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер Innput",
                    "required": false,
                    "type": "string",
                    "example": "'large'"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "success",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "textAfter",
                    "decorators": [],
                    "description": "Изображение или React-нода, которая будет отрендерена справа от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "require('icon.png') | <component/>"
                },
                {
                    "name": "textBefore",
                    "decorators": [],
                    "description": "Изображение или React-нода, которая будет отрендерена слева от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "require('icon.png') | <component/>"
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "HTML Тип",
                    "required": false,
                    "type": "string",
                    "example": "email"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                },
                {
                    "name": "viewProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IPasswordFieldViewProps": {
            "name": "IPasswordFieldViewProps",
            "moduleName": "ui/form/PasswordField/PasswordField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IPasswordFieldProps",
                "IFieldWrapperOutputProps"
            ],
            "properties": [
                {
                    "name": "addonAfter",
                    "decorators": [],
                    "description": "Текст или React-нода, которая будет отрендерена справа от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'.com'"
                },
                {
                    "name": "addonBefore",
                    "decorators": [],
                    "description": "Текст или React-нода, которая будет отрендерена слева от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'http://'"
                },
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "failed",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для элемента \\<input /\\>",
                    "required": true,
                    "type": "{disabled: boolean, name: string, onChange: {}, placeholder: string, type: string, value: string | number}",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "maskProps",
                    "decorators": [],
                    "description": "Конфигурация маски",
                    "required": false,
                    "type": "any",
                    "example": "{ mask: '+7 (999) 999-99-99' }"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onHidePassword",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onShowPassword",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Placeholder подсказка",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "security",
                    "decorators": [],
                    "description": "Если true, то отображается шкала сложности пароля и иконка 'отображения' пароля",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "securityLevel",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "\"success\" | \"warning\" | \"danger\"",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер Innput",
                    "required": false,
                    "type": "string",
                    "example": "'large'"
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "success",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "textAfter",
                    "decorators": [],
                    "description": "Изображение или React-нода, которая будет отрендерена справа от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "require('icon.png') | <component/>"
                },
                {
                    "name": "textBefore",
                    "decorators": [],
                    "description": "Изображение или React-нода, которая будет отрендерена слева от поля.",
                    "required": false,
                    "type": "ReactNode",
                    "example": "require('icon.png') | <component/>"
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "HTML Тип",
                    "required": false,
                    "type": "string",
                    "example": "email"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                },
                {
                    "name": "viewProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IRadioListFieldProps": {
            "name": "IRadioListFieldProps",
            "moduleName": "ui/form/RadioListField/RadioListField",
            "title": "RadioListField",
            "description": "Список с радиокнопками. Используется в формах для выбора одного значения.",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps",
                "IDataProviderConfig",
                "Omit<IDataSelectConfig",
                "'items'>"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "autoComplete",
                    "decorators": [],
                    "description": "Настройки поиска",
                    "required": false,
                    "type": "boolean | AutoCompleteConfig",
                    "example": "{enable: true, minLength: 2, delay: 100}"
                },
                {
                    "name": "autoFetch",
                    "decorators": [],
                    "description": "Загрузка данных после любого изменения запроса.\nЕсли включен autoFetch, то настройки autoComplete не применятся.",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "dataProvider",
                    "decorators": [],
                    "description": "Конфигурация для подгрузки данных извне.\nЕсли dataProvider не передан, то поиск данных по запросу происходит локально.",
                    "required": false,
                    "type": "{action: string | IApiMethod, onSearch: {}, params: Record}",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для элемента \\<input /\\>",
                    "required": false,
                    "type": "any",
                    "example": "{onKeyDown: ...}"
                },
                {
                    "name": "inputValue",
                    "decorators": [],
                    "description": "Значение поля в форме",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Коллекция элементов",
                    "required": false,
                    "type": "DataProviderItems",
                    "example": "[{id: 1, label: 'Krasnoyarsk'}, {id: 2, label: 'Moscow'}]"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "multiple",
                    "decorators": [],
                    "description": "Возможность множественного выбора",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "Первичный ключ для item",
                    "required": false,
                    "type": "string",
                    "example": "id"
                },
                {
                    "name": "query",
                    "decorators": [],
                    "description": "Текст запроса",
                    "required": false,
                    "type": "string",
                    "example": "'some text'"
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "selectFirst",
                    "decorators": [],
                    "description": "Сделать активным первый элемент в списке",
                    "required": false,
                    "type": "any",
                    "example": "true"
                },
                {
                    "name": "selectedIds",
                    "decorators": [],
                    "description": "Список с идентификаторами выбранных элементов",
                    "required": true,
                    "type": "any",
                    "example": "[1, 4]"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "sourceItems",
                    "decorators": [],
                    "description": " Список со всеми элементами",
                    "required": false,
                    "type": "IDataSelectItem[]",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IRadioListFieldViewProps": {
            "name": "IRadioListFieldViewProps",
            "moduleName": "ui/form/RadioListField/RadioListField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperOutputProps"
            ],
            "properties": [
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{disabled: boolean, name: string, onChange: {}, type: string}",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{id: string | number | boolean, isHovered: boolean, isSelected: boolean, label: string}[]",
                    "example": null
                },
                {
                    "name": "onItemSelect",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "selectedIds",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any[]",
                    "example": null
                }
            ]
        },
        "IRateFieldItem": {
            "name": "IRateFieldItem",
            "moduleName": "ui/form/RateField/RateField",
            "title": "RateField",
            "description": "Поле для проставления рейтинга",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "id",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "value",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "number",
                    "example": null
                }
            ]
        },
        "IRateFieldProps": {
            "name": "IRateFieldProps",
            "moduleName": "ui/form/RateField/RateField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps"
            ],
            "properties": [
                {
                    "name": "allowClear",
                    "decorators": [],
                    "description": "Возможность полностью сбрасывать рейтинг, при повторном нажатии на звезду",
                    "required": false,
                    "type": "boolean",
                    "example": "false"
                },
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "defaultValue",
                    "decorators": [],
                    "description": "Количество звезд по умолчанию",
                    "required": false,
                    "type": "number",
                    "example": "4"
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "itemsCount",
                    "decorators": [],
                    "description": "Максимальное количество звезд",
                    "required": false,
                    "type": "number",
                    "example": "5"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IRateFieldViewProps": {
            "name": "IRateFieldViewProps",
            "moduleName": "ui/form/RateField/RateField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IRateFieldProps",
                "IFieldWrapperOutputProps"
            ],
            "properties": [
                {
                    "name": "allowClear",
                    "decorators": [],
                    "description": "Возможность полностью сбрасывать рейтинг, при повторном нажатии на звезду",
                    "required": false,
                    "type": "boolean",
                    "example": "false"
                },
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "defaultValue",
                    "decorators": [],
                    "description": "Количество звезд по умолчанию",
                    "required": false,
                    "type": "number",
                    "example": "4"
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "IRateFieldItem[]",
                    "example": null
                },
                {
                    "name": "itemsCount",
                    "decorators": [],
                    "description": "Максимальное количество звезд",
                    "required": false,
                    "type": "number",
                    "example": "5"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onItemClick",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onItemSelect",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "selectedIds",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any[]",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "value",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IReCaptchaFieldProps": {
            "name": "IReCaptchaFieldProps",
            "moduleName": "ui/form/ReCaptchaField/ReCaptchaField",
            "title": "ReCaptchaField",
            "description": "Компонент для использования ReCAPTCHA v3 от Google: https://developers.google.com/recaptcha/docs/v3.\nЧтобы добавить ReCAPTCHA в форму необходимо:\n1) Передать siteKey в ResourceComponent.\n2) Поместить на сайт скрипт от Google с помощью метода экземпляра ResourceComponent\n(скрипт анализирует поведение пользователя).\n3) Разместить ReCaptchaField внутри компонента Form. На событие формы onSubmit отправится запрос в Google для\nполучения токена. Далее этот токен с остальными данными формы отправится на бэкенд.\nСам компонент отображает ссылки на политику конфиденциальности и условия использования сервисов Google.",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IReCaptchaFieldViewProps": {
            "name": "IReCaptchaFieldViewProps",
            "moduleName": "ui/form/ReCaptchaField/ReCaptchaField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IReCaptchaFieldProps",
                "IFieldWrapperOutputProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "ISliderFieldProps": {
            "name": "ISliderFieldProps",
            "moduleName": "ui/form/SliderField/SliderField",
            "title": "SliderField",
            "description": "Компонент с ползунком для выбора числового значения в пределах указанного промежутка",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "max",
                    "decorators": [],
                    "description": "Максимальное значение в слайдере",
                    "required": false,
                    "type": "number",
                    "example": "100"
                },
                {
                    "name": "min",
                    "decorators": [],
                    "description": "Минимальное значение в слайдере",
                    "required": false,
                    "type": "number",
                    "example": "0"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "sliderProps",
                    "decorators": [],
                    "description": "Свойства для компонента слайдера",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "ISliderFieldViewProps": {
            "name": "ISliderFieldViewProps",
            "moduleName": "ui/form/SliderField/SliderField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "ISliderFieldProps",
                "IFieldWrapperOutputProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "max",
                    "decorators": [],
                    "description": "Максимальное значение в слайдере",
                    "required": false,
                    "type": "number",
                    "example": "100"
                },
                {
                    "name": "min",
                    "decorators": [],
                    "description": "Минимальное значение в слайдере",
                    "required": false,
                    "type": "number",
                    "example": "0"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "slider",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{defaultValue: number, max: number, min: number, onAfterChange: {}, onChange: {}, value: number}",
                    "example": null
                },
                {
                    "name": "sliderProps",
                    "decorators": [],
                    "description": "Свойства для компонента слайдера",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "ISwitcherFieldProps": {
            "name": "ISwitcherFieldProps",
            "moduleName": "ui/form/SwitcherField/SwitcherField",
            "title": "SwitcherField",
            "description": "Список с кнопками. Используется для выбора одного значения.",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps",
                "IDataProviderConfig",
                "Omit<IDataSelectConfig",
                "'items'>"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "autoComplete",
                    "decorators": [],
                    "description": "Настройки поиска",
                    "required": false,
                    "type": "boolean | AutoCompleteConfig",
                    "example": "{enable: true, minLength: 2, delay: 100}"
                },
                {
                    "name": "autoFetch",
                    "decorators": [],
                    "description": "Загрузка данных после любого изменения запроса.\nЕсли включен autoFetch, то настройки autoComplete не применятся.",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "buttonProps",
                    "decorators": [],
                    "description": "Свойства для компонента Button",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "dataProvider",
                    "decorators": [],
                    "description": "Конфигурация для подгрузки данных извне.\nЕсли dataProvider не передан, то поиск данных по запросу происходит локально.",
                    "required": false,
                    "type": "{action: string | IApiMethod, onSearch: {}, params: Record}",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "inputValue",
                    "decorators": [],
                    "description": "Значение поля в форме",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Коллекция элементов",
                    "required": false,
                    "type": "DataProviderItems",
                    "example": "[{id: 1, label: 'Krasnoyarsk'}, {id: 2, label: 'Moscow'}]"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "multiple",
                    "decorators": [],
                    "description": "Возможность множественного выбора",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "Первичный ключ для item",
                    "required": false,
                    "type": "string",
                    "example": "id"
                },
                {
                    "name": "query",
                    "decorators": [],
                    "description": "Текст запроса",
                    "required": false,
                    "type": "string",
                    "example": "'some text'"
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "selectFirst",
                    "decorators": [],
                    "description": "Сделать активным первый элемент в списке",
                    "required": false,
                    "type": "any",
                    "example": "true"
                },
                {
                    "name": "selectedIds",
                    "decorators": [],
                    "description": "Список с идентификаторами выбранных элементов",
                    "required": true,
                    "type": "any",
                    "example": "[1, 4]"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "sourceItems",
                    "decorators": [],
                    "description": " Список со всеми элементами",
                    "required": false,
                    "type": "IDataSelectItem[]",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "ISwitcherFieldViewProps": {
            "name": "ISwitcherFieldViewProps",
            "moduleName": "ui/form/SwitcherField/SwitcherField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperOutputProps",
                "Omit<ISwitcherFieldProps",
                "'items'>"
            ],
            "properties": [
                {
                    "name": "buttonProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "hoveredId",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "Record[]",
                    "example": null
                },
                {
                    "name": "onItemHover",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onItemSelect",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "selectedIds",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any[]",
                    "example": null
                }
            ]
        },
        "ITextFieldProps": {
            "name": "ITextFieldProps",
            "moduleName": "ui/form/TextField/TextField",
            "title": "TextField",
            "description": "Поле для ввода нескольких строк теста",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFieldWrapperInputProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для тега \\<textarea\\>",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для элемента \\<input /\\>",
                    "required": false,
                    "type": "any",
                    "example": "{onKeyDown: ...}"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Placeholder подсказка",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "submitOnEnter",
                    "decorators": [],
                    "description": "Отправлять форму при нажатии на кнопку `enter`",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "ITextFieldViewProps": {
            "name": "ITextFieldViewProps",
            "moduleName": "ui/form/TextField/TextField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "ITextFieldProps",
                "IFieldWrapperOutputProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для тега \\<textarea\\>",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "componentId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для элемента \\<input /\\>",
                    "required": true,
                    "type": "{disabled: boolean, name: string, onChange: {}, onKeyUp: KeyboardEventHandler, placeholder: string, value: string | number}",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Placeholder подсказка",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "submitOnEnter",
                    "decorators": [],
                    "description": "Отправлять форму при нажатии на кнопку `enter`",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "ITimeFieldProps": {
            "name": "ITimeFieldProps",
            "moduleName": "ui/form/TimeField/TimeField",
            "title": "TimeField",
            "description": "Поле для выбора времени",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IDateInputStateInput"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "'isVisible'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "date",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит элемент в состояние \"не активен\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "displayFormat",
                    "decorators": [],
                    "description": "Формат даты показываемый пользователю",
                    "required": false,
                    "type": "string",
                    "example": "DD.MM.YYYY"
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, которая отобразится рядом с полем",
                    "required": false,
                    "type": "string",
                    "example": "'Only english letters'"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Иконка, отображаемая в правой части поля",
                    "required": false,
                    "type": "string | boolean",
                    "example": "calendar-day"
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "Свойства поля props.input",
                    "required": false,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства, передаваемые для поля во view",
                    "required": false,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Название поля либо отмена отображение поля (false)",
                    "required": false,
                    "type": "any",
                    "example": "'Visible'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для поля, который настраивает его расположение внутри формы.\nЕсли false, то поле будет отрендерено без шаблона.",
                    "required": false,
                    "type": "FormLayout",
                    "example": "'horizontal'"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "noBorder",
                    "decorators": [],
                    "description": "Отключить border вокруг элемента",
                    "required": false,
                    "type": "boolean",
                    "example": "'true'"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Дополнительная функция, срабатывающая при изменении props.input",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "placeholder",
                    "decorators": [],
                    "description": "Подсказка для поля",
                    "required": false,
                    "type": "string",
                    "example": "Your text..."
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "Префикс, который добавится к аттрибуту (названию) поля в форме",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "required",
                    "decorators": [],
                    "description": "Обязательное ли поле? Если true, то к названию будет добавлен\nмодификатор 'required' - красная звездочка (по умолчанию)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "Показывать при наведении на поле иконку для сброса значения поля в начальное состояние",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "timePanelViewProps",
                    "decorators": [],
                    "description": "Свойства для компонента панели времени",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "useUTC",
                    "decorators": [],
                    "description": "Использовать всемирное время (UTC) вместо местного для даты, отправляемой на сервер",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "valueFormat",
                    "decorators": [],
                    "description": "Формат даты отправляемый на сервер",
                    "required": false,
                    "type": "string",
                    "example": "YYYY-MM-DD"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                },
                {
                    "name": "viewProps",
                    "decorators": [],
                    "description": "Свойства для view компонента",
                    "required": false,
                    "type": "Record",
                    "example": null
                }
            ]
        },
        "ITimeFieldViewProps": {
            "name": "ITimeFieldViewProps",
            "moduleName": "ui/form/TimeField/TimeField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IDateInputStateOutput",
                "Pick<ITimeFieldProps",
                "'size' | 'errors' | 'showRemove' | 'noBorder' | 'className' | 'timePanelViewProps'>"
            ],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "errors",
                    "decorators": [],
                    "description": "Ошибки в поле",
                    "required": false,
                    "type": "string[]",
                    "example": "['Error text']"
                },
                {
                    "name": "inputProps",
                    "decorators": [],
                    "description": "Свойства для поля во view",
                    "required": true,
                    "type": "{name: string, onChange: {}, value: any}",
                    "example": null
                },
                {
                    "name": "isOpened",
                    "decorators": [],
                    "description": "Показать или скрыть выпадающую панель",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "noBorder",
                    "decorators": [],
                    "description": "Отключить border вокруг элемента",
                    "required": false,
                    "type": "boolean",
                    "example": "'true'"
                },
                {
                    "name": "onClear",
                    "decorators": [],
                    "description": "Функция очищает значение поля",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "Функция закрывает выпадающую панель",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onNow",
                    "decorators": [],
                    "description": "Функция возвращает текущее значение времени (дата + время)",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "showRemove",
                    "decorators": [],
                    "description": "Показывать при наведении на поле иконку для сброса значения поля в начальное состояние",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер поля",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "timePanelViewProps",
                    "decorators": [],
                    "description": "Свойства для компонента панели времени",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "ITimePanelViewProps": {
            "name": "ITimePanelViewProps",
            "moduleName": "ui/form/TimeField/TimeField",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "Pick<ITimeFieldViewProps",
                "'value' | 'onClose' | 'onNow' | 'onSelect' | 'className'>"
            ],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "Функция закрывает выпадающую панель",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onNow",
                    "decorators": [],
                    "description": "Функция возвращает текущее значение времени (дата + время)",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "showHeader",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "showNow",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                }
            ]
        },
        "IBooleanFormatterProps": {
            "name": "IBooleanFormatterProps",
            "moduleName": "ui/format/BooleanFormatter/BooleanFormatter",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "value",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | number | boolean",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                }
            ]
        },
        "IBooleanFormatterPropsView": {
            "name": "IBooleanFormatterPropsView",
            "moduleName": "ui/format/BooleanFormatter/BooleanFormatter",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "children",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "value",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | number | boolean",
                    "example": null
                }
            ]
        },
        "IDateFormatterProps": {
            "name": "IDateFormatterProps",
            "moduleName": "ui/format/DateFormatter/DateFormatter",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "format",
                    "decorators": [],
                    "description": "Формат даты",
                    "required": false,
                    "type": "string",
                    "example": "LL"
                },
                {
                    "name": "value",
                    "decorators": [],
                    "description": "Дата",
                    "required": false,
                    "type": "any",
                    "example": "2023-09-11"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                }
            ]
        },
        "IDateTimeFormatterProps": {
            "name": "IDateTimeFormatterProps",
            "moduleName": "ui/format/DateTimeFormatter/DateTimeFormatter",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "format",
                    "decorators": [],
                    "description": "Формат даты",
                    "required": false,
                    "type": "string",
                    "example": "LLL"
                },
                {
                    "name": "timeZone",
                    "decorators": [],
                    "description": "Показывать ли дату учитываю временную зону",
                    "required": false,
                    "type": "string | boolean",
                    "example": "true"
                },
                {
                    "name": "value",
                    "decorators": [],
                    "description": "Дата",
                    "required": false,
                    "type": "any",
                    "example": "2023-09-11"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                }
            ]
        },
        "IEnumFormatterProps": {
            "name": "IEnumFormatterProps",
            "moduleName": "ui/format/EnumFormatter/EnumFormatter",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Перечисление элементов.\n1) Может быть строкой вида: `app.geo.enums.Cities`\n2) Массивом: [{id: 1, label: \"London\"}]",
                    "required": false,
                    "type": "DataProviderItems",
                    "example": null
                },
                {
                    "name": "value",
                    "decorators": [],
                    "description": "Уникальный идентификатор элемента из `items`",
                    "required": false,
                    "type": "string | number",
                    "example": "unique label"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                }
            ]
        },
        "IFileSizeFormatterProps": {
            "name": "IFileSizeFormatterProps",
            "moduleName": "ui/format/FileSize/FileSize",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "showZero",
                    "decorators": [],
                    "description": "Если не указан размер файла, то в случае, если showZero = true\nто будет показан `0`, иначе пустая строка",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "value",
                    "decorators": [],
                    "description": "Размер файла",
                    "required": false,
                    "type": "any",
                    "example": "6920"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                }
            ]
        },
        "IFormatProps": {
            "name": "IFormatProps",
            "moduleName": "ui/format/Format/Format",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "component",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | {}",
                    "example": null
                },
                {
                    "name": "emptyText",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "getFormatter",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "item",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "ui",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IMoneyFormatterProps": {
            "name": "IMoneyFormatterProps",
            "moduleName": "ui/format/MoneyFormatter/MoneyFormatter",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "currency",
                    "decorators": [],
                    "description": "Валюта @enum {eur, rub, usd}",
                    "required": false,
                    "type": "string",
                    "example": "rub"
                },
                {
                    "name": "precision",
                    "decorators": [],
                    "description": "Разрядность (при передаче int в значении)",
                    "required": false,
                    "type": "number",
                    "example": "2"
                },
                {
                    "name": "scale",
                    "decorators": [],
                    "description": "Округление числа",
                    "required": false,
                    "type": "number",
                    "example": "2"
                },
                {
                    "name": "value",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                }
            ]
        },
        "IIconProps": {
            "name": "IIconProps",
            "moduleName": "ui/icon/Icon/Icon",
            "title": "Install the latest free version of Font Awesome via yarn:",
            "description": "```\n$ yarn add @fortawesome/fontawesome-free\n```\n\nin your root style file (e.g. index.scss) import fontawesome styles\n```\n @import \"~@fortawesome/fontawesome-free/scss/fontawesome\";\n```\n\nand in hoc @application add the following code\n```\n  ui.addIcons(getFontAwesomeIcons())\n```\n\nThat get the icon used <Icon name={'icon-name'} />\n",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "name",
                    "decorators": [],
                    "description": "Имя иконки (латиницей). Импорт иконок происходит на старте приложения.",
                    "required": false,
                    "type": "string",
                    "example": "create"
                },
                {
                    "name": "onClick",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "Заголовок, отображаемый при наведении (через нативное поле title)",
                    "required": false,
                    "type": "string",
                    "example": "Добавить запись"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ComponentType",
                    "example": "MyCustomView"
                }
            ]
        },
        "IIconViewProps": {
            "name": "IIconViewProps",
            "moduleName": "ui/icon/Icon/Icon",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IIconProps"
            ],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": "require('icon.png'), <svg .../>, 'https://<site-name>/icon.png"
                },
                {
                    "name": "name",
                    "decorators": [],
                    "description": "Имя иконки (латиницей). Импорт иконок происходит на старте приложения.",
                    "required": false,
                    "type": "string",
                    "example": "create"
                },
                {
                    "name": "onClick",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "Заголовок, отображаемый при наведении (через нативное поле title)",
                    "required": false,
                    "type": "string",
                    "example": "Добавить запись"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ComponentType",
                    "example": "MyCustomView"
                }
            ]
        },
        "IHeaderProps": {
            "name": "IHeaderProps",
            "moduleName": "ui/layout/Header/Header",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "logo",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{className: string, icon: any, linkProps: Record, title: string}",
                    "example": null
                },
                {
                    "name": "nav",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "INavProps",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "ILoaderProps": {
            "name": "ILoaderProps",
            "moduleName": "ui/layout/Loader/Loader",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "INotificationsItemViewProps": {
            "name": "INotificationsItemViewProps",
            "moduleName": "ui/layout/Notifications/Notifications",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "INotificationItem"
            ],
            "properties": [
                {
                    "name": "id",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "isClosing",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "level",
                    "decorators": [],
                    "description": "Цвет всплывающего уведомления",
                    "required": false,
                    "type": "string",
                    "example": "warning"
                },
                {
                    "name": "message",
                    "decorators": [],
                    "description": "Сообщение во всплывающем уведомлении",
                    "required": false,
                    "type": "string",
                    "example": "Сохранено!"
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "position",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                }
            ]
        },
        "INotificationsProps": {
            "name": "INotificationsProps",
            "moduleName": "ui/layout/Notifications/Notifications",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "closeTimeoutMs",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "initialFlashes",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "itemView",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "notifications",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "INotificationItem[]",
                    "example": null
                },
                {
                    "name": "position",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "INotificationsViewProps": {
            "name": "INotificationsViewProps",
            "moduleName": "ui/layout/Notifications/Notifications",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "children",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "notifications",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "INotificationItem[]",
                    "example": null
                },
                {
                    "name": "position",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                }
            ]
        },
        "IProgressBarViewProps": {
            "name": "IProgressBarViewProps",
            "moduleName": "ui/layout/ProgressBar/ProgressBar",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "label",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "percent",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "\"small\" | \"large\" | \"medium\"",
                    "example": null
                },
                {
                    "name": "status",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "\"success\" | \"normal\" | \"exception\"",
                    "example": null
                }
            ]
        },
        "ISkeletonViewProps": {
            "name": "ISkeletonViewProps",
            "moduleName": "ui/layout/Skeleton/Skeleton",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "animation",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "\"pulse\" | \"wave\"",
                    "example": null
                },
                {
                    "name": "children",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "height",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | number",
                    "example": null
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "\"circle\" | \"text\" | \"rect\"",
                    "example": null
                },
                {
                    "name": "width",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | number",
                    "example": null
                }
            ]
        },
        "ITooltipProps": {
            "name": "ITooltipProps",
            "moduleName": "ui/layout/Tooltip/Tooltip",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "arrowPosition",
                    "decorators": [],
                    "description": "Стили для позиционирования стрелки",
                    "required": false,
                    "type": "TooltipArrowPosition",
                    "example": "{left: 10}"
                },
                {
                    "name": "calculatePosition",
                    "decorators": [],
                    "description": "Рассчет позиции подсказки",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "content",
                    "decorators": [],
                    "description": "Текст подсказки",
                    "required": false,
                    "type": "any",
                    "example": "'Это всплывающая подсказка.'"
                },
                {
                    "name": "defaultVisible",
                    "decorators": [],
                    "description": "Показывать ли подсказку сразу после рендера страницы",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "position",
                    "decorators": [],
                    "description": "Позиционирование подсказки, относительно целевого элемента",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Стили для абсолютного позиционирования подсказки",
                    "required": false,
                    "type": "TooltipStylePosition",
                    "example": null
                }
            ]
        },
        "ITooltipViewProps": {
            "name": "ITooltipViewProps",
            "moduleName": "ui/layout/Tooltip/Tooltip",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "ITooltipProps"
            ],
            "properties": [
                {
                    "name": "arrowPosition",
                    "decorators": [],
                    "description": "Стили для позиционирования стрелки",
                    "required": false,
                    "type": "TooltipArrowPosition",
                    "example": "{left: 10}"
                },
                {
                    "name": "calculatePosition",
                    "decorators": [],
                    "description": "Рассчет позиции подсказки",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "content",
                    "decorators": [],
                    "description": "Текст подсказки",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "defaultVisible",
                    "decorators": [],
                    "description": "Показывать ли подсказку сразу после рендера страницы",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "isTooltipVisible",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "position",
                    "decorators": [],
                    "description": "Позиционирование подсказки, относительно целевого элемента",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Стили для абсолютного позиционирования подсказки",
                    "required": true,
                    "type": "TooltipStylePosition",
                    "example": null
                }
            ]
        },
        "TooltipArrowPosition": {
            "name": "TooltipArrowPosition",
            "moduleName": "ui/layout/Tooltip/Tooltip",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "bottom",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | number",
                    "example": null
                },
                {
                    "name": "left",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | number",
                    "example": null
                },
                {
                    "name": "right",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | number",
                    "example": null
                },
                {
                    "name": "top",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string | number",
                    "example": null
                }
            ]
        },
        "TooltipStylePosition": {
            "name": "TooltipStylePosition",
            "moduleName": "ui/layout/Tooltip/Tooltip",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "left",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "number | \"unset\"",
                    "example": null
                },
                {
                    "name": "right",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "number | \"unset\"",
                    "example": null
                },
                {
                    "name": "top",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "number | \"unset\"",
                    "example": null
                }
            ]
        },
        "ICheckboxColumnProps": {
            "name": "ICheckboxColumnProps",
            "moduleName": "ui/list/CheckboxColumn/CheckboxColumn",
            "title": "CheckboxColumn",
            "description": "Колонка с чекбоксом, которая позволяет выбирать одну или все записи в таблице.",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "fieldProps",
                    "decorators": [],
                    "description": "Свойства для CheckboxField",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "item",
                    "decorators": [],
                    "description": "Элемент коллекции item",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "Первичный ключ для доступа к идентификатору item",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                }
            ]
        },
        "ICheckboxColumnViewProps": {
            "name": "ICheckboxColumnViewProps",
            "moduleName": "ui/list/CheckboxColumn/CheckboxColumn",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "fieldProps",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "input",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{name: string, onChange: any, value: any}",
                    "example": null
                }
            ]
        },
        "IControlsColumnItem": {
            "name": "IControlsColumnItem",
            "moduleName": "ui/list/ControlsColumn/ControlsColumn",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IButtonProps"
            ],
            "properties": [
                {
                    "name": "badge",
                    "decorators": [],
                    "description": "Цифра (к примеру, новые сообщения)",
                    "required": false,
                    "type": "number | IButtonBadge",
                    "example": null
                },
                {
                    "name": "block",
                    "decorators": [],
                    "description": "Включает стиль `block`, делая размер кнопки на 100% ширины блока",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для кнопки или ссылки",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "color",
                    "decorators": [],
                    "description": "Цвет состояния",
                    "required": false,
                    "type": "string",
                    "example": "success"
                },
                {
                    "name": "confirm",
                    "decorators": [],
                    "description": "При указании данного свойства, после нажатия на кнопку и до выполнения действия будет отображено нативное\nокно с текстом подтверждения - `window.confirm('Ваш текст')`.",
                    "required": false,
                    "type": "string",
                    "example": "Удалить запись #512?"
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит кнопку в состояние \"не активна\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "ID формы, для которой кнопка выполняет submit. При указании ID формы кнопка будет показывать состояние загрузки\nпри отправке формы.",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, отображается при наведении (через тег title)",
                    "required": false,
                    "type": "any",
                    "example": "Save"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Иконка",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "isFailed",
                    "decorators": [],
                    "description": "Отобразить кнопку в состоянии неуспешного нажатия (например, при неуспешном ajax запросе)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "isLoading",
                    "decorators": [],
                    "description": "Отображать индикатор загрузки?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Текст кнопки или ссылки",
                    "required": false,
                    "type": "any",
                    "example": "Save"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Выбор макета для распложения кнопки в форме. Если кнопка находится внутри `<Form>...</Form>`, то `layout` будет\nвзят из контекста формы и автоматически применен при отораженн. Для его отключения укажите `false`.\nДанное свойство так же может принимать объект, если нужно прокинуть дополнительные свойства в шаблон макета.\nПример: `{layout: 'horizontal', cols: [2,6]}`",
                    "required": false,
                    "type": "FormLayout",
                    "example": "horizontal"
                },
                {
                    "name": "link",
                    "decorators": [],
                    "description": "Отображать как ссылку?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onClick",
                    "decorators": [],
                    "description": "Обработчик события нажатия. Для асинхронных событий вовзращяйте в обработчике `Promise`, тогда кнопка\nавтоматически будет переключаться в режим загрузки (`loading`) на время выполнения `Promise`.",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "outline",
                    "decorators": [],
                    "description": "Включает стиль `outline`, когда у кнопки остается только `border`, а цвет кнопки становится прозрачным",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "resetFailedMs",
                    "decorators": [],
                    "description": "Через сколько миллисекунд должно исчезнуть состояние \"failed\"",
                    "required": false,
                    "type": "number",
                    "example": "5000"
                },
                {
                    "name": "rule",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "showLabelOnLoading",
                    "decorators": [],
                    "description": "Должна ли показываться надпись на кнопке в состоянии загрузки",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "tag",
                    "decorators": [],
                    "description": "Выбор html-тэга, который будет вставлен в DOM",
                    "required": false,
                    "type": "\"button\" | \"a\"",
                    "example": "button"
                },
                {
                    "name": "target",
                    "decorators": [],
                    "description": "HTML аттрибут `target`, доступен только для ссылок",
                    "required": false,
                    "type": "string",
                    "example": "_blank"
                },
                {
                    "name": "textColor",
                    "decorators": [],
                    "description": "Цвет текста кнопки или ссылки",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "toRoute",
                    "decorators": [],
                    "description": "ID роута, на который необходимо перейти, указанный в дереве `steroids` роутинга. Для передачи параметров\nиспользуйте свойство `toRouteParams`",
                    "required": false,
                    "type": "string",
                    "example": "profile"
                },
                {
                    "name": "toRouteParams",
                    "decorators": [],
                    "description": "Параметры роута, на который необходимо перейти, см. свойство `toRoute`.",
                    "required": false,
                    "type": "Record",
                    "example": "{userId: 52}"
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "HTML Тип",
                    "required": false,
                    "type": "\"button\" | \"submit\"",
                    "example": "submit"
                },
                {
                    "name": "url",
                    "decorators": [],
                    "description": "Ссылка на внешнюю страницу, используется совместно с свойством `link`",
                    "required": false,
                    "type": "string",
                    "example": "https://ya.ru"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ComponentType",
                    "example": "MyCustomView"
                },
                {
                    "name": "visible",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                }
            ]
        },
        "IControlsColumnProps": {
            "name": "IControlsColumnProps",
            "moduleName": "ui/list/ControlsColumn/ControlsColumn",
            "title": "ControlsColumn",
            "description": "Колонка для контролов",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "controls",
                    "decorators": [],
                    "description": "Коллекция с контролами",
                    "required": false,
                    "type": "IControlItem[] | {}",
                    "example": "[{id: 'delete'}, {id: 'view', position: 'left'}]"
                },
                {
                    "name": "item",
                    "decorators": [],
                    "description": "Элемент, для которого будет отображаться список с контролами, в нём можно задать видимость контрола\nс помощью свойства 'can' + _upperFirst(control.id)",
                    "required": false,
                    "type": "any",
                    "example": "{name: 'Ivan', work: 'development', canView: false}"
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "Первичный ключ",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения колонки",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                }
            ]
        },
        "IControlsColumnViewProps": {
            "name": "IControlsColumnViewProps",
            "moduleName": "ui/list/ControlsColumn/ControlsColumn",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "IControlsColumnItem[]",
                    "example": null
                }
            ]
        },
        "IEmptyProps": {
            "name": "IEmptyProps",
            "moduleName": "ui/list/Empty/Empty",
            "title": "Empty",
            "description": "Компонент используется в качестве заглушки в случае, когда пришла пустая коллекция данных.",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "enable",
                    "decorators": [],
                    "description": "Показывать заглушку?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "text",
                    "decorators": [],
                    "description": "Текст заглушки",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'Записи не найдены'"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IGridColumn": {
            "name": "IGridColumn",
            "moduleName": "ui/list/Grid/Grid",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Атрибут колонки, по которому происходит поиск нужного свойства в items и нужного поля в SearchForm",
                    "required": false,
                    "type": "string",
                    "example": "'Name'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "CSS-класс для ячейки со значением",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "formatter",
                    "decorators": [],
                    "description": "Свойства для компонента форматирования",
                    "required": false,
                    "type": "Record",
                    "example": "{component: DateFormatter, format: 'DD MMMM'}"
                },
                {
                    "name": "headerClassName",
                    "decorators": [],
                    "description": "CSS-класс для ячейки с заголовком колонки <th>...</th>",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "headerProps",
                    "decorators": [],
                    "description": "Свойства для компонента отображения заголовка колонки",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "headerView",
                    "decorators": [],
                    "description": "Компонент для кастомизации отображения заголовка колонки",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'Some text'"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Заголовок колонки",
                    "required": false,
                    "type": "ReactNode",
                    "example": "'Name'"
                },
                {
                    "name": "sortable",
                    "decorators": [],
                    "description": "Включить возможность сортировки по данным в колонке",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "valueProps",
                    "decorators": [],
                    "description": "Свойства для компонента отображения значения в ячейке",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "valueView",
                    "decorators": [],
                    "description": "Компонент для кастомизации отображения значения в ячейке",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                },
                {
                    "name": "visible",
                    "decorators": [],
                    "description": "Скрыть или показать колонку",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                }
            ]
        },
        "IGridProps": {
            "name": "IGridProps",
            "moduleName": "ui/list/Grid/Grid",
            "title": "Grid",
            "description": "Компонент для представления данных коллекции в виде таблицы.",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IListConfig"
            ],
            "properties": [
                {
                    "name": "action",
                    "decorators": [],
                    "description": "Url, который вернет коллекцию элементов",
                    "required": false,
                    "type": "string",
                    "example": "api/v1/articles"
                },
                {
                    "name": "actionMethod",
                    "decorators": [],
                    "description": "Тип HTTP запроса (GET | POST | PUT | DELETE)",
                    "required": false,
                    "type": "string",
                    "example": "GET"
                },
                {
                    "name": "addressBar",
                    "decorators": [],
                    "description": "Синхронизация значений формы списка с адресной строкой",
                    "required": false,
                    "type": "boolean | IAddressBar",
                    "example": "true"
                },
                {
                    "name": "autoDestroy",
                    "decorators": [],
                    "description": "Удаление данных списка из хранилища Redux при размонтировании компонента",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "columns",
                    "decorators": [],
                    "description": "Коллекция с наименованиями и свойствами колонок в таблице",
                    "required": true,
                    "type": "string | IGridColumn[]",
                    "example": "[{label: 'Name', attribute: 'name'}, {label: 'Work', attribute: 'work'}]"
                },
                {
                    "name": "condition",
                    "decorators": [],
                    "description": "Обработчик, который составляет список условий для локальной фильтрации элементов коллекции",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "controls",
                    "decorators": [],
                    "description": "Коллекция с элементами управления. Данная коллекция отобразится в колонке рядом с каждой записью в таблице.\nНапример, кнопки для удаления и детального просмотра записи.",
                    "required": false,
                    "type": "IControlItem[] | {}",
                    "example": "[{id: 'delete'}, {id: 'view', position: 'left'}]"
                },
                {
                    "name": "empty",
                    "decorators": [],
                    "description": "Заглушка в случае отсутствия элементов",
                    "required": false,
                    "type": "string | boolean | IEmptyProps",
                    "example": "{text: 'Записи не найдены'}"
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Элементы коллекции",
                    "required": false,
                    "type": "any[]",
                    "example": null
                },
                {
                    "name": "itemsIndexing",
                    "decorators": [],
                    "description": "Нужно ли отображать колонку с порядковым номером элемента? Если да, то для каждого элемента в коллекции items\nдолжно быть задано свойство index",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Варианты расположения элементов коллекции",
                    "required": false,
                    "type": "boolean | ILayoutNamesProps",
                    "example": "{items: [{id: 'list', label: 'List'}, {id: 'grid', label: 'Grid'}]}"
                },
                {
                    "name": "listId",
                    "decorators": [],
                    "description": "Идентификатор списка",
                    "required": false,
                    "type": "string",
                    "example": "ArticlesList"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "onFetch",
                    "decorators": [],
                    "description": "Обработчик, который вызывается при изменении значений формы, и нужен для подгрузки новых элементов коллекции",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "pagination",
                    "decorators": [],
                    "description": "Подключение пагинации",
                    "required": false,
                    "type": "boolean | IPaginationProps",
                    "example": "{loadMore: true}"
                },
                {
                    "name": "paginationSize",
                    "decorators": [],
                    "description": "Переключение количества элементов в списке",
                    "required": false,
                    "type": "boolean | IPaginationSizeProps",
                    "example": "{sizes: [3, 6, 9], defaultValue: 3}"
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "Первичный ключ для item",
                    "required": false,
                    "type": "string",
                    "example": "id"
                },
                {
                    "name": "query",
                    "decorators": [],
                    "description": "Дополнительные параметры, значения которых нужно передавать в запросе для получения данных",
                    "required": false,
                    "type": "Record",
                    "example": "{tagName: 'MarketReviews'}"
                },
                {
                    "name": "scope",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "searchForm",
                    "decorators": [],
                    "description": "Форма для поиска элементов",
                    "required": false,
                    "type": "IFormProps",
                    "example": "{fields: ['title'], model: {attributes: ['title:string:Название']}}"
                },
                {
                    "name": "searchModel",
                    "decorators": [],
                    "description": "Модель для синхронизации значений формы с адресной строкой",
                    "required": false,
                    "type": "string",
                    "example": "{attributes: [{attribute: 'isMilesAvailable', type: boolean}]}"
                },
                {
                    "name": "sort",
                    "decorators": [],
                    "description": "Подключение сортировки",
                    "required": false,
                    "type": "boolean | ISortProps",
                    "example": "{enable: true, defaultSort: 'startDate'}"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                }
            ]
        },
        "IGridViewProps": {
            "name": "IGridViewProps",
            "moduleName": "ui/list/Grid/Grid",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "Omit<IGridProps",
                "'onFetch'>"
            ],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "columns",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "IGridColumn & {label: any}[]",
                    "example": null
                },
                {
                    "name": "layoutNamesPosition",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "onFetch",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onSort",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "paginationPosition",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "paginationSizePosition",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "renderEmpty",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderLayoutNames",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderList",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderPagination",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderPaginationSize",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderSearchForm",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderValue",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                }
            ]
        },
        "ILayoutNamesProps": {
            "name": "ILayoutNamesProps",
            "moduleName": "ui/list/LayoutNames/LayoutNames",
            "title": "LayoutNames",
            "description": "Переключает варианты расположения элементов коллекции.\nСохраняет выбранный пользователем шаблон в LocalStorage.",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Название ключа, под которым в LocalStorage сохранится значение выбранного шаблона",
                    "required": false,
                    "type": "string",
                    "example": "'layout'"
                },
                {
                    "name": "defaultValue",
                    "decorators": [],
                    "description": "Шаблон по умолчанию",
                    "required": false,
                    "type": "string",
                    "example": "'list'"
                },
                {
                    "name": "enable",
                    "decorators": [],
                    "description": "Отобразить переключатель",
                    "required": false,
                    "type": "boolean",
                    "example": "false"
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Коллекция с шаблонами",
                    "required": false,
                    "type": "INavItem[]",
                    "example": "[{id: 'list', label: 'List'}, {id: 'grid', label: 'Grid'}]"
                },
                {
                    "name": "list",
                    "decorators": [],
                    "description": "Данные списка",
                    "required": false,
                    "type": "IList",
                    "example": null
                },
                {
                    "name": "position",
                    "decorators": [],
                    "description": "Расположение переключателя",
                    "required": false,
                    "type": "string",
                    "example": "'bottom'"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IListItemViewProps": {
            "name": "IListItemViewProps",
            "moduleName": "ui/list/List/List",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "contentClassName",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "id",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "PrimaryKey",
                    "example": null
                },
                {
                    "name": "index",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "item",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{id: PrimaryKey, label: any, title: any}",
                    "example": null
                },
                {
                    "name": "layoutSelected",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "PrimaryKey",
                    "example": null
                }
            ]
        },
        "IListProps": {
            "name": "IListProps",
            "moduleName": "ui/list/List/List",
            "title": "List",
            "description": "Компонент для представления коллекции в виде списка.",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IListConfig"
            ],
            "properties": [
                {
                    "name": "action",
                    "decorators": [],
                    "description": "Url, который вернет коллекцию элементов",
                    "required": false,
                    "type": "string",
                    "example": "api/v1/articles"
                },
                {
                    "name": "actionMethod",
                    "decorators": [],
                    "description": "Тип HTTP запроса (GET | POST | PUT | DELETE)",
                    "required": false,
                    "type": "string",
                    "example": "GET"
                },
                {
                    "name": "addressBar",
                    "decorators": [],
                    "description": "Синхронизация значений формы списка с адресной строкой",
                    "required": false,
                    "type": "boolean | IAddressBar",
                    "example": "true"
                },
                {
                    "name": "autoDestroy",
                    "decorators": [],
                    "description": "Удаление данных списка из хранилища Redux при размонтировании компонента",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "condition",
                    "decorators": [],
                    "description": "Обработчик, который составляет список условий для локальной фильтрации элементов коллекции",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "contentClassName",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента с контентом",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "empty",
                    "decorators": [],
                    "description": "Заглушка в случае отсутствия элементов",
                    "required": false,
                    "type": "string | boolean | IEmptyProps",
                    "example": "{text: 'Записи не найдены'}"
                },
                {
                    "name": "itemProps",
                    "decorators": [],
                    "description": "Свойства для элемента коллекции",
                    "required": false,
                    "type": "Record",
                    "example": null
                },
                {
                    "name": "itemView",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения элемента коллекции",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Элементы коллекции",
                    "required": false,
                    "type": "any[]",
                    "example": null
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Варианты расположения элементов коллекции",
                    "required": false,
                    "type": "boolean | ILayoutNamesProps",
                    "example": "{items: [{id: 'list', label: 'List'}, {id: 'grid', label: 'Grid'}]}"
                },
                {
                    "name": "listId",
                    "decorators": [],
                    "description": "Идентификатор списка",
                    "required": false,
                    "type": "string",
                    "example": "ArticlesList"
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "onFetch",
                    "decorators": [],
                    "description": "Обработчик, который вызывается при изменении значений формы, и нужен для подгрузки новых элементов коллекции",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "pagination",
                    "decorators": [],
                    "description": "Подключение пагинации",
                    "required": false,
                    "type": "boolean | IPaginationProps",
                    "example": "{loadMore: true}"
                },
                {
                    "name": "paginationSize",
                    "decorators": [],
                    "description": "Переключение количества элементов в списке",
                    "required": false,
                    "type": "boolean | IPaginationSizeProps",
                    "example": "{sizes: [3, 6, 9], defaultValue: 3}"
                },
                {
                    "name": "primaryKey",
                    "decorators": [],
                    "description": "Первичный ключ для item",
                    "required": false,
                    "type": "string",
                    "example": "id"
                },
                {
                    "name": "query",
                    "decorators": [],
                    "description": "Дополнительные параметры, значения которых нужно передавать в запросе для получения данных",
                    "required": false,
                    "type": "Record",
                    "example": "{tagName: 'MarketReviews'}"
                },
                {
                    "name": "scope",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string[]",
                    "example": null
                },
                {
                    "name": "searchForm",
                    "decorators": [],
                    "description": "Форма для поиска элементов",
                    "required": false,
                    "type": "IFormProps",
                    "example": "{fields: ['title'], model: {attributes: ['title:string:Название']}}"
                },
                {
                    "name": "searchModel",
                    "decorators": [],
                    "description": "Модель для синхронизации значений формы с адресной строкой",
                    "required": false,
                    "type": "string",
                    "example": "{attributes: [{attribute: 'isMilesAvailable', type: boolean}]}"
                },
                {
                    "name": "sort",
                    "decorators": [],
                    "description": "Подключение сортировки",
                    "required": false,
                    "type": "boolean | ISortProps",
                    "example": "{enable: true, defaultSort: 'startDate'}"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ComponentType",
                    "example": "MyCustomView"
                }
            ]
        },
        "IListViewProps": {
            "name": "IListViewProps",
            "moduleName": "ui/list/List/List",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "Omit<IListProps",
                "'onFetch'>",
                "Omit<IListOutput",
                "'list'>"
            ],
            "properties": [
                {
                    "name": "content",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "layoutNamesPosition",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "Model",
                    "example": null
                },
                {
                    "name": "onFetch",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onSort",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "paginationPosition",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "paginationSizePosition",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "renderEmpty",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderLayoutNames",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderList",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderPagination",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderPaginationSize",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "renderSearchForm",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "searchModel",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "Model",
                    "example": null
                }
            ]
        },
        "IPaginationProps": {
            "name": "IPaginationProps",
            "moduleName": "ui/list/Pagination/Pagination",
            "title": "Pagination",
            "description": "Компонент с пагинацией страниц.",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "aroundCount",
                    "decorators": [],
                    "description": "Указывает, какое количество кнопок с номерами страниц будет доступно до и после выбранной страницы,\nвключая выбранную. Остальные будут спрятаны в элемент \"...\"",
                    "required": false,
                    "type": "number",
                    "example": "5"
                },
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) в форме для поля пагинации",
                    "required": false,
                    "type": "string",
                    "example": "page"
                },
                {
                    "name": "buttonProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IButtonProps",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "loadMore",
                    "decorators": [],
                    "description": "Вместо списка с номерами страниц будет кнопка \"Загрузить еще\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Обработчик, который вызывается после смены страницы",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "position",
                    "decorators": [],
                    "description": "Расположение пагинации",
                    "required": false,
                    "type": "string",
                    "example": "'both'"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "sizeAttribute",
                    "decorators": [],
                    "description": "Аттрибут (название) в форме для поля с количеством элементов на странице",
                    "required": false,
                    "type": "string",
                    "example": "pageSize"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IPaginationViewProps": {
            "name": "IPaginationViewProps",
            "moduleName": "ui/list/Pagination/Pagination",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IPaginationProps"
            ],
            "properties": [
                {
                    "name": "aroundCount",
                    "decorators": [],
                    "description": "Указывает, какое количество кнопок с номерами страниц будет доступно до и после выбранной страницы,\nвключая выбранную. Остальные будут спрятаны в элемент \"...\"",
                    "required": false,
                    "type": "number",
                    "example": "5"
                },
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) в форме для поля пагинации",
                    "required": false,
                    "type": "string",
                    "example": "page"
                },
                {
                    "name": "buttonProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "IButtonProps",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "loadMore",
                    "decorators": [],
                    "description": "Вместо списка с номерами страниц будет кнопка \"Загрузить еще\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Обработчик, который вызывается после смены страницы",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onSelect",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onSelectNext",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "pages",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{isActive: boolean, label: string, page: number}[]",
                    "example": null
                },
                {
                    "name": "position",
                    "decorators": [],
                    "description": "Расположение пагинации",
                    "required": false,
                    "type": "string",
                    "example": "'both'"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "sizeAttribute",
                    "decorators": [],
                    "description": "Аттрибут (название) в форме для поля с количеством элементов на странице",
                    "required": false,
                    "type": "string",
                    "example": "pageSize"
                },
                {
                    "name": "totalPages",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IPaginationSizeProps": {
            "name": "IPaginationSizeProps",
            "moduleName": "ui/list/PaginationSize/PaginationSize",
            "title": "PaginationSize",
            "description": "Компонент для выбора количества элементов в списке",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "pageSize"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "enable",
                    "decorators": [],
                    "description": "Подключить выбор количества элементов",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Обработчик, который вызывается после смены страницы",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "position",
                    "decorators": [],
                    "description": "Расположение элемента в списке",
                    "required": false,
                    "type": "string",
                    "example": "'both'"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "sizes",
                    "decorators": [],
                    "description": "Список с количествами элементов на странице",
                    "required": false,
                    "type": "number[]",
                    "example": "[2, 3, 4]"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IPaginationSizeViewProps": {
            "name": "IPaginationSizeViewProps",
            "moduleName": "ui/list/PaginationSize/PaginationSize",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IPaginationSizeProps"
            ],
            "properties": [
                {
                    "name": "attribute",
                    "decorators": [],
                    "description": "Аттрибут (название) поля в форме",
                    "required": false,
                    "type": "string",
                    "example": "pageSize"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "enable",
                    "decorators": [],
                    "description": "Подключить выбор количества элементов",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{isActive: boolean, label: string | number, size: number}[]",
                    "example": null
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Обработчик, который вызывается после смены страницы",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onSelect",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "position",
                    "decorators": [],
                    "description": "Расположение элемента в списке",
                    "required": false,
                    "type": "string",
                    "example": "'both'"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "sizes",
                    "decorators": [],
                    "description": "Список с количествами элементов на странице",
                    "required": false,
                    "type": "number[]",
                    "example": "[2, 3, 4]"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "ISearchFormProps": {
            "name": "ISearchFormProps",
            "moduleName": "ui/list/SearchForm/SearchForm",
            "title": "SearchForm",
            "description": "Форма для поиска элементов в коллекции list-компонента.\nФорма хранит значения в локальном состоянии, а на onSubmit отправляет их в хранилище Redux,\nпосле чего в list-компонент подгружаются новые элементы коллекции.",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IFormProps"
            ],
            "properties": [
                {
                    "name": "action",
                    "decorators": [],
                    "description": "Url на который будет отправлена форма",
                    "required": false,
                    "type": "string | IApiMethod",
                    "example": "api/v1/handle-form"
                },
                {
                    "name": "actionMethod",
                    "decorators": [],
                    "description": "Тип HTTP запроса (GET | POST | PUT | DELETE)",
                    "required": false,
                    "type": "string",
                    "example": "POST"
                },
                {
                    "name": "autoFocus",
                    "decorators": [],
                    "description": "Если в форме есть элементы \\<input\\>, то произойдет автоматическая фокусировка на первом из них",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "autoSave",
                    "decorators": [],
                    "description": "Сохраняет значения полей формы в LocalStorage",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "autoStartTwoFactor",
                    "decorators": [],
                    "description": "Автоматически стартовать 2fa аутентификацию (отправлять код)",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "captchaActionName",
                    "decorators": [],
                    "description": "Название действия, которое передаётся в API Google reCAPTCHA v3, для более детального анализа\nповедения пользователя (https://developers.google.com/recaptcha/docs/v3)",
                    "required": false,
                    "type": "string",
                    "example": "'addComment'"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для \\<form\\>...\\<\\/form\\>",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "fields",
                    "decorators": [],
                    "description": "Поля, которые необходимо поместить в форму",
                    "required": false,
                    "type": "string | IFieldProps[]",
                    "example": "[{attribute: 'category', component: 'DropDownField'}]"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "Идентификатор формы",
                    "required": false,
                    "type": "string",
                    "example": "BookingForm"
                },
                {
                    "name": "initialValues",
                    "decorators": [],
                    "description": "Начальные значения формы",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон для полей в форме",
                    "required": false,
                    "type": "FormLayout",
                    "example": "horizontal"
                },
                {
                    "name": "listId",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "model",
                    "decorators": [],
                    "description": "Модель с полями формы",
                    "required": false,
                    "type": "any",
                    "example": "{attributes: [{attribute: 'category', field: 'DropDownField'}]}"
                },
                {
                    "name": "onAfterSubmit",
                    "decorators": [],
                    "description": "Обработчик события после отправки формы",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onBeforeSubmit",
                    "decorators": [],
                    "description": "Обработчик события перед отправкой формы",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Обработчик события при каком-либо изменении в форме",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onComplete",
                    "decorators": [],
                    "description": "Обработчик успешного выполнения формы (без ошибок)",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onSubmit",
                    "decorators": [],
                    "description": "Обработчик события отправки формы",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onTwoFactor",
                    "decorators": [],
                    "description": "Обработчик, который вызывается при запросе 2FA",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "prefix",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "restoreCustomizer",
                    "decorators": [],
                    "description": "Обработчик, который используется для форматирования значений из адресной строки в валидные значения формы",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "submitLabel",
                    "decorators": [],
                    "description": "Надпись на кнопке отправки формы",
                    "required": false,
                    "type": "string",
                    "example": "Submit"
                },
                {
                    "name": "syncWithAddressBar",
                    "decorators": [],
                    "description": "Значения полей формы будут подставляться в качестве query-параметров в адресную строку",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "useHash",
                    "decorators": [],
                    "description": "Указывает, что в качестве сепаратора для параметров формы в адресной строке нужно использовать '#', а не '?'",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "useRedux",
                    "decorators": [],
                    "description": "Использовать для данных глобальное хранилище (redux)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "validators",
                    "decorators": [],
                    "description": "Набор с правилами для проверки соответствия значений полей формы определенному формату.\nПроверка запускается в момент отправки формы (в обработчике onSubmit).",
                    "required": false,
                    "type": "any[]",
                    "example": "[['name', 'required'], ['age', 'integer']]"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                },
                {
                    "name": "viewProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": "{className: 'foo'}"
                }
            ]
        },
        "IStepItem": {
            "name": "IStepItem",
            "moduleName": "ui/list/Steps/Steps",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "description",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "isError",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "subtitle",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                }
            ]
        },
        "IStepItemViewProps": {
            "name": "IStepItemViewProps",
            "moduleName": "ui/list/Steps/Steps",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "index",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "status",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "stepItem",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "IStepItem",
                    "example": null
                }
            ]
        },
        "IStepsViewProps": {
            "name": "IStepsViewProps",
            "moduleName": "ui/list/Steps/Steps",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "children",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "ReactNode",
                    "example": null
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                }
            ]
        },
        "IModalProps": {
            "name": "IModalProps",
            "moduleName": "ui/modal/Modal/Modal",
            "title": "Modal",
            "description": "Модальное окно",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Кастомный CSS-класс",
                    "required": false,
                    "type": "string",
                    "example": "'CustomCssClassName'"
                },
                {
                    "name": "closeTimeoutMs",
                    "decorators": [],
                    "description": "Время, через которое произойдет закрытие Modal.\nВ этот отрезок времени должны происходить все анимации закрытия компонента.\nПереопределяет отрезок времени, заданный в ModalPortal",
                    "required": false,
                    "type": "number",
                    "example": "300"
                },
                {
                    "name": "component",
                    "decorators": [],
                    "description": "Компонент, который отрендерится внутри Modal",
                    "required": false,
                    "type": "{}",
                    "example": "() => <InnerModalComponent />"
                },
                {
                    "name": "componentProps",
                    "decorators": [],
                    "description": "Свойства для внутреннего компонента",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "controls",
                    "decorators": [],
                    "description": "Коллекция контролов, которая отобразится в Modal",
                    "required": false,
                    "type": "IControlItem[]",
                    "example": "[{label: __(('Закрыть')), onClick: () => props.onClose()}]"
                },
                {
                    "name": "group",
                    "decorators": [],
                    "description": "Группа Modal",
                    "required": false,
                    "type": "string",
                    "example": "'modal'"
                },
                {
                    "name": "index",
                    "decorators": [],
                    "description": "Порядковый номер Modal",
                    "required": false,
                    "type": "number",
                    "example": "0"
                },
                {
                    "name": "isClosing",
                    "decorators": [],
                    "description": "Значение свойства отслеживается для показа/закрытия Modal.\nЕсли для компонента ModalPortal установлено значение задержки (animationDelayMc), то после закрытия\nпользователем Modal, оно исчезнет не сразу, а через указанный в animationDelayMc промежуток времени.\nВ течение этого времени флаг isClosing будет равен true.\nЕсли задержка не установлена, Modal закроется сразу же и флаг isClosing всегда будет равен false.",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "Обработчик срабатывает при закрытии Modal",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "shouldCloseOnEsc",
                    "decorators": [],
                    "description": "Закрытие Modal при нажатии на клавишу 'ESC'",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "shouldCloseOnOverlayClick",
                    "decorators": [],
                    "description": "Закрытие Modal при клике на компонент overlay внутри Modal (темный фон, отделяющий контент страницы от Modal)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер Modal",
                    "required": false,
                    "type": "string",
                    "example": "'middle'"
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "Заголовок Modal",
                    "required": false,
                    "type": "string",
                    "example": "'Заявка отправлена на модерацию'"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение React-компонента для кастомизации view-отображения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "MyCustomView"
                }
            ]
        },
        "IModalPortalProps": {
            "name": "IModalPortalProps",
            "moduleName": "ui/modal/ModalPortal/ModalPortal",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "animationDelayMc",
                    "decorators": [],
                    "description": "Время, через которое произойдет закрытие Modal",
                    "required": false,
                    "type": "number",
                    "example": "300"
                },
                {
                    "name": "group",
                    "decorators": [],
                    "description": "Группа Modal",
                    "required": false,
                    "type": "string",
                    "example": "'modal'"
                }
            ]
        },
        "ITwoFactorModalViewProps": {
            "name": "ITwoFactorModalViewProps",
            "moduleName": "ui/modal/TwoFactorModal/TwoFactorModal",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "ITwoFactorModalPrivateProps"
            ],
            "properties": [
                {
                    "name": "description",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "formProps",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "info",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "{createTime: string, expireTime: string, isConfirmed: string, providerData: any, providerName: string}",
                    "example": null
                },
                {
                    "name": "onClose",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "providerName",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ]
        },
        "IBreadcrumbsProps": {
            "name": "IBreadcrumbsProps",
            "moduleName": "ui/nav/Breadcrumbs/Breadcrumbs",
            "title": "Breadcrumbs",
            "description": "Хлебные крошки",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Коллекция элементов навигационной цепочки",
                    "required": false,
                    "type": "IRoute[]",
                    "example": "[{id: 'root', title: 'Home'}, {id: 'catalog', title: 'Catalog'}"
                },
                {
                    "name": "pageId",
                    "decorators": [],
                    "description": "Вместо items можно передать идентификатор текущего роута, от которого компонент самостоятельно построит\nнавигационную цепочку",
                    "required": false,
                    "type": "string",
                    "example": "'catalog'"
                },
                {
                    "name": "pageTitle",
                    "decorators": [],
                    "description": "Заголовок текущей страницы. Если заголовок не задан, то подставится item.title",
                    "required": false,
                    "type": "string",
                    "example": "'Каталог'"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                }
            ]
        },
        "IControlItem": {
            "name": "IControlItem",
            "moduleName": "ui/nav/Controls/Controls",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IButtonProps"
            ],
            "properties": [
                {
                    "name": "badge",
                    "decorators": [],
                    "description": "Цифра (к примеру, новые сообщения)",
                    "required": false,
                    "type": "number | IButtonBadge",
                    "example": null
                },
                {
                    "name": "block",
                    "decorators": [],
                    "description": "Включает стиль `block`, делая размер кнопки на 100% ширины блока",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для кнопки или ссылки",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "color",
                    "decorators": [],
                    "description": "Цвет состояния",
                    "required": false,
                    "type": "string",
                    "example": "success"
                },
                {
                    "name": "confirm",
                    "decorators": [],
                    "description": "При указании данного свойства, после нажатия на кнопку и до выполнения действия будет отображено нативное\nокно с текстом подтверждения - `window.confirm('Ваш текст')`.",
                    "required": false,
                    "type": "string",
                    "example": "Удалить запись #512?"
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит кнопку в состояние \"не активна\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "ID формы, для которой кнопка выполняет submit. При указании ID формы кнопка будет показывать состояние загрузки\nпри отправке формы.",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, отображается при наведении (через тег title)",
                    "required": false,
                    "type": "any",
                    "example": "Save"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Иконка",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "id",
                    "decorators": [],
                    "description": "Идентификатор контрола",
                    "required": false,
                    "type": "string",
                    "example": "'create'"
                },
                {
                    "name": "isFailed",
                    "decorators": [],
                    "description": "Отобразить кнопку в состоянии неуспешного нажатия (например, при неуспешном ajax запросе)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "isLoading",
                    "decorators": [],
                    "description": "Отображать индикатор загрузки?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Текст кнопки или ссылки",
                    "required": false,
                    "type": "any",
                    "example": "Save"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Выбор макета для распложения кнопки в форме. Если кнопка находится внутри `<Form>...</Form>`, то `layout` будет\nвзят из контекста формы и автоматически применен при отораженн. Для его отключения укажите `false`.\nДанное свойство так же может принимать объект, если нужно прокинуть дополнительные свойства в шаблон макета.\nПример: `{layout: 'horizontal', cols: [2,6]}`",
                    "required": false,
                    "type": "FormLayout",
                    "example": "horizontal"
                },
                {
                    "name": "link",
                    "decorators": [],
                    "description": "Отображать как ссылку?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onClick",
                    "decorators": [],
                    "description": "Обработчик события нажатия. Для асинхронных событий вовзращяйте в обработчике `Promise`, тогда кнопка\nавтоматически будет переключаться в режим загрузки (`loading`) на время выполнения `Promise`.",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "outline",
                    "decorators": [],
                    "description": "Включает стиль `outline`, когда у кнопки остается только `border`, а цвет кнопки становится прозрачным",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "position",
                    "decorators": [],
                    "description": "Расположение контрола",
                    "required": false,
                    "type": "\"left\" | \"right\"",
                    "example": "'left'"
                },
                {
                    "name": "resetFailedMs",
                    "decorators": [],
                    "description": "Через сколько миллисекунд должно исчезнуть состояние \"failed\"",
                    "required": false,
                    "type": "number",
                    "example": "5000"
                },
                {
                    "name": "showLabelOnLoading",
                    "decorators": [],
                    "description": "Должна ли показываться надпись на кнопке в состоянии загрузки",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "tag",
                    "decorators": [],
                    "description": "Выбор html-тэга, который будет вставлен в DOM",
                    "required": false,
                    "type": "\"button\" | \"a\"",
                    "example": "button"
                },
                {
                    "name": "target",
                    "decorators": [],
                    "description": "HTML аттрибут `target`, доступен только для ссылок",
                    "required": false,
                    "type": "string",
                    "example": "_blank"
                },
                {
                    "name": "textColor",
                    "decorators": [],
                    "description": "Цвет текста кнопки или ссылки",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "toRoute",
                    "decorators": [],
                    "description": "ID роута, на который необходимо перейти, указанный в дереве `steroids` роутинга. Для передачи параметров\nиспользуйте свойство `toRouteParams`",
                    "required": false,
                    "type": "string",
                    "example": "profile"
                },
                {
                    "name": "toRouteParams",
                    "decorators": [],
                    "description": "Параметры роута, на который необходимо перейти, см. свойство `toRoute`.",
                    "required": false,
                    "type": "Record",
                    "example": "{userId: 52}"
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "HTML Тип",
                    "required": false,
                    "type": "\"button\" | \"submit\"",
                    "example": "submit"
                },
                {
                    "name": "url",
                    "decorators": [],
                    "description": "Ссылка на внешнюю страницу, используется совместно с свойством `link`",
                    "required": false,
                    "type": "string",
                    "example": "https://ya.ru"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ComponentType",
                    "example": "MyCustomView"
                },
                {
                    "name": "visible",
                    "decorators": [],
                    "description": "Скрыть или показать контрол",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                }
            ]
        },
        "IControlsProps": {
            "name": "IControlsProps",
            "moduleName": "ui/nav/Controls/Controls",
            "title": "Controls",
            "description": "Коллекция с контролами. Можно передавать список с кастомными контролами, а можно использовать стандарные контролы\nкомпонента. Стандартные контролы подходят для CRUD-операций, все что нужно для их использования - передать\nсоответствующий id и обработчик - внешний вид (иконка и название) отобразятся автоматом.",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": "MyCustomView"
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Коллекция контролов",
                    "required": false,
                    "type": "IControlItem[]",
                    "example": "[{id: 'delete', onClick: () => alert(\"It's deleted\")}]"
                },
                {
                    "name": "navProps",
                    "decorators": [],
                    "description": "Пропсы для компонента Nav, в который передаются контролы в качестве items",
                    "required": false,
                    "type": "INavProps",
                    "example": "{layout: 'link'}"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                }
            ]
        },
        "IControlsViewProps": {
            "name": "IControlsViewProps",
            "moduleName": "ui/nav/Controls/Controls",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IControlsProps"
            ],
            "properties": [
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Коллекция контролов",
                    "required": true,
                    "type": "IControlItem & {color: string, confirm: string, icon: string, label: any, outline: boolean, position: \"left\" | \"right\"}[]",
                    "example": null
                },
                {
                    "name": "navProps",
                    "decorators": [],
                    "description": "Пропсы для компонента Nav, в который передаются контролы в качестве items",
                    "required": false,
                    "type": "INavProps",
                    "example": "{layout: 'link'}"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                }
            ]
        },
        "ILinkProps": {
            "name": "ILinkProps",
            "moduleName": "ui/nav/Link/Link",
            "title": "Link",
            "description": "Ссылка",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IButtonProps"
            ],
            "properties": [
                {
                    "name": "badge",
                    "decorators": [],
                    "description": "Цифра (к примеру, новые сообщения)",
                    "required": false,
                    "type": "number | IButtonBadge",
                    "example": null
                },
                {
                    "name": "block",
                    "decorators": [],
                    "description": "Включает стиль `block`, делая размер кнопки на 100% ширины блока",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для кнопки или ссылки",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "color",
                    "decorators": [],
                    "description": "Цвет состояния",
                    "required": false,
                    "type": "string",
                    "example": "success"
                },
                {
                    "name": "confirm",
                    "decorators": [],
                    "description": "При указании данного свойства, после нажатия на кнопку и до выполнения действия будет отображено нативное\nокно с текстом подтверждения - `window.confirm('Ваш текст')`.",
                    "required": false,
                    "type": "string",
                    "example": "Удалить запись #512?"
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит кнопку в состояние \"не активна\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "ID формы, для которой кнопка выполняет submit. При указании ID формы кнопка будет показывать состояние загрузки\nпри отправке формы.",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, отображается при наведении (через тег title)",
                    "required": false,
                    "type": "any",
                    "example": "Save"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Иконка",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "isFailed",
                    "decorators": [],
                    "description": "Отобразить кнопку в состоянии неуспешного нажатия (например, при неуспешном ajax запросе)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "isLoading",
                    "decorators": [],
                    "description": "Отображать индикатор загрузки?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Текст кнопки или ссылки",
                    "required": false,
                    "type": "any",
                    "example": "Save"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Выбор макета для распложения кнопки в форме. Если кнопка находится внутри `<Form>...</Form>`, то `layout` будет\nвзят из контекста формы и автоматически применен при отораженн. Для его отключения укажите `false`.\nДанное свойство так же может принимать объект, если нужно прокинуть дополнительные свойства в шаблон макета.\nПример: `{layout: 'horizontal', cols: [2,6]}`",
                    "required": false,
                    "type": "FormLayout",
                    "example": "horizontal"
                },
                {
                    "name": "link",
                    "decorators": [],
                    "description": "Отображать как ссылку?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onClick",
                    "decorators": [],
                    "description": "Обработчик события нажатия. Для асинхронных событий вовзращяйте в обработчике `Promise`, тогда кнопка\nавтоматически будет переключаться в режим загрузки (`loading`) на время выполнения `Promise`.",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "outline",
                    "decorators": [],
                    "description": "Включает стиль `outline`, когда у кнопки остается только `border`, а цвет кнопки становится прозрачным",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "resetFailedMs",
                    "decorators": [],
                    "description": "Через сколько миллисекунд должно исчезнуть состояние \"failed\"",
                    "required": false,
                    "type": "number",
                    "example": "5000"
                },
                {
                    "name": "showLabelOnLoading",
                    "decorators": [],
                    "description": "Должна ли показываться надпись на кнопке в состоянии загрузки",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "tag",
                    "decorators": [],
                    "description": "Выбор html-тэга, который будет вставлен в DOM",
                    "required": false,
                    "type": "\"button\" | \"a\"",
                    "example": "button"
                },
                {
                    "name": "target",
                    "decorators": [],
                    "description": "HTML аттрибут `target`, доступен только для ссылок",
                    "required": false,
                    "type": "string",
                    "example": "_blank"
                },
                {
                    "name": "textColor",
                    "decorators": [],
                    "description": "Цвет текста кнопки или ссылки",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "toRoute",
                    "decorators": [],
                    "description": "ID роута, на который необходимо перейти, указанный в дереве `steroids` роутинга. Для передачи параметров\nиспользуйте свойство `toRouteParams`",
                    "required": false,
                    "type": "string",
                    "example": "profile"
                },
                {
                    "name": "toRouteParams",
                    "decorators": [],
                    "description": "Параметры роута, на который необходимо перейти, см. свойство `toRoute`.",
                    "required": false,
                    "type": "Record",
                    "example": "{userId: 52}"
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "HTML Тип",
                    "required": false,
                    "type": "\"button\" | \"submit\"",
                    "example": "submit"
                },
                {
                    "name": "url",
                    "decorators": [],
                    "description": "Ссылка на внешнюю страницу, используется совместно с свойством `link`",
                    "required": false,
                    "type": "string",
                    "example": "https://ya.ru"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ComponentType",
                    "example": "MyCustomView"
                }
            ]
        },
        "INavItem": {
            "name": "INavItem",
            "moduleName": "ui/nav/Nav/Nav",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IButtonProps"
            ],
            "properties": [
                {
                    "name": "badge",
                    "decorators": [],
                    "description": "Цифра (к примеру, новые сообщения)",
                    "required": false,
                    "type": "number | IButtonBadge",
                    "example": null
                },
                {
                    "name": "block",
                    "decorators": [],
                    "description": "Включает стиль `block`, делая размер кнопки на 100% ширины блока",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "color",
                    "decorators": [],
                    "description": "Цвет состояния",
                    "required": false,
                    "type": "string",
                    "example": "success"
                },
                {
                    "name": "confirm",
                    "decorators": [],
                    "description": "При указании данного свойства, после нажатия на кнопку и до выполнения действия будет отображено нативное\nокно с текстом подтверждения - `window.confirm('Ваш текст')`.",
                    "required": false,
                    "type": "string",
                    "example": "Удалить запись #512?"
                },
                {
                    "name": "content",
                    "decorators": [],
                    "description": "Контент, который отобразиться, если элемент навигации будет активен",
                    "required": false,
                    "type": "any",
                    "example": "ContentComponent"
                },
                {
                    "name": "contentProps",
                    "decorators": [],
                    "description": "Свойства для компонента с контентом",
                    "required": false,
                    "type": "any",
                    "example": "{content: 'Some text'}"
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит кнопку в состояние \"не активна\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "ID формы, для которой кнопка выполняет submit. При указании ID формы кнопка будет показывать состояние загрузки\nпри отправке формы.",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, отображается при наведении (через тег title)",
                    "required": false,
                    "type": "any",
                    "example": "Save"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Иконка",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "id",
                    "decorators": [],
                    "description": "Идентификатор элемента",
                    "required": false,
                    "type": "string | number",
                    "example": null
                },
                {
                    "name": "isFailed",
                    "decorators": [],
                    "description": "Отобразить кнопку в состоянии неуспешного нажатия (например, при неуспешном ajax запросе)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "isLoading",
                    "decorators": [],
                    "description": "Отображать индикатор загрузки?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Текст элемента",
                    "required": false,
                    "type": "any",
                    "example": "'Отзывы'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Выбор макета для распложения кнопки в форме. Если кнопка находится внутри `<Form>...</Form>`, то `layout` будет\nвзят из контекста формы и автоматически применен при отораженн. Для его отключения укажите `false`.\nДанное свойство так же может принимать объект, если нужно прокинуть дополнительные свойства в шаблон макета.\nПример: `{layout: 'horizontal', cols: [2,6]}`",
                    "required": false,
                    "type": "FormLayout",
                    "example": "horizontal"
                },
                {
                    "name": "link",
                    "decorators": [],
                    "description": "Отображать как ссылку?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onClick",
                    "decorators": [],
                    "description": "Обработчик события нажатия",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "outline",
                    "decorators": [],
                    "description": "Включает стиль `outline`, когда у кнопки остается только `border`, а цвет кнопки становится прозрачным",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "resetFailedMs",
                    "decorators": [],
                    "description": "Через сколько миллисекунд должно исчезнуть состояние \"failed\"",
                    "required": false,
                    "type": "number",
                    "example": "5000"
                },
                {
                    "name": "showLabelOnLoading",
                    "decorators": [],
                    "description": "Должна ли показываться надпись на кнопке в состоянии загрузки",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "tag",
                    "decorators": [],
                    "description": "Выбор html-тэга, который будет вставлен в DOM",
                    "required": false,
                    "type": "\"button\" | \"a\"",
                    "example": "button"
                },
                {
                    "name": "target",
                    "decorators": [],
                    "description": "HTML аттрибут `target`, доступен только для ссылок",
                    "required": false,
                    "type": "string",
                    "example": "_blank"
                },
                {
                    "name": "textColor",
                    "decorators": [],
                    "description": "Цвет текста кнопки или ссылки",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "toRoute",
                    "decorators": [],
                    "description": "ID роута, на который необходимо перейти, указанный в дереве `steroids` роутинга. Для передачи параметров\nиспользуйте свойство `toRouteParams`",
                    "required": false,
                    "type": "string",
                    "example": "profile"
                },
                {
                    "name": "toRouteParams",
                    "decorators": [],
                    "description": "Параметры роута, на который необходимо перейти, см. свойство `toRoute`.",
                    "required": false,
                    "type": "Record",
                    "example": "{userId: 52}"
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "HTML Тип",
                    "required": false,
                    "type": "\"button\" | \"submit\"",
                    "example": "submit"
                },
                {
                    "name": "url",
                    "decorators": [],
                    "description": "Ссылка на внешнюю страницу",
                    "required": false,
                    "type": "string",
                    "example": "https://ya.ru"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения элемента",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                },
                {
                    "name": "visible",
                    "decorators": [],
                    "description": "Видимость элемента",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                }
            ]
        },
        "INavProps": {
            "name": "INavProps",
            "moduleName": "ui/nav/Nav/Nav",
            "title": "Nav",
            "description": "Компонент навигации",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "activeTab",
                    "decorators": [],
                    "description": "Идентификатор активного элемента. По умолчанию будет активен первый элемент.",
                    "required": false,
                    "type": "string | number",
                    "example": "1"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Коллекция с элементами навигации. Также можно передать идентификатор роута, тогда компонент найдет все\nвложенные роуты и отобразит их в навигации.",
                    "required": false,
                    "type": "string | INavItem[]",
                    "example": "[{id: 1, label: 'One'}, {id: 2, label: 'Two'}] | 'root'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон отображения элементов навигации",
                    "required": false,
                    "type": "string",
                    "example": "'link'"
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Обработчик, который вызывается при смене активного элемента навигации",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения элемента",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                }
            ]
        },
        "INavViewProps": {
            "name": "INavViewProps",
            "moduleName": "ui/nav/Nav/Nav",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "INavProps"
            ],
            "properties": [
                {
                    "name": "activeTab",
                    "decorators": [],
                    "description": "Идентификатор активного элемента. По умолчанию будет активен первый элемент.",
                    "required": false,
                    "type": "string | number",
                    "example": "1"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Коллекция с элементами навигации. Также можно передать идентификатор роута, тогда компонент найдет все\nвложенные роуты и отобразит их в навигации.",
                    "required": true,
                    "type": "INavItem & {isActive: boolean}[]",
                    "example": null
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Шаблон отображения элементов навигации",
                    "required": false,
                    "type": "string",
                    "example": "'link'"
                },
                {
                    "name": "navClassName",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "onChange",
                    "decorators": [],
                    "description": "Обработчик, который вызывается при смене активного элемента навигации",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "onClick",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения элемента",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                }
            ]
        },
        "IRouteItem": {
            "name": "IRouteItem",
            "moduleName": "ui/nav/Router/Router",
            "title": "Router",
            "description": "Маршрутизатор.\nКомпонент получает общий для приложения шаблон и дерево роутов. Из дерева роутов посредством React Router\nобразуется switch-конструкция, которая в зависимости от текущего пути рендерит соответствующий компонент страницы.\nИли осуществляет редирект на другую страницу. Все страницы оборачиваются в переданный шаблон.",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "component",
                    "decorators": [],
                    "description": "Компонент страницы, который отобразится, если путь будет соответствовать location.pathname",
                    "required": false,
                    "type": "any",
                    "example": "CatalogPage"
                },
                {
                    "name": "componentProps",
                    "decorators": [],
                    "description": "Свойства для компонента страницы",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "enums",
                    "decorators": [],
                    "description": "Название или список с названиями перечислений, полученных с бэкенда",
                    "required": false,
                    "type": "string | string[]",
                    "example": null
                },
                {
                    "name": "exact",
                    "decorators": [],
                    "description": "Если true, то путь должен точно соответствовать location.pathname",
                    "required": false,
                    "type": "boolean",
                    "example": "'/catalog'"
                },
                {
                    "name": "fetch",
                    "decorators": [],
                    "description": "Обработчик, который возвращает конфигурацию для осуществления HTTP-запроса. Запрос происходит каждый раз\nперед рендерингом страницы, чтобы получить для неё все необходимые данные",
                    "required": false,
                    "type": "IFetchHocConfigFunc",
                    "example": null
                },
                {
                    "name": "id",
                    "decorators": [],
                    "description": "Идентификатор роута",
                    "required": false,
                    "type": "string",
                    "example": "'catalog'"
                },
                {
                    "name": "isNavVisible",
                    "decorators": [],
                    "description": "Отображать ссылку или кнопку в навигации для перехода на данный роут",
                    "required": false,
                    "type": "boolean",
                    "example": "false"
                },
                {
                    "name": "isVisible",
                    "decorators": [],
                    "description": "Отображать или показывать роут",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Вложенные роуты",
                    "required": false,
                    "type": "IRouteItem[] | {}",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Текст, который отобразится на кнопке навигации для данного роута",
                    "required": false,
                    "type": "string",
                    "example": "'Каталог'"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Тип шаблона для данного роута",
                    "required": false,
                    "type": "string",
                    "example": "'dark'"
                },
                {
                    "name": "models",
                    "decorators": [],
                    "description": "Название или список с названиями моделей, полученных с бэкенда",
                    "required": false,
                    "type": "string | string[]",
                    "example": null
                },
                {
                    "name": "path",
                    "decorators": [],
                    "description": "Путь до роута",
                    "required": false,
                    "type": "string",
                    "example": "'/catalog'"
                },
                {
                    "name": "preloadData",
                    "decorators": [],
                    "description": "Обработчик, который принимает параметры URL и возвращает массив с пропсами для хука useFetch и компонента\nList.\nФункция запускается перед рендерингом приложения в режиме SSR и используется для предварительной\nзагрузки данных, необходимых на текущей странице.\nХук useFetch и компонент List не будут повторно инициализироваться и делать запросы на клиенте,\nесли подгруженные данные существуют.",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "redirectTo",
                    "decorators": [],
                    "description": "В свойстве можно передать как путь, на который осуществится редирект, так и булево значение.\nЕсли свойство равно true - то редирект произойдет на первый из вложенных роутов.",
                    "required": false,
                    "type": "string | boolean",
                    "example": "true"
                },
                {
                    "name": "roles",
                    "decorators": [],
                    "description": "Список с ролями, который показывает, кому из пользователей будет доступен просмотр страницы",
                    "required": false,
                    "type": "string[]",
                    "example": "['user', 'admin']"
                },
                {
                    "name": "title",
                    "decorators": [],
                    "description": "Заголовок страницы",
                    "required": false,
                    "type": "string",
                    "example": "'Каталог'"
                }
            ]
        },
        "IRouterProps": {
            "name": "IRouterProps",
            "moduleName": "ui/nav/Router/Router",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "autoScrollTop",
                    "decorators": [],
                    "description": "Прокрутить страницу к началу при смене url",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "children",
                    "decorators": [],
                    "description": "Контент, который отобразится под каждой страницей приложения",
                    "required": false,
                    "type": "ReactNode",
                    "example": "SomeComponent"
                },
                {
                    "name": "defaultRoles",
                    "decorators": [],
                    "description": "Если у роута не задано свойство roles, которое определяет, кому из пользователей будет доступен контент\nна соответствующей странице, то подставится стандартный список с ролями",
                    "required": false,
                    "type": "string[]",
                    "example": "[null, 'user', 'admin']"
                },
                {
                    "name": "routes",
                    "decorators": [],
                    "description": "Дерево роутов",
                    "required": false,
                    "type": "IRouteItem[] | {}",
                    "example": "{id: 'root', path: '/', component: IndexPage, items: [...]}"
                },
                {
                    "name": "wrapperProps",
                    "decorators": [],
                    "description": "Свойства шаблона",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "wrapperView",
                    "decorators": [],
                    "description": "Общий шаблон, который оборачивает страницы приложения",
                    "required": false,
                    "type": "any",
                    "example": "Layout"
                }
            ]
        },
        "ITreeItem": {
            "name": "ITreeItem",
            "moduleName": "ui/nav/Tree/Tree",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "IButtonProps"
            ],
            "properties": [
                {
                    "name": "badge",
                    "decorators": [],
                    "description": "Цифра (к примеру, новые сообщения)",
                    "required": false,
                    "type": "number | IButtonBadge",
                    "example": null
                },
                {
                    "name": "block",
                    "decorators": [],
                    "description": "Включает стиль `block`, делая размер кнопки на 100% ширины блока",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "Дополнительный CSS-класс для кнопки или ссылки",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "color",
                    "decorators": [],
                    "description": "Цвет состояния",
                    "required": false,
                    "type": "string",
                    "example": "success"
                },
                {
                    "name": "confirm",
                    "decorators": [],
                    "description": "При указании данного свойства, после нажатия на кнопку и до выполнения действия будет отображено нативное\nокно с текстом подтверждения - `window.confirm('Ваш текст')`.",
                    "required": false,
                    "type": "string",
                    "example": "Удалить запись #512?"
                },
                {
                    "name": "dark",
                    "decorators": [],
                    "description": "Темная тема",
                    "required": false,
                    "type": "boolean",
                    "example": null
                },
                {
                    "name": "disabled",
                    "decorators": [],
                    "description": "Переводит кнопку в состояние \"не активна\"",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "formId",
                    "decorators": [],
                    "description": "ID формы, для которой кнопка выполняет submit. При указании ID формы кнопка будет показывать состояние загрузки\nпри отправке формы.",
                    "required": false,
                    "type": "string | boolean",
                    "example": null
                },
                {
                    "name": "hint",
                    "decorators": [],
                    "description": "Подсказка, отображается при наведении (через тег title)",
                    "required": false,
                    "type": "any",
                    "example": "Save"
                },
                {
                    "name": "icon",
                    "decorators": [],
                    "description": "Иконка",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "id",
                    "decorators": [],
                    "description": "Идентификатор узла",
                    "required": false,
                    "type": "string | number",
                    "example": null
                },
                {
                    "name": "isFailed",
                    "decorators": [],
                    "description": "Отобразить кнопку в состоянии неуспешного нажатия (например, при неуспешном ajax запросе)",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "isLoading",
                    "decorators": [],
                    "description": "Отображать индикатор загрузки?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Вложенные элементы\n[{id: 2, label: 'Nested element', items: [...]}]",
                    "required": false,
                    "type": "any[]",
                    "example": null
                },
                {
                    "name": "label",
                    "decorators": [],
                    "description": "Текст кнопки или ссылки",
                    "required": false,
                    "type": "any",
                    "example": "Save"
                },
                {
                    "name": "layout",
                    "decorators": [],
                    "description": "Выбор макета для распложения кнопки в форме. Если кнопка находится внутри `<Form>...</Form>`, то `layout` будет\nвзят из контекста формы и автоматически применен при отораженн. Для его отключения укажите `false`.\nДанное свойство так же может принимать объект, если нужно прокинуть дополнительные свойства в шаблон макета.\nПример: `{layout: 'horizontal', cols: [2,6]}`",
                    "required": false,
                    "type": "FormLayout",
                    "example": "horizontal"
                },
                {
                    "name": "link",
                    "decorators": [],
                    "description": "Отображать как ссылку?",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "onClick",
                    "decorators": [],
                    "description": "Обработчик события нажатия. Для асинхронных событий вовзращяйте в обработчике `Promise`, тогда кнопка\nавтоматически будет переключаться в режим загрузки (`loading`) на время выполнения `Promise`.",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "outline",
                    "decorators": [],
                    "description": "Включает стиль `outline`, когда у кнопки остается только `border`, а цвет кнопки становится прозрачным",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "resetFailedMs",
                    "decorators": [],
                    "description": "Через сколько миллисекунд должно исчезнуть состояние \"failed\"",
                    "required": false,
                    "type": "number",
                    "example": "5000"
                },
                {
                    "name": "showLabelOnLoading",
                    "decorators": [],
                    "description": "Должна ли показываться надпись на кнопке в состоянии загрузки",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "size",
                    "decorators": [],
                    "description": "Размер",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "style",
                    "decorators": [],
                    "description": "Объект CSS стилей",
                    "required": false,
                    "type": "any",
                    "example": "{width: '45%'}"
                },
                {
                    "name": "tag",
                    "decorators": [],
                    "description": "Выбор html-тэга, который будет вставлен в DOM",
                    "required": false,
                    "type": "\"button\" | \"a\"",
                    "example": "button"
                },
                {
                    "name": "target",
                    "decorators": [],
                    "description": "HTML аттрибут `target`, доступен только для ссылок",
                    "required": false,
                    "type": "string",
                    "example": "_blank"
                },
                {
                    "name": "textColor",
                    "decorators": [],
                    "description": "Цвет текста кнопки или ссылки",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "toRoute",
                    "decorators": [],
                    "description": "ID роута, на который необходимо перейти, указанный в дереве `steroids` роутинга. Для передачи параметров\nиспользуйте свойство `toRouteParams`",
                    "required": false,
                    "type": "string",
                    "example": "profile"
                },
                {
                    "name": "toRouteParams",
                    "decorators": [],
                    "description": "Параметры роута, на который необходимо перейти, см. свойство `toRoute`.",
                    "required": false,
                    "type": "Record",
                    "example": "{userId: 52}"
                },
                {
                    "name": "type",
                    "decorators": [],
                    "description": "HTML Тип",
                    "required": false,
                    "type": "\"button\" | \"submit\"",
                    "example": "submit"
                },
                {
                    "name": "url",
                    "decorators": [],
                    "description": "Ссылка на внешнюю страницу, используется совместно с свойством `link`",
                    "required": false,
                    "type": "string",
                    "example": "https://ya.ru"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения",
                    "required": false,
                    "type": "ComponentType",
                    "example": "MyCustomView"
                },
                {
                    "name": "visible",
                    "decorators": [],
                    "description": "Скрыть или показать узел",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                }
            ]
        },
        "ITreeProps": {
            "name": "ITreeProps",
            "moduleName": "ui/nav/Tree/Tree",
            "title": "Tree",
            "description": "Компонент, который представляет в виде дерева список с иерархической структурой данных",
            "tags": {},
            "defaultProps": null,
            "extends": [],
            "properties": [
                {
                    "name": "autoOpenLevels",
                    "decorators": [],
                    "description": "Максимальный уровень вложенности, до которого все узлы будут отображаться в развёрнутом виде",
                    "required": false,
                    "type": "number",
                    "example": "1"
                },
                {
                    "name": "autoSave",
                    "decorators": [],
                    "description": "Отображать раскрытыми узлы из LocalStorage",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "id",
                    "decorators": [],
                    "description": "Идентификатор (ключ) для сохранения в LocalStorage коллекции с раскрытыми узлами",
                    "required": false,
                    "type": "string",
                    "example": "'exampleTree'"
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Коллекция с узлами. Также можно передать идентификатор роута, тогда компонент найдет все\nвложенные роуты и отобразит их в виде дерева.",
                    "required": false,
                    "type": "string | ITreeItem[]",
                    "example": "[{id: 1, label: 'Root', items: [...]}] | 'root'"
                },
                {
                    "name": "itemsKey",
                    "decorators": [],
                    "description": "Ключ для доступа к вложенным элементам узла",
                    "required": false,
                    "type": "string",
                    "example": "'items'"
                },
                {
                    "name": "level",
                    "decorators": [],
                    "description": "Ограничивает максимальный уровень вложенности дерева",
                    "required": false,
                    "type": "number",
                    "example": "2"
                },
                {
                    "name": "onItemClick",
                    "decorators": [],
                    "description": "Обработчик на клик по узлу",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "selectedItemId",
                    "decorators": [],
                    "description": "Идентификатор узла, которой нужно отобразить в раскрытом виде",
                    "required": false,
                    "type": "string | number",
                    "example": "2"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения элемента",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                }
            ]
        },
        "ITreeViewProps": {
            "name": "ITreeViewProps",
            "moduleName": "ui/nav/Tree/Tree",
            "title": "",
            "description": "",
            "tags": {},
            "defaultProps": null,
            "extends": [
                "ITreeProps"
            ],
            "properties": [
                {
                    "name": "autoOpenLevels",
                    "decorators": [],
                    "description": "Максимальный уровень вложенности, до которого все узлы будут отображаться в развёрнутом виде",
                    "required": false,
                    "type": "number",
                    "example": "1"
                },
                {
                    "name": "autoSave",
                    "decorators": [],
                    "description": "Отображать раскрытыми узлы из LocalStorage",
                    "required": false,
                    "type": "boolean",
                    "example": "true"
                },
                {
                    "name": "className",
                    "decorators": [],
                    "description": "CSS-класс для элемента отображения",
                    "required": false,
                    "type": "string",
                    "example": null
                },
                {
                    "name": "id",
                    "decorators": [],
                    "description": "Идентификатор (ключ) для сохранения в LocalStorage коллекции с раскрытыми узлами",
                    "required": false,
                    "type": "string",
                    "example": "'exampleTree'"
                },
                {
                    "name": "items",
                    "decorators": [],
                    "description": "Коллекция с узлами. Также можно передать идентификатор роута, тогда компонент найдет все\nвложенные роуты и отобразит их в виде дерева.",
                    "required": true,
                    "type": "ITreeItem & {className: string, hasItems: boolean, index: number, isOpened: boolean, isSelected: boolean, level: number, onClick: {}, uniqId: string}[]",
                    "example": null
                },
                {
                    "name": "itemsKey",
                    "decorators": [],
                    "description": "Ключ для доступа к вложенным элементам узла",
                    "required": false,
                    "type": "string",
                    "example": "'items'"
                },
                {
                    "name": "level",
                    "decorators": [],
                    "description": "Ограничивает максимальный уровень вложенности дерева",
                    "required": false,
                    "type": "number",
                    "example": "2"
                },
                {
                    "name": "levelPadding",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "number",
                    "example": null
                },
                {
                    "name": "onItemClick",
                    "decorators": [],
                    "description": "Обработчик на клик по узлу",
                    "required": false,
                    "type": "{}",
                    "example": null
                },
                {
                    "name": "selectedItemId",
                    "decorators": [],
                    "description": "Идентификатор узла, которой нужно отобразить в раскрытом виде",
                    "required": false,
                    "type": "string | number",
                    "example": "2"
                },
                {
                    "name": "view",
                    "decorators": [],
                    "description": "Переопределение view React компонента для кастомизации отображения элемента",
                    "required": false,
                    "type": "any",
                    "example": "MyCustomView"
                }
            ]
        }
    },
    "declarations": {
        "IApiMethod": {
            "name": "IApiMethod",
            "decorators": [],
            "description": "",
            "required": true,
            "type": "{}",
            "example": null
        },
        "Dispatch": {
            "name": "Dispatch",
            "decorators": [],
            "description": "",
            "required": true,
            "type": "{}",
            "example": null
        },
        "IFetchHocConfigFunc": {
            "name": "IFetchHocConfigFunc",
            "decorators": [],
            "description": "",
            "required": true,
            "type": "{}",
            "example": null
        },
        "ListControlPosition": {
            "name": "ListControlPosition",
            "decorators": [],
            "description": "",
            "required": true,
            "type": "\"top\" | \"bottom\" | \"both\" | string",
            "example": null
        },
        "DataProviderItems": {
            "name": "DataProviderItems",
            "decorators": [],
            "description": "",
            "required": true,
            "type": "string | {} | string | number | {id: string | number | boolean, label: string | any}[]",
            "example": null
        },
        "ColorName": {
            "name": "ColorName",
            "decorators": [],
            "description": "Название цвета, соответствующее ему состоянию",
            "required": true,
            "type": "\"primary\" | \"secondary\" | \"success\" | \"info\" | \"warning\" | \"danger\" | \"light\" | \"dark\" | string",
            "example": null
        },
        "CssClassName": {
            "name": "CssClassName",
            "decorators": [],
            "description": "Дополнительные CSS классы",
            "required": true,
            "type": "string",
            "example": "my-block"
        },
        "CustomStyle": {
            "name": "CustomStyle",
            "decorators": [],
            "description": "Дополнительные стили",
            "required": true,
            "type": "React.CSSProperties",
            "example": "my-block"
        },
        "CustomView": {
            "name": "CustomView",
            "decorators": [],
            "description": "Переопределение view React компонента для кастомизации отображения",
            "required": true,
            "type": "React.ReactNode",
            "example": "MyCustomView"
        },
        "FormInputType": {
            "name": "FormInputType",
            "decorators": [],
            "description": "Объект из свойства `input` от redux-form",
            "required": true,
            "type": "{name: string, onChange: {}, value: any}",
            "example": null
        },
        "FormLayout": {
            "name": "FormLayout",
            "decorators": [],
            "description": "Свойства для настройки макета формы",
            "required": true,
            "type": "FormLayoutName | boolean | {className: string, cols: number[], label: boolean, layout: FormLayoutName | boolean, style: any}",
            "example": null
        },
        "FormLayoutName": {
            "name": "FormLayoutName",
            "decorators": [],
            "description": "Макет формы или ее части, влияющий на расположение полей",
            "required": true,
            "type": "\"default\" | \"horizontal\" | \"inline\" | string",
            "example": null
        },
        "HttpMethod": {
            "name": "HttpMethod",
            "decorators": [],
            "description": "HTTP метод",
            "required": true,
            "type": "\"get\" | \"post\" | \"put\" | \"delete\" | string",
            "example": null
        },
        "PrimaryKey": {
            "name": "PrimaryKey",
            "decorators": [],
            "description": "Уникальный ключ. ID, UUID или другое",
            "required": true,
            "type": "number | string",
            "example": null
        },
        "Size": {
            "name": "Size",
            "decorators": [],
            "description": "Размер элемента",
            "required": true,
            "type": "\"small\" | \"middle\" | \"large\" | string",
            "example": null
        },
        "IAvatarGroupViewProps": {
            "name": "IAvatarGroupViewProps",
            "decorators": [],
            "description": "",
            "required": true,
            "type": "AvatarGroupProps",
            "example": null
        },
        "ICardViewProps": {
            "name": "ICardViewProps",
            "decorators": [],
            "description": "",
            "required": true,
            "type": "ICardProps",
            "example": null
        },
        "IHeaderViewProps": {
            "name": "IHeaderViewProps",
            "decorators": [],
            "description": "",
            "required": true,
            "type": "IHeaderProps",
            "example": null
        },
        "IEmptyViewProps": {
            "name": "IEmptyViewProps",
            "decorators": [],
            "description": "",
            "required": true,
            "type": "IEmptyProps",
            "example": null
        },
        "ILayoutNamesViewProps": {
            "name": "ILayoutNamesViewProps",
            "decorators": [],
            "description": "",
            "required": true,
            "type": "ILayoutNamesProps",
            "example": null
        },
        "IModalViewProps": {
            "name": "IModalViewProps",
            "decorators": [],
            "description": "",
            "required": true,
            "type": "IModalProps",
            "example": null
        },
        "IBreadcrumbsViewProps": {
            "name": "IBreadcrumbsViewProps",
            "decorators": [],
            "description": "",
            "required": true,
            "type": "IBreadcrumbsProps",
            "example": null
        },
        "ILinkViewProps": {
            "name": "ILinkViewProps",
            "decorators": [],
            "description": "",
            "required": true,
            "type": "IButtonViewProps",
            "example": null
        }
    },
    "demos": {
        "content": {
            "Alert": {
                "description": {
                    "order": "2",
                    "col": "12",
                    "title": null,
                    "description": "Header+text with icon\nHeader+text without icon"
                },
                "icon": {
                    "order": "1",
                    "col": "12",
                    "title": null,
                    "description": "Header with icon and without icon"
                },
                "text": {
                    "order": "3",
                    "col": "12",
                    "title": null,
                    "description": "Text with icon and without icon"
                }
            },
            "Avatar": {
                "custome size": {
                    "order": "4",
                    "col": "3",
                    "title": null,
                    "description": "Custom size in numbers"
                },
                "group": {
                    "order": "5",
                    "col": "12",
                    "title": null,
                    "description": "Group of avatars"
                },
                "shape": {
                    "order": "3",
                    "col": "3",
                    "title": null,
                    "description": "Basic sizes with image source, online status and square shape"
                },
                "size": {
                    "order": "1",
                    "col": "3",
                    "title": null,
                    "description": "Basic sizes with image source and online status"
                },
                "title": {
                    "order": "2",
                    "col": "3",
                    "title": null,
                    "description": "Basic sizes with title and online status"
                }
            },
            "Calendar": {
                "basic": {
                    "order": "1",
                    "col": "5",
                    "title": null,
                    "description": "Basic"
                }
            },
            "Card": {
                "basic": {
                    "order": "4",
                    "col": "12",
                    "title": null,
                    "description": "Body"
                },
                "border color": {
                    "order": "7",
                    "col": "12",
                    "title": null,
                    "description": "Border color types"
                },
                "color": {
                    "order": "6",
                    "col": "12",
                    "title": null,
                    "description": "Color types"
                },
                "header": {
                    "order": "3",
                    "col": "12",
                    "title": null,
                    "description": "Header and footer"
                },
                "hover": {
                    "order": "1",
                    "col": "8",
                    "title": null,
                    "description": "Hover image"
                },
                "link": {
                    "order": "2",
                    "col": "4",
                    "title": null,
                    "description": "Titles, text, and links"
                },
                "orientation": {
                    "order": "5",
                    "col": "12",
                    "title": null,
                    "description": "Card with different orientation"
                }
            },
            "Collapse": {
                "accordion": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "Accordion mode"
                },
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                },
                "borderless": {
                    "order": "3",
                    "col": "6",
                    "title": null,
                    "description": "Borderless mode"
                },
                "disable": {
                    "order": "4",
                    "col": "6",
                    "title": null,
                    "description": "Disable CollapseItem"
                },
                "icon": {
                    "order": "5",
                    "col": "12",
                    "title": null,
                    "description": "Custom icon"
                },
                "icon position": {
                    "order": "7",
                    "col": "6",
                    "title": null,
                    "description": "Icon position left or right"
                },
                "onChange": {
                    "order": "8",
                    "col": "6",
                    "title": null,
                    "description": "Anonymous function every time you change state of Collapse"
                },
                "show icon": {
                    "order": "6",
                    "col": "6",
                    "title": null,
                    "description": "Show or hide icon"
                }
            },
            "Detail": {
                "basic": {
                    "order": "1",
                    "col": "8",
                    "title": null,
                    "description": "Basic table with title"
                },
                "controls": {
                    "order": "3",
                    "col": "8",
                    "title": null,
                    "description": "Table with controls"
                },
                "layout": {
                    "order": "4",
                    "col": "8",
                    "title": null,
                    "description": "Table with vertical layout"
                },
                "responsive": {
                    "order": "4",
                    "col": "8",
                    "title": null,
                    "description": "When the screen width resizes, the number of columns changes"
                },
                "sizes": {
                    "order": "2",
                    "col": "8",
                    "title": null,
                    "description": "Table with different cell's sizes"
                }
            }
        },
        "crud": {
            "Crud": {
                "default": {
                    "order": "1",
                    "col": "8",
                    "title": null,
                    "description": "Default"
                }
            }
        },
        "form": {
            "AutoCompleteField": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                },
                "disabled": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "4",
                    "col": "6",
                    "title": null,
                    "description": "Errors"
                },
                "placeholder": {
                    "order": "5",
                    "col": "6",
                    "title": null,
                    "description": "Placeholder"
                },
                "required": {
                    "order": "3",
                    "col": "6",
                    "title": null,
                    "description": "Required"
                },
                "sizes": {
                    "order": "6",
                    "col": "12",
                    "title": null,
                    "description": "Sizes"
                }
            },
            "BlankField": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                }
            },
            "Button": {
                "badge": {
                    "order": "3",
                    "col": "4",
                    "title": null,
                    "description": "Basic"
                },
                "basic": {
                    "order": "1",
                    "col": "4",
                    "title": null,
                    "description": "Basic"
                },
                "block": {
                    "order": "4",
                    "col": "4",
                    "title": null,
                    "description": "Block button"
                },
                "colors": {
                    "order": "5",
                    "col": "12",
                    "title": null,
                    "description": "Colors"
                },
                "confirm": {
                    "order": "6",
                    "col": "4",
                    "title": null,
                    "description": "Button with confirm"
                },
                "disabled": {
                    "order": "2",
                    "col": "4",
                    "title": null,
                    "description": "Disabled"
                },
                "hint": {
                    "order": "7",
                    "col": "4",
                    "title": null,
                    "description": "Button with hint"
                },
                "icon": {
                    "order": "8",
                    "col": "4",
                    "title": null,
                    "description": "Button with icon"
                },
                "link": {
                    "order": "9",
                    "col": "4",
                    "title": null,
                    "description": "Link"
                },
                "sizes": {
                    "order": "10",
                    "col": "8",
                    "title": null,
                    "description": "Sizes"
                },
                "tags": {
                    "order": "11",
                    "col": "6",
                    "title": null,
                    "description": "Tags"
                }
            },
            "CheckboxField": {
                "basic": {
                    "order": "1",
                    "col": "4",
                    "title": null,
                    "description": "Basic"
                },
                "disabled": {
                    "order": "2",
                    "col": "4",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "4",
                    "col": "4",
                    "title": null,
                    "description": "Errors"
                },
                "required": {
                    "order": "3",
                    "col": "4",
                    "title": null,
                    "description": "Required"
                }
            },
            "CheckboxListField": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                },
                "disabled": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "4",
                    "col": "6",
                    "title": null,
                    "description": "Errors"
                },
                "required": {
                    "order": "3",
                    "col": "6",
                    "title": null,
                    "description": "Required"
                }
            },
            "DateField": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                },
                "disabled": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "4",
                    "col": "6",
                    "title": null,
                    "description": "Errors"
                },
                "icon": {
                    "order": "5",
                    "col": "6",
                    "title": null,
                    "description": "Icons"
                },
                "placeholder": {
                    "order": "6",
                    "col": "6",
                    "title": null,
                    "description": "Placeholder"
                },
                "required": {
                    "order": "3",
                    "col": "6",
                    "title": null,
                    "description": "Required"
                },
                "sizes": {
                    "order": "7",
                    "col": "12",
                    "title": null,
                    "description": "Sizes"
                }
            },
            "DateRangeField": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                }
            },
            "DateTimeField": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                },
                "disabled": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "4",
                    "col": "6",
                    "title": null,
                    "description": "Errors"
                },
                "icon": {
                    "order": "5",
                    "col": "6",
                    "title": null,
                    "description": "Справа в инпуте кастомная иконка"
                },
                "placeholder": {
                    "order": "6",
                    "col": "6",
                    "title": null,
                    "description": "Сообщение внутри импута"
                },
                "required": {
                    "order": "3",
                    "col": "6",
                    "title": null,
                    "description": "Required"
                },
                "showRemove": {
                    "order": "7",
                    "col": "6",
                    "title": null,
                    "description": "После введения датты при наведении показывается кнопка, удалить содержание внутри инпута"
                }
            },
            "DateTimeRangeField": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Можно выбрать точную дату с какого по какое время происходит какое-то событие с точностью до минуты"
                },
                "disabled": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "Оключён и без рамок"
                },
                "icon": {
                    "order": "3",
                    "col": "6",
                    "title": null,
                    "description": "Кастомная иконка справа выбранная по контексту"
                }
            },
            "DropDownField": {
                "auto-complete": {
                    "order": "5",
                    "col": "6",
                    "title": null,
                    "description": "Auto complete"
                },
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                },
                "disabled": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "4",
                    "col": "6",
                    "title": null,
                    "description": "Errors"
                },
                "multiple": {
                    "order": "6",
                    "col": "6",
                    "title": null,
                    "description": "Multiple"
                },
                "no-border": {
                    "order": "7",
                    "col": "6",
                    "title": null,
                    "description": "No border"
                },
                "placeholder": {
                    "order": "8",
                    "col": "6",
                    "title": null,
                    "description": "Search placeholder"
                },
                "required": {
                    "order": "3",
                    "col": "6",
                    "title": null,
                    "description": "Required"
                },
                "show-reset": {
                    "order": "9",
                    "col": "6",
                    "title": null,
                    "description": "Show reset"
                },
                "size": {
                    "order": "10",
                    "col": "6",
                    "title": null,
                    "description": "Sizes"
                }
            },
            "Field": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                },
                "component": {
                    "order": "3",
                    "col": "6",
                    "title": null,
                    "description": "Field with component"
                },
                "model": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "Field with model"
                }
            },
            "FieldLayout": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                },
                "errors": {
                    "order": "3",
                    "col": "6",
                    "title": null,
                    "description": "Errors"
                },
                "hint": {
                    "order": "4",
                    "col": "6",
                    "title": null,
                    "description": "Hint"
                },
                "layouts": {
                    "order": "5",
                    "col": "12",
                    "title": null,
                    "description": "Inline layout"
                },
                "required": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "Required"
                }
            },
            "FieldList": {
                "basic": {
                    "order": "1",
                    "col": "12",
                    "title": null,
                    "description": "Basic"
                }
            },
            "FieldSet": {
                "basic": {
                    "order": "1",
                    "col": "12",
                    "title": null,
                    "description": "Basic"
                }
            },
            "FileField": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Базовый FileField"
                }
            },
            "Form": {
                "basic": {
                    "order": "1",
                    "col": "12",
                    "title": null,
                    "description": "Basic"
                }
            },
            "HtmlField": {
                "basic": {
                    "order": "1",
                    "col": "12",
                    "title": null,
                    "description": "Basic"
                }
            },
            "InputField": {
                "addons": {
                    "order": "7",
                    "col": "3",
                    "title": null,
                    "description": "Addons"
                },
                "basic": {
                    "order": "1",
                    "col": "3",
                    "title": null,
                    "description": "Basic"
                },
                "disabled": {
                    "order": "2",
                    "col": "3",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "5",
                    "col": "3",
                    "title": null,
                    "description": "Errors"
                },
                "mask": {
                    "order": "6",
                    "col": "3",
                    "title": null,
                    "description": "Mask"
                },
                "placeholder": {
                    "order": "4",
                    "col": "3",
                    "title": null,
                    "description": "Placeholder"
                },
                "required": {
                    "order": "3",
                    "col": "3",
                    "title": null,
                    "description": "Required"
                },
                "sizes": {
                    "order": "9",
                    "col": "12",
                    "title": null,
                    "description": "Sizes"
                },
                "textAddons": {
                    "order": "8",
                    "col": "3",
                    "title": null,
                    "description": "TextAddons"
                },
                "types": {
                    "order": "9",
                    "col": "12",
                    "title": null,
                    "description": "Types"
                }
            },
            "NavField": {
                "basic": {
                    "order": "1",
                    "col": "3",
                    "title": null,
                    "description": "Basic"
                },
                "disabled": {
                    "order": "2",
                    "col": "3",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "4",
                    "col": "3",
                    "title": null,
                    "description": "Errors"
                },
                "required": {
                    "order": "3",
                    "col": "3",
                    "title": null,
                    "description": "Required"
                }
            },
            "NumberField": {
                "basic": {
                    "order": "1",
                    "col": "3",
                    "title": null,
                    "description": "Basic"
                },
                "disabled": {
                    "order": "2",
                    "col": "3",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "6",
                    "col": "4",
                    "title": null,
                    "description": "Errors"
                },
                "placeholder": {
                    "order": "4",
                    "col": "3",
                    "title": null,
                    "description": "Placeholder"
                },
                "required": {
                    "order": "3",
                    "col": "3",
                    "title": null,
                    "description": "Required"
                },
                "sizes": {
                    "order": "5",
                    "col": "8",
                    "title": null,
                    "description": "Sizes"
                }
            },
            "PasswordField": {
                "basic": {
                    "order": "1",
                    "col": "3",
                    "title": null,
                    "description": "Basic"
                },
                "disabled": {
                    "order": "2",
                    "col": "3",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "6",
                    "col": "4",
                    "title": null,
                    "description": "Errors"
                },
                "placeholder": {
                    "order": "4",
                    "col": "3",
                    "title": null,
                    "description": "Placeholder"
                },
                "required": {
                    "order": "3",
                    "col": "3",
                    "title": null,
                    "description": "Required"
                },
                "security": {
                    "order": "7",
                    "col": "3",
                    "title": null,
                    "description": "Security"
                },
                "sizes": {
                    "order": "5",
                    "col": "8",
                    "title": null,
                    "description": "Sizes"
                }
            },
            "RadioListField": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                },
                "disabled": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "4",
                    "col": "6",
                    "title": null,
                    "description": "Errors"
                },
                "required": {
                    "order": "3",
                    "col": "6",
                    "title": null,
                    "description": "Required"
                }
            },
            "RateField": {
                "allow-clear": {
                    "order": "5",
                    "col": "6",
                    "title": null,
                    "description": "Clear value with twice click on the last active star"
                },
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                },
                "default-value": {
                    "order": "6",
                    "col": "6",
                    "title": null,
                    "description": "Default value is equal 3"
                },
                "disabled": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "4",
                    "col": "6",
                    "title": null,
                    "description": "Errors"
                },
                "items-count": {
                    "order": "7",
                    "col": "6",
                    "title": null,
                    "description": "Max count of items is equal 3"
                },
                "required": {
                    "order": "3",
                    "col": "6",
                    "title": null,
                    "description": "Required"
                }
            },
            "ReCaptchaField": {
                "basic": {
                    "order": "1",
                    "col": "4",
                    "title": null,
                    "description": "Basic"
                }
            },
            "SliderField": {
                "basic": {
                    "order": "1",
                    "col": "4",
                    "title": null,
                    "description": "Basic"
                },
                "disabled": {
                    "order": "2",
                    "col": "4",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "4",
                    "col": "4",
                    "title": null,
                    "description": "Errors"
                },
                "min-max": {
                    "order": "6",
                    "col": "4",
                    "title": null,
                    "description": "Set min and max values"
                },
                "required": {
                    "order": "3",
                    "col": "4",
                    "title": null,
                    "description": "Required"
                },
                "size": {
                    "order": "5",
                    "col": "12",
                    "title": null,
                    "description": "Sizes"
                }
            },
            "SwitcherField": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                },
                "disabled": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "4",
                    "col": "6",
                    "title": null,
                    "description": "Errors"
                },
                "required": {
                    "order": "3",
                    "col": "6",
                    "title": null,
                    "description": "Required"
                }
            },
            "TextField": {
                "basic": {
                    "order": "1",
                    "col": "3",
                    "title": null,
                    "description": "Basic"
                },
                "disabled": {
                    "order": "2",
                    "col": "3",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "4",
                    "col": "3",
                    "title": null,
                    "description": "Errors"
                },
                "placeholder": {
                    "order": "5",
                    "col": "3",
                    "title": null,
                    "description": "Placeholder"
                },
                "required": {
                    "order": "3",
                    "col": "3",
                    "title": null,
                    "description": "Required"
                },
                "sizes": {
                    "order": "6",
                    "col": "12",
                    "title": null,
                    "description": "Sizes"
                },
                "submit": {
                    "order": "7",
                    "col": "3",
                    "title": null,
                    "description": "Submit on enter"
                }
            },
            "TimeField": {
                "basic": {
                    "order": "1",
                    "col": "3",
                    "title": null,
                    "description": "Basic"
                },
                "disabled": {
                    "order": "2",
                    "col": "3",
                    "title": null,
                    "description": "Disabled"
                },
                "errors": {
                    "order": "4",
                    "col": "3",
                    "title": null,
                    "description": "Errors"
                },
                "icon": {
                    "order": "5",
                    "col": "3",
                    "title": null,
                    "description": "Кастомная иконка спрваа в инпуте для удаления значения"
                },
                "no-border": {
                    "order": "7",
                    "col": "3",
                    "title": null,
                    "description": "Without border"
                },
                "placeholder": {
                    "order": "5",
                    "col": "3",
                    "title": null,
                    "description": "Placeholder"
                },
                "required": {
                    "order": "3",
                    "col": "3",
                    "title": null,
                    "description": "Required"
                },
                "show-remove": {
                    "order": "8",
                    "col": "3",
                    "title": null,
                    "description": "Show remove"
                }
            }
        },
        "list": {
            "CheckboxColumn": {
                "basic": {
                    "order": "1",
                    "col": "8",
                    "title": null,
                    "description": "Basic"
                }
            },
            "ControlsColumn": {
                "basic": {
                    "order": "1",
                    "col": "8",
                    "title": null,
                    "description": "Basic"
                }
            },
            "Empty": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                },
                "custom-text": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "With custom view"
                }
            },
            "Grid": {
                "basic": {
                    "order": "1",
                    "col": "8",
                    "title": null,
                    "description": "Basic"
                },
                "controls": {
                    "order": "9",
                    "col": "8",
                    "title": null,
                    "description": "Grid with controls"
                },
                "empty": {
                    "order": "2",
                    "col": "4",
                    "title": null,
                    "description": "Grid with empty data"
                },
                "formatter": {
                    "order": "7",
                    "col": "6",
                    "title": null,
                    "description": "Grid with DateFormatter (format: 'DD MMMM')"
                },
                "indexing": {
                    "order": "8",
                    "col": "8",
                    "title": null,
                    "description": "Grid with indexing items"
                },
                "inner-search-form": {
                    "order": "5",
                    "col": "8",
                    "title": null,
                    "description": "Grid with inner search form"
                },
                "load-more": {
                    "order": "4",
                    "col": "8",
                    "title": null,
                    "description": "Grid with load more"
                },
                "pagination": {
                    "order": "3",
                    "col": "8",
                    "title": null,
                    "description": "Grid with page numbers"
                },
                "search-form": {
                    "order": "6",
                    "col": "8",
                    "title": null,
                    "description": "Grid with search form"
                },
                "sort": {
                    "order": "7",
                    "col": "8",
                    "title": null,
                    "description": "Grid with sorting"
                },
                "visible": {
                    "order": "10",
                    "col": "8",
                    "title": null,
                    "description": "Grid with invisible column (column Work - visible: false)"
                }
            },
            "LayoutNames": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "List with layout switcher"
                }
            },
            "List": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                },
                "condition": {
                    "order": "7",
                    "col": "6",
                    "title": null,
                    "description": "List with filtration by custom condition"
                },
                "empty": {
                    "order": "3",
                    "col": "6",
                    "title": null,
                    "description": "Empty view with custom text when no items"
                },
                "layout": {
                    "order": "5",
                    "col": "6",
                    "title": null,
                    "description": "List with layout switcher"
                },
                "load-more": {
                    "order": "4",
                    "col": "6",
                    "title": null,
                    "description": "List with load more and show sizes switcher"
                },
                "pagination": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "Pagination with page numbers and custom position (show both: top and bottom)"
                },
                "search-form": {
                    "order": "6",
                    "col": "6",
                    "title": null,
                    "description": "List with search form, address bar and custom pagination"
                },
                "sort": {
                    "order": "8",
                    "col": "6",
                    "title": null,
                    "description": "List with sorting"
                }
            },
            "Pagination": {
                "basic": {
                    "order": "1",
                    "col": "4",
                    "title": null,
                    "description": "Basic"
                },
                "load-more": {
                    "order": "2",
                    "col": "4",
                    "title": null,
                    "description": "Load more"
                },
                "sizes": {
                    "order": "3",
                    "col": "12",
                    "title": null,
                    "description": "Sizes"
                }
            },
            "PaginationSize": {
                "basic": {
                    "order": "1",
                    "col": "3",
                    "title": null,
                    "description": "Basic"
                },
                "size": {
                    "order": "2",
                    "col": "12",
                    "title": null,
                    "description": "Sizes"
                }
            },
            "SearchForm": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "List with search form"
                }
            }
        },
        "modal": {
            "Modal": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Простой пример Modal, с заданным заголовком и контентом."
                },
                "closeTimeout": {
                    "order": "5",
                    "col": "6",
                    "title": null,
                    "description": "Настройка времени, через которое произойдет закрытие Modal."
                },
                "closing": {
                    "order": "4",
                    "col": "6",
                    "title": null,
                    "description": "Обработка закрытия Modal при помощи onClose.\nТакже это модальное окно не закроется при нажатии на клавишу 'ESC' или клике на overlay."
                },
                "component": {
                    "order": "6",
                    "col": "6",
                    "title": null,
                    "description": "Контент для Modal также можно задать через свойство component.\nПри этом, в action openModal необязательно передавать отдельный компонент, построенный на базе Modal.\nМожно передать сам Modal, контент настроить уже через свойства Modal."
                },
                "controls": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "Modal содержит набор контролов с привязанными обработчиками."
                },
                "size": {
                    "order": "3",
                    "col": "12",
                    "title": null,
                    "description": "По-умолчанию, Modal имеет 3 заданных размера."
                }
            }
        },
        "nav": {
            "Breadcrumbs": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                },
                "page-title": {
                    "order": "2",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                }
            },
            "Controls": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                }
            },
            "Link": {
                "badge": {
                    "order": "3",
                    "col": "4",
                    "title": null,
                    "description": "Link with badge"
                },
                "basic": {
                    "order": "1",
                    "col": "4",
                    "title": null,
                    "description": "Basic"
                },
                "colors": {
                    "order": "4",
                    "col": "8",
                    "title": null,
                    "description": "Colors"
                },
                "confirm": {
                    "order": "7",
                    "col": "4",
                    "title": null,
                    "description": "Confirm"
                },
                "disabled": {
                    "order": "3",
                    "col": "4",
                    "title": null,
                    "description": "Disabled"
                },
                "hint": {
                    "order": "4",
                    "col": "4",
                    "title": null,
                    "description": "Hint"
                },
                "icon": {
                    "order": "6",
                    "col": "4",
                    "title": null,
                    "description": "Link with icon"
                },
                "sizes": {
                    "order": "5",
                    "col": "8",
                    "title": null,
                    "description": "Sizes"
                }
            },
            "Nav": {
                "basic": {
                    "order": "1",
                    "col": "6",
                    "title": null,
                    "description": "Basic"
                },
                "layout": {
                    "order": "2",
                    "col": "12",
                    "title": null,
                    "description": "Nav with different layouts"
                }
            },
            "Tree": {
                "auto-open-levels": {
                    "order": "3",
                    "col": "8",
                    "title": null,
                    "description": "The max opened nesting level is 3"
                },
                "basic": {
                    "order": "1",
                    "col": "8",
                    "title": null,
                    "description": "Basic"
                },
                "level": {
                    "order": "2",
                    "col": "8",
                    "title": null,
                    "description": "The max available nesting level is 2"
                },
                "routes": {
                    "order": "5",
                    "col": "8",
                    "title": null,
                    "description": "Tree of routes"
                },
                "selected-item": {
                    "order": "4",
                    "col": "8",
                    "title": null,
                    "description": "'label 4' is specially opened node"
                }
            }
        }
    },
    "components": {
        "base/Enum": {
            "name": "default",
            "moduleName": "base/Enum",
            "title": "",
            "description": "",
            "tags": {},
            "properties": [],
            "methods": [
                {
                    "name": "getCssClass",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null,
                    "parameters": [
                        {
                            "name": "id",
                            "decorators": [],
                            "description": "",
                            "required": true,
                            "type": "any",
                            "example": null
                        }
                    ]
                },
                {
                    "name": "getCssClasses",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null,
                    "parameters": []
                },
                {
                    "name": "getDropdownItems",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{id: string, label: unknown}[]",
                    "example": null,
                    "parameters": []
                },
                {
                    "name": "getKeys",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string[]",
                    "example": null,
                    "parameters": []
                },
                {
                    "name": "getLabel",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null,
                    "parameters": [
                        {
                            "name": "id",
                            "decorators": [],
                            "description": "",
                            "required": true,
                            "type": "any",
                            "example": null
                        }
                    ]
                },
                {
                    "name": "getLabels",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null,
                    "parameters": []
                }
            ]
        },
        "components/ApiComponent": {
            "name": "default",
            "moduleName": "components/ApiComponent",
            "title": "Http Component",
            "description": "Обертка над Axios для запросов на бекенд. Поддерживает токен авторизации, CSRF и обработку ошибок.",
            "tags": {},
            "properties": [],
            "methods": []
        },
        "components/ClientStorageComponent": {
            "name": "default",
            "moduleName": "components/ClientStorageComponent",
            "title": "Client Storage Component",
            "description": "Слой хранения данных в браузере (cookie, local/session storage) или ReactNative",
            "tags": {},
            "properties": [],
            "methods": []
        },
        "components/HtmlComponent": {
            "name": "default",
            "moduleName": "components/HtmlComponent",
            "title": "Html Component",
            "description": "Хелпер для работы с БЭМ классами и DOM элементами",
            "tags": {},
            "properties": [],
            "methods": []
        },
        "components/HttpComponent": {
            "name": "default",
            "moduleName": "components/HttpComponent",
            "title": "Http Component",
            "description": "Обертка над Axios для запросов на бекенд. Поддерживает токен авторизации, CSRF и обработку ошибок.",
            "tags": {},
            "properties": [],
            "methods": []
        },
        "components/LocaleComponent": {
            "name": "default",
            "moduleName": "components/LocaleComponent",
            "title": "Locale Component",
            "description": "Компонент для локализации приложения. Поддерживает конфигурацию языка и временной зоны\n\nПример строки: `{__('{count} {count, plural, one{день} few{дня} many{дней}}', {count: 2})}`\n",
            "tags": {},
            "properties": [
                {
                    "name": "language",
                    "decorators": [],
                    "description": "Язык приложения",
                    "required": true,
                    "type": "string",
                    "example": "ru"
                }
            ],
            "methods": [
                {
                    "name": "moment",
                    "decorators": [],
                    "description": "Получение экземпляра `moment` с учетом временной зоны бекенда",
                    "required": true,
                    "type": "Moment",
                    "example": null,
                    "parameters": [
                        {
                            "name": "date",
                            "decorators": [],
                            "description": "Дата",
                            "required": true,
                            "type": "string",
                            "example": null
                        },
                        {
                            "name": "format",
                            "decorators": [],
                            "description": "Формат\n",
                            "required": true,
                            "type": "string",
                            "example": null
                        }
                    ]
                }
            ]
        },
        "components/MetaComponent": {
            "name": "default",
            "moduleName": "components/MetaComponent",
            "title": "Meta Component",
            "description": "Компонент для работы с мета-данными моделей и типами приложения (appType)",
            "tags": {},
            "properties": [],
            "methods": []
        },
        "components/MetricsComponent": {
            "name": "default",
            "moduleName": "components/MetricsComponent",
            "title": "",
            "description": "",
            "tags": {},
            "properties": [],
            "methods": []
        },
        "components/ResourceComponent": {
            "name": "default",
            "moduleName": "components/ResourceComponent",
            "title": "Resource Component",
            "description": "Компонент для подгрузки внешних API: Google Maps, Yandex Maps, Twitter, ...",
            "tags": {},
            "properties": [],
            "methods": []
        },
        "components/SocialComponent": {
            "name": "default",
            "moduleName": "components/SocialComponent",
            "title": "Social Component",
            "description": "Провайдер для социальных сетей. Обеспечивает вызов окна соц сети для oauth авторизации",
            "tags": {},
            "properties": [],
            "methods": []
        },
        "components/StoreComponent": {
            "name": "default",
            "moduleName": "components/StoreComponent",
            "title": "Store Component",
            "description": "Обертка над Redux Store со встроенными middleware (thunk, multi, promise..) и react-router",
            "tags": {},
            "properties": [],
            "methods": []
        },
        "components/UiComponent": {
            "name": "default",
            "moduleName": "components/UiComponent",
            "title": "Ui Component",
            "description": "Компонент для подгрузки и конфигурации UI компонентов приложения",
            "tags": {},
            "properties": [],
            "methods": []
        },
        "components/WebSocketComponent": {
            "name": "default",
            "moduleName": "components/WebSocketComponent",
            "title": "",
            "description": "",
            "tags": {},
            "properties": [],
            "methods": []
        },
        "components/social/FacebookProvider": {
            "name": "default",
            "moduleName": "components/social/FacebookProvider",
            "title": "",
            "description": "",
            "tags": {},
            "properties": [],
            "methods": []
        },
        "components/social/GoogleProvider": {
            "name": "default",
            "moduleName": "components/social/GoogleProvider",
            "title": "",
            "description": "",
            "tags": {},
            "properties": [],
            "methods": []
        },
        "components/social/SteamProvider": {
            "name": "default",
            "moduleName": "components/social/SteamProvider",
            "title": "",
            "description": "",
            "tags": {},
            "properties": [],
            "methods": []
        },
        "components/social/VkProvider": {
            "name": "default",
            "moduleName": "components/social/VkProvider",
            "title": "",
            "description": "",
            "tags": {},
            "properties": [],
            "methods": []
        },
        "providers/ComponentsProvider": {
            "name": "default",
            "moduleName": "providers/ComponentsProvider",
            "title": "",
            "description": "",
            "tags": {}
        },
        "providers/ScreenProvider": {
            "name": "default",
            "moduleName": "providers/ScreenProvider",
            "title": "",
            "description": "",
            "tags": {}
        },
        "providers/SsrProvider": {
            "name": "default",
            "moduleName": "providers/SsrProvider",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/content/Alert/Alert": {
            "name": "default",
            "moduleName": "ui/content/Alert/Alert",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/content/Detail/Detail": {
            "name": "default",
            "moduleName": "ui/content/Detail/Detail",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/content/Detail/DetailItem": {
            "name": "default",
            "moduleName": "ui/content/Detail/DetailItem",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/content/DropDown/DropDown": {
            "name": "default",
            "moduleName": "ui/content/DropDown/DropDown",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/crud/Crud/Crud": {
            "name": "default",
            "moduleName": "ui/crud/Crud/Crud",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/crud/Crud/CrudContent": {
            "name": "default",
            "moduleName": "ui/crud/Crud/CrudContent",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/crud/Crud/CrudModal": {
            "name": "default",
            "moduleName": "ui/crud/Crud/CrudModal",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/AutoCompleteField/AutoCompleteField": {
            "name": "default",
            "moduleName": "ui/form/AutoCompleteField/AutoCompleteField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/BlankField/BlankField": {
            "name": "default",
            "moduleName": "ui/form/BlankField/BlankField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/Button/Button": {
            "name": "default",
            "moduleName": "ui/form/Button/Button",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/CheckboxField/CheckboxField": {
            "name": "default",
            "moduleName": "ui/form/CheckboxField/CheckboxField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/CheckboxListField/CheckboxListField": {
            "name": "default",
            "moduleName": "ui/form/CheckboxListField/CheckboxListField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/DateField/DateField": {
            "name": "default",
            "moduleName": "ui/form/DateField/DateField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/DateRangeField/DateRangeField": {
            "name": "default",
            "moduleName": "ui/form/DateRangeField/DateRangeField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/DateTimeField/DateTimeField": {
            "name": "default",
            "moduleName": "ui/form/DateTimeField/DateTimeField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/DateTimeRangeField/DateTimeRangeField": {
            "name": "default",
            "moduleName": "ui/form/DateTimeRangeField/DateTimeRangeField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/DropDownField/DropDownField": {
            "name": "default",
            "moduleName": "ui/form/DropDownField/DropDownField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/Field/Field": {
            "name": "default",
            "moduleName": "ui/form/Field/Field",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/FieldLayout/FieldLayout": {
            "name": "default",
            "moduleName": "ui/form/FieldLayout/FieldLayout",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/FieldList/FieldList": {
            "name": "default",
            "moduleName": "ui/form/FieldList/FieldList",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/FieldSet/FieldSet": {
            "name": "default",
            "moduleName": "ui/form/FieldSet/FieldSet",
            "title": "",
            "description": "",
            "tags": {},
            "properties": [],
            "methods": [
                {
                    "name": "render",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "Element",
                    "example": null,
                    "parameters": []
                }
            ]
        },
        "ui/form/FileField/FileField": {
            "name": "default",
            "moduleName": "ui/form/FileField/FileField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/Form/AutoSaveHelper": {
            "name": "default",
            "moduleName": "ui/form/Form/AutoSaveHelper",
            "title": "",
            "description": "",
            "tags": {},
            "properties": [
                {
                    "name": "STORAGE_KEY_PREFIX",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "string",
                    "example": null
                }
            ],
            "methods": [
                {
                    "name": "remove",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "void",
                    "example": null,
                    "parameters": [
                        {
                            "name": "clientStorage",
                            "decorators": [],
                            "description": "",
                            "required": true,
                            "type": "any",
                            "example": null
                        },
                        {
                            "name": "formId",
                            "decorators": [],
                            "description": "",
                            "required": true,
                            "type": "any",
                            "example": null
                        }
                    ]
                },
                {
                    "name": "restore",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null,
                    "parameters": [
                        {
                            "name": "clientStorage",
                            "decorators": [],
                            "description": "",
                            "required": true,
                            "type": "any",
                            "example": null
                        },
                        {
                            "name": "formId",
                            "decorators": [],
                            "description": "",
                            "required": true,
                            "type": "any",
                            "example": null
                        },
                        {
                            "name": "initialValues",
                            "decorators": [],
                            "description": "",
                            "required": true,
                            "type": "any",
                            "example": null
                        }
                    ]
                },
                {
                    "name": "save",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "void",
                    "example": null,
                    "parameters": [
                        {
                            "name": "clientStorage",
                            "decorators": [],
                            "description": "",
                            "required": true,
                            "type": "any",
                            "example": null
                        },
                        {
                            "name": "formId",
                            "decorators": [],
                            "description": "",
                            "required": true,
                            "type": "any",
                            "example": null
                        },
                        {
                            "name": "values",
                            "decorators": [],
                            "description": "",
                            "required": true,
                            "type": "any",
                            "example": null
                        }
                    ]
                }
            ]
        },
        "ui/form/Form/Form": {
            "name": "default",
            "moduleName": "ui/form/Form/Form",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/Form/SyncAddressBarHelper": {
            "name": "default",
            "moduleName": "ui/form/Form/SyncAddressBarHelper",
            "title": "",
            "description": "",
            "tags": {},
            "properties": [],
            "methods": [
                {
                    "name": "cleanValues",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "{}",
                    "example": null,
                    "parameters": [
                        {
                            "name": "values",
                            "decorators": [],
                            "description": "",
                            "required": true,
                            "type": "{}",
                            "example": null
                        }
                    ]
                },
                {
                    "name": "restore",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null,
                    "parameters": [
                        {
                            "name": "initialValues",
                            "decorators": [],
                            "description": "",
                            "required": true,
                            "type": "any",
                            "example": null
                        },
                        {
                            "name": "customizer",
                            "decorators": [],
                            "description": "",
                            "required": true,
                            "type": "any",
                            "example": null
                        }
                    ]
                },
                {
                    "name": "save",
                    "decorators": [],
                    "description": "WARNING\nMethod incorrectly saves nested objects (e.g. {foo: [{bar: 1}]}",
                    "required": true,
                    "type": "void",
                    "example": null,
                    "parameters": [
                        {
                            "name": "store",
                            "decorators": [],
                            "description": "",
                            "required": true,
                            "type": "any",
                            "example": null
                        },
                        {
                            "name": "values",
                            "decorators": [],
                            "description": "",
                            "required": true,
                            "type": "any",
                            "example": null
                        },
                        {
                            "name": "useHash",
                            "decorators": [],
                            "description": "\n",
                            "required": true,
                            "type": "boolean",
                            "example": null
                        }
                    ]
                }
            ]
        },
        "ui/form/HtmlField/HtmlField": {
            "name": "default",
            "moduleName": "ui/form/HtmlField/HtmlField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/ImageField/ImageField": {
            "name": "default",
            "moduleName": "ui/form/ImageField/ImageField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/InputField/InputField": {
            "name": "default",
            "moduleName": "ui/form/InputField/InputField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/NavField/NavField": {
            "name": "default",
            "moduleName": "ui/form/NavField/NavField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/NumberField/NumberField": {
            "name": "default",
            "moduleName": "ui/form/NumberField/NumberField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/PasswordField/PasswordField": {
            "name": "default",
            "moduleName": "ui/form/PasswordField/PasswordField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/RadioListField/RadioListField": {
            "name": "default",
            "moduleName": "ui/form/RadioListField/RadioListField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/RateField/RateField": {
            "name": "default",
            "moduleName": "ui/form/RateField/RateField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/ReCaptchaField/ReCaptchaField": {
            "name": "default",
            "moduleName": "ui/form/ReCaptchaField/ReCaptchaField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/SliderField/SliderField": {
            "name": "default",
            "moduleName": "ui/form/SliderField/SliderField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/SwitcherField/SwitcherField": {
            "name": "default",
            "moduleName": "ui/form/SwitcherField/SwitcherField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/TextField/TextField": {
            "name": "default",
            "moduleName": "ui/form/TextField/TextField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/form/TimeField/TimeField": {
            "name": "default",
            "moduleName": "ui/form/TimeField/TimeField",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/format/BooleanFormatter/BooleanFormatter": {
            "name": "default",
            "moduleName": "ui/format/BooleanFormatter/BooleanFormatter",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/format/DateFormatter/DateFormatter": {
            "name": "default",
            "moduleName": "ui/format/DateFormatter/DateFormatter",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/format/DateTimeFormatter/DateTimeFormatter": {
            "name": "default",
            "moduleName": "ui/format/DateTimeFormatter/DateTimeFormatter",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/format/EnumFormatter/EnumFormatter": {
            "name": "default",
            "moduleName": "ui/format/EnumFormatter/EnumFormatter",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/format/FileSize/FileSize": {
            "name": "default",
            "moduleName": "ui/format/FileSize/FileSize",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/format/Format/Format": {
            "name": "default",
            "moduleName": "ui/format/Format/Format",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/format/MoneyFormatter/MoneyFormatter": {
            "name": "default",
            "moduleName": "ui/format/MoneyFormatter/MoneyFormatter",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/icon/Icon/Icon": {
            "name": "default",
            "moduleName": "ui/icon/Icon/Icon",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/layout/Header/Header": {
            "name": "default",
            "moduleName": "ui/layout/Header/Header",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/layout/Loader/Loader": {
            "name": "default",
            "moduleName": "ui/layout/Loader/Loader",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/layout/Notifications/Notifications": {
            "name": "default",
            "moduleName": "ui/layout/Notifications/Notifications",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/layout/ProgressBar/ProgressBar": {
            "name": "default",
            "moduleName": "ui/layout/ProgressBar/ProgressBar",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/layout/Skeleton/Skeleton": {
            "name": "default",
            "moduleName": "ui/layout/Skeleton/Skeleton",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/layout/Tooltip/Tooltip": {
            "name": "default",
            "moduleName": "ui/layout/Tooltip/Tooltip",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/layout/Tooltip/TooltipPortalInner": {
            "name": "default",
            "moduleName": "ui/layout/Tooltip/TooltipPortalInner",
            "title": "",
            "description": "",
            "tags": {},
            "properties": [],
            "methods": [
                {
                    "name": "componentDidMount",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "void",
                    "example": null,
                    "parameters": []
                },
                {
                    "name": "render",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "any",
                    "example": null,
                    "parameters": []
                }
            ]
        },
        "ui/list/CheckboxColumn/CheckboxColumn": {
            "name": "default",
            "moduleName": "ui/list/CheckboxColumn/CheckboxColumn",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/list/ControlsColumn/ControlsColumn": {
            "name": "default",
            "moduleName": "ui/list/ControlsColumn/ControlsColumn",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/list/Empty/Empty": {
            "name": "default",
            "moduleName": "ui/list/Empty/Empty",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/list/Grid/Grid": {
            "name": "default",
            "moduleName": "ui/list/Grid/Grid",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/list/LayoutNames/LayoutNames": {
            "name": "default",
            "moduleName": "ui/list/LayoutNames/LayoutNames",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/list/List/List": {
            "name": "default",
            "moduleName": "ui/list/List/List",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/list/Pagination/Pagination": {
            "name": "default",
            "moduleName": "ui/list/Pagination/Pagination",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/list/PaginationSize/PaginationSize": {
            "name": "default",
            "moduleName": "ui/list/PaginationSize/PaginationSize",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/list/SearchForm/SearchForm": {
            "name": "default",
            "moduleName": "ui/list/SearchForm/SearchForm",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/list/Steps/Steps": {
            "name": "default",
            "moduleName": "ui/list/Steps/Steps",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/modal/Modal/Modal": {
            "name": "default",
            "moduleName": "ui/modal/Modal/Modal",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/modal/ModalPortal/ModalPortal": {
            "name": "default",
            "moduleName": "ui/modal/ModalPortal/ModalPortal",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/modal/TwoFactorModal/TwoFactorModal": {
            "name": "default",
            "moduleName": "ui/modal/TwoFactorModal/TwoFactorModal",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/nav/Breadcrumbs/Breadcrumbs": {
            "name": "default",
            "moduleName": "ui/nav/Breadcrumbs/Breadcrumbs",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/nav/Controls/Controls": {
            "name": "default",
            "moduleName": "ui/nav/Controls/Controls",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/nav/Link/Link": {
            "name": "default",
            "moduleName": "ui/nav/Link/Link",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/nav/Nav/Nav": {
            "name": "default",
            "moduleName": "ui/nav/Nav/Nav",
            "title": "",
            "description": "",
            "tags": {}
        },
        "ui/nav/Router/ConnectedRouter": {
            "name": "default",
            "moduleName": "ui/nav/Router/ConnectedRouter",
            "title": "",
            "description": "",
            "tags": {},
            "properties": [
                {
                    "name": "inTimeTravelling",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "unlisten",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                },
                {
                    "name": "unsubscribe",
                    "decorators": [],
                    "description": "",
                    "required": false,
                    "type": "any",
                    "example": null
                }
            ],
            "methods": [
                {
                    "name": "componentWillUnmount",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "void",
                    "example": null,
                    "parameters": []
                },
                {
                    "name": "render",
                    "decorators": [],
                    "description": "",
                    "required": true,
                    "type": "Element",
                    "example": null,
                    "parameters": []
                }
            ]
        },
        "ui/nav/Router/Router": {
            "name": "default",
            "moduleName": "ui/nav/Router/Router",
            "title": "",
            "description": "",
            "tags": {}
        }
    }
}